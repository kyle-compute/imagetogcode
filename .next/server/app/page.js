/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "(rsc)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"d88dc6b14989\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvYXBwL2dsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiZDg4ZGM2YjE0OTg5XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/globals.css\n");

/***/ }),

/***/ "(rsc)/./app/layout.tsx":
/*!************************!*\
  !*** ./app/layout.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/font/google/target.css?{\"path\":\"app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"]}],\"variableName\":\"inter\"} */ \"(rsc)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"inter\\\"}\");\n/* harmony import */ var next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globals.css */ \"(rsc)/./app/globals.css\");\n\n\n\nconst metadata = {\n    title: \"Create Next App\",\n    description: \"Generated by create next app\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"head\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                    async: true,\n                    src: \"https://docs.opencv.org/4.10.0/opencv.js\"\n                }, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/layout.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/layout.tsx\",\n                lineNumber: 19,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n                className: (next_font_google_target_css_path_app_layout_tsx_import_Inter_arguments_subsets_latin_variableName_inter___WEBPACK_IMPORTED_MODULE_2___default().className),\n                children: children\n            }, void 0, false, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/layout.tsx\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/layout.tsx\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGF5b3V0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUlNQTtBQUZpQjtBQUloQixNQUFNQyxXQUFxQjtJQUNoQ0MsT0FBTztJQUNQQyxhQUFhO0FBQ2YsRUFBRTtBQUVhLFNBQVNDLFdBQVcsRUFDakNDLFFBQVEsRUFHUjtJQUNBLHFCQUNFLDhEQUFDQztRQUFLQyxNQUFLOzswQkFDVCw4REFBQ0M7MEJBQ0MsNEVBQUNDO29CQUNDQyxLQUFLO29CQUNMQyxLQUFJOzs7Ozs7Ozs7OzswQkFHUiw4REFBQ0M7Z0JBQUtDLFdBQVdiLDJKQUFlOzBCQUFHSzs7Ozs7Ozs7Ozs7O0FBR3pDIiwic291cmNlcyI6WyIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L2FwcC9sYXlvdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTWV0YWRhdGEgfSBmcm9tIFwibmV4dFwiO1xuaW1wb3J0IHsgSW50ZXIgfSBmcm9tIFwibmV4dC9mb250L2dvb2dsZVwiO1xuaW1wb3J0IFwiLi9nbG9iYWxzLmNzc1wiO1xuXG5jb25zdCBpbnRlciA9IEludGVyKHsgc3Vic2V0czogW1wibGF0aW5cIl0gfSk7XG5cbmV4cG9ydCBjb25zdCBtZXRhZGF0YTogTWV0YWRhdGEgPSB7XG4gIHRpdGxlOiBcIkNyZWF0ZSBOZXh0IEFwcFwiLFxuICBkZXNjcmlwdGlvbjogXCJHZW5lcmF0ZWQgYnkgY3JlYXRlIG5leHQgYXBwXCIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiBSZWFkb25seTx7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59Pikge1xuICByZXR1cm4gKFxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxuICAgICAgPGhlYWQ+XG4gICAgICAgIDxzY3JpcHRcbiAgICAgICAgICBhc3luY1xuICAgICAgICAgIHNyYz1cImh0dHBzOi8vZG9jcy5vcGVuY3Yub3JnLzQuMTAuMC9vcGVuY3YuanNcIlxuICAgICAgICA+PC9zY3JpcHQ+XG4gICAgICA8L2hlYWQ+XG4gICAgICA8Ym9keSBjbGFzc05hbWU9e2ludGVyLmNsYXNzTmFtZX0+e2NoaWxkcmVufTwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiaW50ZXIiLCJtZXRhZGF0YSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJSb290TGF5b3V0IiwiY2hpbGRyZW4iLCJodG1sIiwibGFuZyIsImhlYWQiLCJzY3JpcHQiLCJhc3luYyIsInNyYyIsImJvZHkiLCJjbGFzc05hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_ImageProcessor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ImageProcessor */ \"(rsc)/./components/ImageProcessor.tsx\");\n\n\nfunction Home() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"flex min-h-screen flex-col items-center justify-between p-24\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ImageProcessor__WEBPACK_IMPORTED_MODULE_1__.ImageProcessor, {}, void 0, false, {\n            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/page.tsx\",\n            lineNumber: 6,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/page.tsx\",\n        lineNumber: 5,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkQ7QUFFOUMsU0FBU0M7SUFDdEIscUJBQ0UsOERBQUNDO1FBQUtDLFdBQVU7a0JBQ2QsNEVBQUNILHNFQUFjQTs7Ozs7Ozs7OztBQUdyQiIsInNvdXJjZXMiOlsiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9hcHAvcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW1hZ2VQcm9jZXNzb3IgfSBmcm9tIFwiQC9jb21wb25lbnRzL0ltYWdlUHJvY2Vzc29yXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG4gIHJldHVybiAoXG4gICAgPG1haW4gY2xhc3NOYW1lPVwiZmxleCBtaW4taC1zY3JlZW4gZmxleC1jb2wgaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBwLTI0XCI+XG4gICAgICA8SW1hZ2VQcm9jZXNzb3IgLz5cbiAgICA8L21haW4+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiSW1hZ2VQcm9jZXNzb3IiLCJIb21lIiwibWFpbiIsImNsYXNzTmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/page.tsx\n");

/***/ }),

/***/ "(rsc)/./components/ImageProcessor.tsx":
/*!***************************************!*\
  !*** ./components/ImageProcessor.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageProcessor: () => (/* binding */ ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\nconst ImageProcessor = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call ImageProcessor() from the server but ImageProcessor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n\"ImageProcessor\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./components/ImageProcessor.tsx\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?cc4a\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/layout.tsx */ \"(rsc)/./app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/forbidden-error */ \"(rsc)/./node_modules/next/dist/client/components/forbidden-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/unauthorized-error */ \"(rsc)/./node_modules/next/dist/client/components/unauthorized-error.js\", 23));\nconst page4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/page.tsx */ \"(rsc)/./app/page.tsx\"));\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page4, \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/page.tsx\"],\n          \n        }]\n      },\n        {\n        'layout': [module0, \"/home/kel/Desktop/imagegen/image-to-gcode-next/app/layout.tsx\"],\n'not-found': [module1, \"next/dist/client/components/not-found-error\"],\n'forbidden': [module2, \"next/dist/client/components/forbidden-error\"],\n'unauthorized': [module3, \"next/dist/client/components/unauthorized-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"/home/kel/Desktop/imagegen/image-to-gcode-next/app/page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZwYWdlJnBhZ2U9JTJGcGFnZSZhcHBQYXRocz0lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGcGFnZS50c3gmYXBwRGlyPSUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGa2VsJTJGRGVza3RvcCUyRmltYWdlZ2VuJTJGaW1hZ2UtdG8tZ2NvZGUtbmV4dCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0JBQXNCLDRJQUFrRztBQUN4SCxzQkFBc0IsME5BQWdGO0FBQ3RHLHNCQUFzQiwwTkFBZ0Y7QUFDdEcsc0JBQXNCLGdPQUFtRjtBQUN6RyxvQkFBb0Isd0lBQWdHO0FBR2xIO0FBR0E7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUN1QjtBQUdyQjtBQUNGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUdFO0FBQ0Y7QUFDTyx3QkFBd0IsdUdBQWtCO0FBQ2pEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vZHVsZTAgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvYXBwL2xheW91dC50c3hcIik7XG5jb25zdCBtb2R1bGUxID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCIpO1xuY29uc3QgbW9kdWxlMiA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2ZvcmJpZGRlbi1lcnJvclwiKTtcbmNvbnN0IG1vZHVsZTMgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy91bmF1dGhvcml6ZWQtZXJyb3JcIik7XG5jb25zdCBwYWdlNCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9hcHAvcGFnZS50c3hcIik7XG5pbXBvcnQgeyBBcHBQYWdlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1wYWdlL21vZHVsZS5jb21waWxlZFwiIHdpdGgge1xuICAgICd0dXJib3BhY2stdHJhbnNpdGlvbic6ICduZXh0LXNzcidcbn07XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCIgd2l0aCB7XG4gICAgJ3R1cmJvcGFjay10cmFuc2l0aW9uJzogJ25leHQtc2VydmVyLXV0aWxpdHknXG59O1xuLy8gV2UgaW5qZWN0IHRoZSB0cmVlIGFuZCBwYWdlcyBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgdHJlZSA9IHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJycsXG4gICAgICAgIHtcbiAgICAgICAgY2hpbGRyZW46IFsnX19QQUdFX18nLCB7fSwge1xuICAgICAgICAgIHBhZ2U6IFtwYWdlNCwgXCIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L2FwcC9wYWdlLnRzeFwiXSxcbiAgICAgICAgICBcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgJ2xheW91dCc6IFttb2R1bGUwLCBcIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvYXBwL2xheW91dC50c3hcIl0sXG4nbm90LWZvdW5kJzogW21vZHVsZTEsIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbidmb3JiaWRkZW4nOiBbbW9kdWxlMiwgXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZm9yYmlkZGVuLWVycm9yXCJdLFxuJ3VuYXV0aG9yaXplZCc6IFttb2R1bGUzLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy91bmF1dGhvcml6ZWQtZXJyb3JcIl0sXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfS5jaGlsZHJlbjtcbmNvbnN0IHBhZ2VzID0gW1wiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9hcHAvcGFnZS50c3hcIl07XG5leHBvcnQgeyB0cmVlLCBwYWdlcyB9O1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHbG9iYWxFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZXJyb3ItYm91bmRhcnlcIiB3aXRoIHtcbiAgICAndHVyYm9wYWNrLXRyYW5zaXRpb24nOiAnbmV4dC1zZXJ2ZXItdXRpbGl0eSdcbn07XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmV4cG9ydCAqIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvZW50cnktYmFzZVwiIHdpdGgge1xuICAgICd0dXJib3BhY2stdHJhbnNpdGlvbic6ICduZXh0LXNlcnZlci11dGlsaXR5J1xufTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFBhZ2VSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1BBR0UsXG4gICAgICAgIHBhZ2U6IFwiL3BhZ2VcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJycsXG4gICAgICAgIGFwcFBhdGhzOiBbXVxuICAgIH0sXG4gICAgdXNlcmxhbmQ6IHtcbiAgICAgICAgbG9hZGVyVHJlZTogdHJlZVxuICAgIH1cbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fcomponents%2FImageProcessor.tsx%22%2C%22ids%22%3A%5B%22ImageProcessor%22%5D%7D&server=true!":
/*!******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fcomponents%2FImageProcessor.tsx%22%2C%22ids%22%3A%5B%22ImageProcessor%22%5D%7D&server=true! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ImageProcessor.tsx */ \"(rsc)/./components/ImageProcessor.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGY29tcG9uZW50cyUyRkltYWdlUHJvY2Vzc29yLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkltYWdlUHJvY2Vzc29yJTIyJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSwwS0FBcUoiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIkltYWdlUHJvY2Vzc29yXCJdICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9jb21wb25lbnRzL0ltYWdlUHJvY2Vzc29yLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fcomponents%2FImageProcessor.tsx%22%2C%22ids%22%3A%5B%22ImageProcessor%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmtlbCUyRkRlc2t0b3AlMkZpbWFnZWdlbiUyRmltYWdlLXRvLWdjb2RlLW5leHQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGa2VsJTJGRGVza3RvcCUyRmltYWdlZ2VuJTJGaW1hZ2UtdG8tZ2NvZGUtbmV4dCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGa2VsJTJGRGVza3RvcCUyRmltYWdlZ2VuJTJGaW1hZ2UtdG8tZ2NvZGUtbmV4dCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmxheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmtlbCUyRkRlc2t0b3AlMkZpbWFnZWdlbiUyRmltYWdlLXRvLWdjb2RlLW5leHQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZtZXRhZGF0YSUyRmFzeW5jLW1ldGFkYXRhLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGa2VsJTJGRGVza3RvcCUyRmltYWdlZ2VuJTJGaW1hZ2UtdG8tZ2NvZGUtbmV4dCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9PQUEySTtBQUMzSTtBQUNBLDBPQUE4STtBQUM5STtBQUNBLDBPQUE4STtBQUM5STtBQUNBLG9SQUFtSztBQUNuSztBQUNBLHdPQUE2STtBQUM3STtBQUNBLDRQQUF1SjtBQUN2SjtBQUNBLGtRQUEwSjtBQUMxSjtBQUNBLHNRQUE0SiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXNlZ21lbnQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2h0dHAtYWNjZXNzLWZhbGxiYWNrL2Vycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "(ssr)/./components/ImageProcessor.tsx":
/*!***************************************!*\
  !*** ./components/ImageProcessor.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ImageProcessor: () => (/* binding */ ImageProcessor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(ssr)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/card */ \"(ssr)/./components/ui/card.tsx\");\n/* harmony import */ var _components_ui_input__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/input */ \"(ssr)/./components/ui/input.tsx\");\n/* harmony import */ var _components_ui_label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/ui/label */ \"(ssr)/./components/ui/label.tsx\");\n/* harmony import */ var _components_ui_slider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/slider */ \"(ssr)/./components/ui/slider.tsx\");\n/* harmony import */ var _components_ui_select__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/ui/select */ \"(ssr)/./components/ui/select.tsx\");\n/* harmony import */ var _lib_gcode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/lib/gcode */ \"(ssr)/./lib/gcode.ts\");\n/* harmony import */ var _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/lib/vectorization-engine */ \"(ssr)/./lib/vectorization-engine.ts\");\n// FILE: ImageProcessor.tsx\n/* __next_internal_client_entry_do_not_use__ ImageProcessor auto */ \n\n\n\n\n\n\n\n\n\nfunction ImageProcessor() {\n    const [image, setImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isOpenCVReady, setIsOpenCVReady] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // --- STATE FOR CONTROLS ---\n    const [mode, setMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode.COLOR_REGIONS);\n    const [scale, setScale] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(90);\n    // Strategy A options\n    const [numColors, setNumColors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(8);\n    // Strategy B options\n    const [centerlineThreshold, setCenterlineThreshold] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(127);\n    const [centerlineProximity, setCenterlineProximity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(5);\n    // Strategy C options\n    const [hatchSpacing, setHatchSpacing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(5);\n    const [hatchAngle, setHatchAngle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(45);\n    const imgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Check for OpenCV availability\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ImageProcessor.useEffect\": ()=>{\n            const checkOpenCV = {\n                \"ImageProcessor.useEffect.checkOpenCV\": ()=>{\n                    if (typeof cv !== 'undefined' && cv.imread) {\n                        setIsOpenCVReady(true);\n                        console.log('OpenCV.js is ready for multi-strategy processing');\n                    } else {\n                        setTimeout(checkOpenCV, 100);\n                    }\n                }\n            }[\"ImageProcessor.useEffect.checkOpenCV\"];\n            checkOpenCV();\n        }\n    }[\"ImageProcessor.useEffect\"], []);\n    const handleImageUpload = (event)=>{\n        const file = event.target.files?.[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e)=>{\n                setImage(e.target?.result);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n    // Load original image whenever it's uploaded\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ImageProcessor.useEffect\": ()=>{\n            if (image && canvasRef.current && imgRef.current) {\n                const canvas = canvasRef.current;\n                const ctx = canvas.getContext(\"2d\");\n                const img = imgRef.current;\n                img.onload = ({\n                    \"ImageProcessor.useEffect\": ()=>{\n                        canvas.width = img.naturalWidth;\n                        canvas.height = img.naturalHeight;\n                        ctx.drawImage(img, 0, 0);\n                    }\n                })[\"ImageProcessor.useEffect\"];\n                img.src = image;\n            }\n        }\n    }[\"ImageProcessor.useEffect\"], [\n        image\n    ]);\n    const processAndPreview = ()=>{\n        if (!canvasRef.current || !image || !imgRef.current || !isOpenCVReady) {\n            alert(\"Please upload an image and wait for OpenCV to load.\");\n            return;\n        }\n        setIsProcessing(true);\n        setTimeout(()=>{\n            // Redraw original image to canvas before processing\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n            const img = imgRef.current;\n            canvas.width = img.naturalWidth;\n            canvas.height = img.naturalHeight;\n            ctx.drawImage(img, 0, 0);\n            const options = {\n                numColors,\n                threshold: centerlineThreshold,\n                proximity: centerlineProximity,\n                hatchSpacing,\n                hatchAngle\n            };\n            console.log(`Processing with ${mode} strategy...`);\n            const paths = _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationEngine.process(canvas, mode, options);\n            const sortedPaths = _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationEngine.sortPathsForPrinting(paths);\n            // Render Preview\n            if (sortedPaths.length > 0) {\n                ctx.fillStyle = \"white\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.lineCap = 'round';\n                ctx.lineJoin = 'round';\n                ctx.strokeStyle = \"#e74c3c\";\n                ctx.lineWidth = 1.5;\n                sortedPaths.forEach((path, index)=>{\n                    if (path.length < 2) return;\n                    ctx.beginPath();\n                    ctx.moveTo(path[0].x, path[0].y);\n                    for(let i = 1; i < path.length; i++){\n                        ctx.lineTo(path[i].x, path[i].y);\n                    }\n                    ctx.stroke();\n                    // Draw start point for path ordering visualization\n                    ctx.fillStyle = \"#27ae60\";\n                    ctx.beginPath();\n                    ctx.arc(path[0].x, path[0].y, 2, 0, 2 * Math.PI);\n                    ctx.fill();\n                });\n                console.log(`Preview rendered ${sortedPaths.length} paths with ${sortedPaths.reduce((sum, path)=>sum + path.length, 0)} total points`);\n            } else {\n                console.log(\"No paths were generated for the current settings.\");\n                alert(\"No paths found. Try adjusting the parameters for the selected mode.\");\n            }\n            setIsProcessing(false);\n        }, 100);\n    };\n    const generateAndDownloadGCode = ()=>{\n        if (!canvasRef.current || !image || !imgRef.current || !isOpenCVReady) {\n            alert(\"Please upload an image and wait for OpenCV to load.\");\n            return;\n        }\n        setIsProcessing(true);\n        setTimeout(()=>{\n            // Redraw original image to canvas before processing\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n            const img = imgRef.current;\n            canvas.width = img.naturalWidth;\n            canvas.height = img.naturalHeight;\n            ctx.drawImage(img, 0, 0);\n            const options = {\n                numColors,\n                threshold: centerlineThreshold,\n                proximity: centerlineProximity,\n                hatchSpacing,\n                hatchAngle\n            };\n            const paths = _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationEngine.process(canvas, mode, options);\n            const sortedPaths = _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationEngine.sortPathsForPrinting(paths);\n            if (sortedPaths.length > 0) {\n                // Update preview\n                ctx.fillStyle = \"white\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.lineCap = 'round';\n                ctx.lineJoin = 'round';\n                ctx.strokeStyle = \"#e74c3c\";\n                ctx.lineWidth = 1.5;\n                sortedPaths.forEach((path)=>{\n                    if (path.length < 2) return;\n                    ctx.beginPath();\n                    ctx.moveTo(path[0].x, path[0].y);\n                    for(let i = 1; i < path.length; i++){\n                        ctx.lineTo(path[i].x, path[i].y);\n                    }\n                    ctx.stroke();\n                    ctx.fillStyle = \"#27ae60\";\n                    ctx.beginPath();\n                    ctx.arc(path[0].x, path[0].y, 2, 0, 2 * Math.PI);\n                    ctx.fill();\n                });\n                // Generate and download G-code\n                const gcode = (0,_lib_gcode__WEBPACK_IMPORTED_MODULE_8__.generateGCode)(sortedPaths, scale);\n                const blob = new Blob([\n                    gcode\n                ], {\n                    type: \"text/plain\"\n                });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement(\"a\");\n                a.href = url;\n                a.download = `${mode.toLowerCase().replace(/\\s+/g, '_')}_drawing.gcode`;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                URL.revokeObjectURL(url);\n                console.log(`Generated G-code with ${sortedPaths.length} optimized paths using ${mode} strategy.`);\n            } else {\n                alert(\"No paths found. Try adjusting the parameters for the selected mode.\");\n            }\n            setIsProcessing(false);\n        }, 100);\n    };\n    const renderControls = ()=>{\n        switch(mode){\n            case _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode.COLOR_REGIONS:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-4\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-3\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                className: \"text-sm font-semibold\",\n                                children: [\n                                    \"Number of Colors: \",\n                                    numColors\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                lineNumber: 227,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {\n                                value: [\n                                    numColors\n                                ],\n                                onValueChange: (v)=>setNumColors(v[0]),\n                                min: 2,\n                                max: 32,\n                                step: 1,\n                                className: \"py-2\"\n                            }, void 0, false, {\n                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                lineNumber: 228,\n                                columnNumber: 15\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"text-xs text-gray-500\",\n                                children: \"Quantizes image into distinct color regions for tracing\"\n                            }, void 0, false, {\n                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                lineNumber: 236,\n                                columnNumber: 15\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                        lineNumber: 226,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                    lineNumber: 225,\n                    columnNumber: 11\n                }, this);\n            case _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode.CENTERLINE:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                    className: \"text-sm font-semibold\",\n                                    children: [\n                                        \"Threshold: \",\n                                        centerlineThreshold\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 244,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {\n                                    value: [\n                                        centerlineThreshold\n                                    ],\n                                    onValueChange: (v)=>setCenterlineThreshold(v[0]),\n                                    max: 255,\n                                    className: \"py-2\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 245,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-xs text-gray-500\",\n                                    children: \"Grayscale threshold for line detection\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 251,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 243,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                    className: \"text-sm font-semibold\",\n                                    children: [\n                                        \"Stitching Proximity: \",\n                                        centerlineProximity\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 254,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {\n                                    value: [\n                                        centerlineProximity\n                                    ],\n                                    onValueChange: (v)=>setCenterlineProximity(v[0]),\n                                    max: 20,\n                                    className: \"py-2\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 255,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-xs text-gray-500\",\n                                    children: \"How close line segments must be to connect\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 261,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 253,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                    lineNumber: 242,\n                    columnNumber: 11\n                }, this);\n            case _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode.HATCHING:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                    className: \"text-sm font-semibold\",\n                                    children: [\n                                        \"Tone Levels: \",\n                                        numColors\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 269,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {\n                                    value: [\n                                        numColors\n                                    ],\n                                    onValueChange: (v)=>setNumColors(v[0]),\n                                    min: 2,\n                                    max: 16,\n                                    step: 1,\n                                    className: \"py-2\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 270,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-xs text-gray-500\",\n                                    children: \"Number of shading levels to generate\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 278,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 268,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                    className: \"text-sm font-semibold\",\n                                    children: [\n                                        \"Hatch Spacing: \",\n                                        hatchSpacing,\n                                        \"px\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 281,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {\n                                    value: [\n                                        hatchSpacing\n                                    ],\n                                    onValueChange: (v)=>setHatchSpacing(v[0]),\n                                    min: 1,\n                                    max: 20,\n                                    className: \"py-2\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 282,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-xs text-gray-500\",\n                                    children: \"Distance between parallel hatch lines\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 289,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 280,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                    className: \"text-sm font-semibold\",\n                                    children: [\n                                        \"Hatch Angle: \",\n                                        hatchAngle,\n                                        \"\\xb0\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 292,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {\n                                    value: [\n                                        hatchAngle\n                                    ],\n                                    onValueChange: (v)=>setHatchAngle(v[0]),\n                                    min: 0,\n                                    max: 180,\n                                    className: \"py-2\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 293,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"text-xs text-gray-500\",\n                                    children: \"Angle of hatching lines\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 300,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 291,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                    lineNumber: 267,\n                    columnNumber: 11\n                }, this);\n            default:\n                return null;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"grid w-full max-w-4xl grid-cols-1 gap-8 md:grid-cols-2\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.Card, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.CardHeader, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.CardTitle, {\n                            children: \"Vectorization stuff\"\n                        }, void 0, false, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 313,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                        lineNumber: 312,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.CardContent, {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-2\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                        htmlFor: \"image-upload\",\n                                        className: \"text-sm font-semibold\",\n                                        children: \"Upload Image\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 317,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_4__.Input, {\n                                        id: \"image-upload\",\n                                        type: \"file\",\n                                        accept: \"image/*\",\n                                        onChange: handleImageUpload\n                                    }, void 0, false, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 318,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                lineNumber: 316,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                        className: \"text-sm font-semibold\",\n                                        children: \"Vectorization Strategy\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 322,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_select__WEBPACK_IMPORTED_MODULE_7__.Select, {\n                                        value: mode,\n                                        onValueChange: (value)=>setMode(value),\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_select__WEBPACK_IMPORTED_MODULE_7__.SelectTrigger, {\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_select__WEBPACK_IMPORTED_MODULE_7__.SelectValue, {}, void 0, false, {\n                                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                                    lineNumber: 325,\n                                                    columnNumber: 17\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                                lineNumber: 324,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_select__WEBPACK_IMPORTED_MODULE_7__.SelectContent, {\n                                                children: Object.values(_lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode).map((m)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_select__WEBPACK_IMPORTED_MODULE_7__.SelectItem, {\n                                                        value: m,\n                                                        children: m\n                                                    }, m, false, {\n                                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                                        lineNumber: 329,\n                                                        columnNumber: 19\n                                                    }, this))\n                                            }, void 0, false, {\n                                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                                lineNumber: 327,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 323,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-xs text-gray-500\",\n                                        children: [\n                                            mode === _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode.COLOR_REGIONS && \"for general art\",\n                                            mode === _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode.CENTERLINE && \"b&w line art and sketches\",\n                                            mode === _lib_vectorization_engine__WEBPACK_IMPORTED_MODULE_9__.VectorizationMode.HATCHING && \"photos\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 333,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                lineNumber: 321,\n                                columnNumber: 11\n                            }, this),\n                            renderControls(),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_5__.Label, {\n                                        className: \"text-sm font-semibold\",\n                                        children: [\n                                            \"Output Scale: \",\n                                            scale,\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 343,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {\n                                        value: [\n                                            scale\n                                        ],\n                                        onValueChange: (v)=>setScale(v[0]),\n                                        min: 10,\n                                        max: 200,\n                                        step: 5,\n                                        className: \"py-2\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 344,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-xs text-gray-500\",\n                                        children: \"Size of final G-code output relative to image\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 352,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                lineNumber: 342,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex gap-3\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                        onClick: processAndPreview,\n                                        disabled: !image || isProcessing || !isOpenCVReady,\n                                        variant: \"outline\",\n                                        children: isProcessing ? \"Processing...\" : \"Update Preview\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 356,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                        onClick: generateAndDownloadGCode,\n                                        disabled: !image || isProcessing || !isOpenCVReady,\n                                        children: isProcessing ? \"Processing...\" : !isOpenCVReady ? \"Loading OpenCV...\" : \"Generate & Download G-Code\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                        lineNumber: 363,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                lineNumber: 355,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                        lineNumber: 315,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                lineNumber: 311,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.Card, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.CardHeader, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.CardTitle, {\n                            children: \"Preview\"\n                        }, void 0, false, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 375,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                        lineNumber: 374,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.CardContent, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"aspect-square w-full bg-muted\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                    ref: imgRef,\n                                    className: \"hidden\",\n                                    alt: \"source\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 380,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                                    ref: canvasRef,\n                                    className: \"w-full h-full\"\n                                }, void 0, false, {\n                                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                                    lineNumber: 381,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                            lineNumber: 378,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                        lineNumber: 377,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n                lineNumber: 373,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ImageProcessor.tsx\",\n        lineNumber: 310,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./components/ImageProcessor.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/button.tsx":
/*!**********************************!*\
  !*** ./components/ui/button.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   buttonVariants: () => (/* binding */ buttonVariants)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(ssr)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n\n\n\n\n\nconst buttonVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n            destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n            outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\"\n        },\n        size: {\n            default: \"h-10 px-4 py-2\",\n            sm: \"h-9 rounded-md px-3\",\n            lg: \"h-11 rounded-md px-8\",\n            icon: \"h-10 w-10\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nconst Button = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, size, asChild = false, ...props }, ref)=>{\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot : \"button\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Comp, {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({\n            variant,\n            size,\n            className\n        })),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/button.tsx\",\n        lineNumber: 44,\n        columnNumber: 7\n    }, undefined);\n});\nButton.displayName = \"Button\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2J1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUNhO0FBQ3NCO0FBRWpDO0FBRWhDLE1BQU1JLGlCQUFpQkYsNkRBQUdBLENBQ3hCLDBSQUNBO0lBQ0VHLFVBQVU7UUFDUkMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLGFBQ0U7WUFDRkMsU0FBUztZQUNUQyxXQUFXO1lBQ1hDLE9BQU87WUFDUEMsTUFBTTtRQUNSO1FBQ0FDLE1BQU07WUFDSk4sU0FBUztZQUNUTyxJQUFJO1lBQ0pDLElBQUk7WUFDSkMsTUFBTTtRQUNSO0lBQ0Y7SUFDQUMsaUJBQWlCO1FBQ2ZYLFNBQVM7UUFDVE8sTUFBTTtJQUNSO0FBQ0Y7QUFTRixNQUFNSyx1QkFBU2xCLDZDQUFnQixDQUM3QixDQUFDLEVBQUVvQixTQUFTLEVBQUVkLE9BQU8sRUFBRU8sSUFBSSxFQUFFUSxVQUFVLEtBQUssRUFBRSxHQUFHQyxPQUFPLEVBQUVDO0lBQ3hELE1BQU1DLE9BQU9ILFVBQVVwQixzREFBSUEsR0FBRztJQUM5QixxQkFDRSw4REFBQ3VCO1FBQ0NKLFdBQVdqQiw4Q0FBRUEsQ0FBQ0MsZUFBZTtZQUFFRTtZQUFTTztZQUFNTztRQUFVO1FBQ3hERyxLQUFLQTtRQUNKLEdBQUdELEtBQUs7Ozs7OztBQUdmO0FBRUZKLE9BQU9PLFdBQVcsR0FBRztBQUVZIiwic291cmNlcyI6WyIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L2NvbXBvbmVudHMvdWkvYnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgU2xvdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xvdFwiXG5pbXBvcnQgeyBjdmEsIHR5cGUgVmFyaWFudFByb3BzIH0gZnJvbSBcImNsYXNzLXZhcmlhbmNlLWF1dGhvcml0eVwiXG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuY29uc3QgYnV0dG9uVmFyaWFudHMgPSBjdmEoXG4gIFwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHdoaXRlc3BhY2Utbm93cmFwIHJvdW5kZWQtbWQgdGV4dC1zbSBmb250LW1lZGl1bSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIHRyYW5zaXRpb24tY29sb3JzIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0yIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGZvY3VzLXZpc2libGU6cmluZy1vZmZzZXQtMiBkaXNhYmxlZDpwb2ludGVyLWV2ZW50cy1ub25lIGRpc2FibGVkOm9wYWNpdHktNTBcIixcbiAge1xuICAgIHZhcmlhbnRzOiB7XG4gICAgICB2YXJpYW50OiB7XG4gICAgICAgIGRlZmF1bHQ6IFwiYmctcHJpbWFyeSB0ZXh0LXByaW1hcnktZm9yZWdyb3VuZCBob3ZlcjpiZy1wcmltYXJ5LzkwXCIsXG4gICAgICAgIGRlc3RydWN0aXZlOlxuICAgICAgICAgIFwiYmctZGVzdHJ1Y3RpdmUgdGV4dC1kZXN0cnVjdGl2ZS1mb3JlZ3JvdW5kIGhvdmVyOmJnLWRlc3RydWN0aXZlLzkwXCIsXG4gICAgICAgIG91dGxpbmU6IFwiYm9yZGVyIGJvcmRlci1pbnB1dCBiZy1iYWNrZ3JvdW5kIGhvdmVyOmJnLWFjY2VudCBob3Zlcjp0ZXh0LWFjY2VudC1mb3JlZ3JvdW5kXCIsXG4gICAgICAgIHNlY29uZGFyeTogXCJiZy1zZWNvbmRhcnkgdGV4dC1zZWNvbmRhcnktZm9yZWdyb3VuZCBob3ZlcjpiZy1zZWNvbmRhcnkvODBcIixcbiAgICAgICAgZ2hvc3Q6IFwiaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmRcIixcbiAgICAgICAgbGluazogXCJ0ZXh0LXByaW1hcnkgdW5kZXJsaW5lLW9mZnNldC00IGhvdmVyOnVuZGVybGluZVwiLFxuICAgICAgfSxcbiAgICAgIHNpemU6IHtcbiAgICAgICAgZGVmYXVsdDogXCJoLTEwIHB4LTQgcHktMlwiLFxuICAgICAgICBzbTogXCJoLTkgcm91bmRlZC1tZCBweC0zXCIsXG4gICAgICAgIGxnOiBcImgtMTEgcm91bmRlZC1tZCBweC04XCIsXG4gICAgICAgIGljb246IFwiaC0xMCB3LTEwXCIsXG4gICAgICB9LFxuICAgIH0sXG4gICAgZGVmYXVsdFZhcmlhbnRzOiB7XG4gICAgICB2YXJpYW50OiBcImRlZmF1bHRcIixcbiAgICAgIHNpemU6IFwiZGVmYXVsdFwiLFxuICAgIH0sXG4gIH1cbilcblxuZXhwb3J0IGludGVyZmFjZSBCdXR0b25Qcm9wc1xuICBleHRlbmRzIFJlYWN0LkJ1dHRvbkhUTUxBdHRyaWJ1dGVzPEhUTUxCdXR0b25FbGVtZW50PixcbiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIGJ1dHRvblZhcmlhbnRzPiB7XG4gIGFzQ2hpbGQ/OiBib29sZWFuXG59XG5cbmNvbnN0IEJ1dHRvbiA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTEJ1dHRvbkVsZW1lbnQsIEJ1dHRvblByb3BzPihcbiAgKHsgY2xhc3NOYW1lLCB2YXJpYW50LCBzaXplLCBhc0NoaWxkID0gZmFsc2UsIC4uLnByb3BzIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6IFwiYnV0dG9uXCJcbiAgICByZXR1cm4gKFxuICAgICAgPENvbXBcbiAgICAgICAgY2xhc3NOYW1lPXtjbihidXR0b25WYXJpYW50cyh7IHZhcmlhbnQsIHNpemUsIGNsYXNzTmFtZSB9KSl9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIClcbiAgfVxuKVxuQnV0dG9uLmRpc3BsYXlOYW1lID0gXCJCdXR0b25cIlxuXG5leHBvcnQgeyBCdXR0b24sIGJ1dHRvblZhcmlhbnRzIH0iXSwibmFtZXMiOlsiUmVhY3QiLCJTbG90IiwiY3ZhIiwiY24iLCJidXR0b25WYXJpYW50cyIsInZhcmlhbnRzIiwidmFyaWFudCIsImRlZmF1bHQiLCJkZXN0cnVjdGl2ZSIsIm91dGxpbmUiLCJzZWNvbmRhcnkiLCJnaG9zdCIsImxpbmsiLCJzaXplIiwic20iLCJsZyIsImljb24iLCJkZWZhdWx0VmFyaWFudHMiLCJCdXR0b24iLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwiYXNDaGlsZCIsInByb3BzIiwicmVmIiwiQ29tcCIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/button.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/card.tsx":
/*!********************************!*\
  !*** ./components/ui/card.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Card: () => (/* binding */ Card),\n/* harmony export */   CardContent: () => (/* binding */ CardContent),\n/* harmony export */   CardDescription: () => (/* binding */ CardDescription),\n/* harmony export */   CardFooter: () => (/* binding */ CardFooter),\n/* harmony export */   CardHeader: () => (/* binding */ CardHeader),\n/* harmony export */   CardTitle: () => (/* binding */ CardTitle)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n\n\n\nconst Card = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/card.tsx\",\n        lineNumber: 9,\n        columnNumber: 3\n    }, undefined));\nCard.displayName = \"Card\";\nconst CardHeader = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex flex-col space-y-1.5 p-6\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/card.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, undefined));\nCardHeader.displayName = \"CardHeader\";\nconst CardTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"text-2xl font-semibold leading-none tracking-tight\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/card.tsx\",\n        lineNumber: 26,\n        columnNumber: 5\n    }, undefined));\nCardTitle.displayName = \"CardTitle\";\nconst CardDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"text-sm text-muted-foreground\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/card.tsx\",\n        lineNumber: 35,\n        columnNumber: 3\n    }, undefined));\nCardDescription.displayName = \"CardDescription\";\nconst CardContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/card.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, undefined));\nCardContent.displayName = \"CardContent\";\nconst CardFooter = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex items-center p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/card.tsx\",\n        lineNumber: 48,\n        columnNumber: 5\n    }, undefined));\nCardFooter.displayName = \"CardFooter\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2NhcmQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUE4QjtBQUVFO0FBRWhDLE1BQU1FLHFCQUFPRiw2Q0FBZ0IsQ0FBdUQsQ0FDbEYsRUFBRUksU0FBUyxFQUFFLEdBQUdDLE9BQU8sRUFDdkJDLG9CQUVBLDhEQUFDQztRQUNDRCxLQUFLQTtRQUNMRixXQUFXSCw4Q0FBRUEsQ0FBQyw0REFBNERHO1FBQ3pFLEdBQUdDLEtBQUs7Ozs7OztBQUdiSCxLQUFLTSxXQUFXLEdBQUc7QUFFbkIsTUFBTUMsMkJBQWFULDZDQUFnQixDQUNqQyxDQUFDLEVBQUVJLFNBQVMsRUFBRSxHQUFHQyxPQUFPLEVBQUVDLG9CQUN4Qiw4REFBQ0M7UUFBSUQsS0FBS0E7UUFBS0YsV0FBV0gsOENBQUVBLENBQUMsaUNBQWlDRztRQUFhLEdBQUdDLEtBQUs7Ozs7OztBQUd2RkksV0FBV0QsV0FBVyxHQUFHO0FBRXpCLE1BQU1FLDBCQUFZViw2Q0FBZ0IsQ0FDaEMsQ0FBQyxFQUFFSSxTQUFTLEVBQUUsR0FBR0MsT0FBTyxFQUFFQyxvQkFDeEIsOERBQUNLO1FBQUdMLEtBQUtBO1FBQUtGLFdBQVdILDhDQUFFQSxDQUFDLHNEQUFzREc7UUFBYSxHQUFHQyxLQUFLOzs7Ozs7QUFHM0dLLFVBQVVGLFdBQVcsR0FBRztBQUV4QixNQUFNSSxnQ0FBa0JaLDZDQUFnQixDQUd0QyxDQUFDLEVBQUVJLFNBQVMsRUFBRSxHQUFHQyxPQUFPLEVBQUVDLG9CQUMxQiw4REFBQ087UUFBRVAsS0FBS0E7UUFBS0YsV0FBV0gsOENBQUVBLENBQUMsaUNBQWlDRztRQUFhLEdBQUdDLEtBQUs7Ozs7OztBQUVuRk8sZ0JBQWdCSixXQUFXLEdBQUc7QUFFOUIsTUFBTU0sNEJBQWNkLDZDQUFnQixDQUNsQyxDQUFDLEVBQUVJLFNBQVMsRUFBRSxHQUFHQyxPQUFPLEVBQUVDLG9CQUN4Qiw4REFBQ0M7UUFBSUQsS0FBS0E7UUFBS0YsV0FBV0gsOENBQUVBLENBQUMsWUFBWUc7UUFBYSxHQUFHQyxLQUFLOzs7Ozs7QUFHbEVTLFlBQVlOLFdBQVcsR0FBRztBQUUxQixNQUFNTywyQkFBYWYsNkNBQWdCLENBQ2pDLENBQUMsRUFBRUksU0FBUyxFQUFFLEdBQUdDLE9BQU8sRUFBRUMsb0JBQ3hCLDhEQUFDQztRQUFJRCxLQUFLQTtRQUFLRixXQUFXSCw4Q0FBRUEsQ0FBQyw4QkFBOEJHO1FBQWEsR0FBR0MsS0FBSzs7Ozs7O0FBR3BGVSxXQUFXUCxXQUFXLEdBQUc7QUFFdUQiLCJzb3VyY2VzIjpbIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvY29tcG9uZW50cy91aS9jYXJkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cbmNvbnN0IENhcmQgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4+KChcbiAgeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sXG4gIHJlZlxuKSA9PiAoXG4gIDxkaXZcbiAgICByZWY9e3JlZn1cbiAgICBjbGFzc05hbWU9e2NuKFwicm91bmRlZC1sZyBib3JkZXIgYmctY2FyZCB0ZXh0LWNhcmQtZm9yZWdyb3VuZCBzaGFkb3ctc21cIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuQ2FyZC5kaXNwbGF5TmFtZSA9IFwiQ2FyZFwiXG5cbmNvbnN0IENhcmRIZWFkZXIgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD4+KFxuICAoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICAgIDxkaXYgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y24oXCJmbGV4IGZsZXgtY29sIHNwYWNlLXktMS41IHAtNlwiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+XG4gIClcbilcbkNhcmRIZWFkZXIuZGlzcGxheU5hbWUgPSBcIkNhcmRIZWFkZXJcIlxuXG5jb25zdCBDYXJkVGl0bGUgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxIZWFkaW5nRWxlbWVudCwgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTEhlYWRpbmdFbGVtZW50Pj4oXG4gICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gICAgPGgzIHJlZj17cmVmfSBjbGFzc05hbWU9e2NuKFwidGV4dC0yeGwgZm9udC1zZW1pYm9sZCBsZWFkaW5nLW5vbmUgdHJhY2tpbmctdGlnaHRcIiwgY2xhc3NOYW1lKX0gey4uLnByb3BzfSAvPlxuICApXG4pXG5DYXJkVGl0bGUuZGlzcGxheU5hbWUgPSBcIkNhcmRUaXRsZVwiXG5cbmNvbnN0IENhcmREZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxQYXJhZ3JhcGhFbGVtZW50LFxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MUGFyYWdyYXBoRWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPHAgcmVmPXtyZWZ9IGNsYXNzTmFtZT17Y24oXCJ0ZXh0LXNtIHRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+XG4pKVxuQ2FyZERlc2NyaXB0aW9uLmRpc3BsYXlOYW1lID0gXCJDYXJkRGVzY3JpcHRpb25cIlxuXG5jb25zdCBDYXJkQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTERpdkVsZW1lbnQsIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50Pj4oXG4gICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gICAgPGRpdiByZWY9e3JlZn0gY2xhc3NOYW1lPXtjbihcInAtNiBwdC0wXCIsIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz5cbiAgKVxuKVxuQ2FyZENvbnRlbnQuZGlzcGxheU5hbWUgPSBcIkNhcmRDb250ZW50XCJcblxuY29uc3QgQ2FyZEZvb3RlciA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTERpdkVsZW1lbnQsIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50Pj4oXG4gICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXG4gICAgPGRpdiByZWY9e3JlZn0gY2xhc3NOYW1lPXtjbihcImZsZXggaXRlbXMtY2VudGVyIHAtNiBwdC0wXCIsIGNsYXNzTmFtZSl9IHsuLi5wcm9wc30gLz5cbiAgKVxuKVxuQ2FyZEZvb3Rlci5kaXNwbGF5TmFtZSA9IFwiQ2FyZEZvb3RlclwiXG5cbmV4cG9ydCB7IENhcmQsIENhcmRIZWFkZXIsIENhcmRGb290ZXIsIENhcmRUaXRsZSwgQ2FyZERlc2NyaXB0aW9uLCBDYXJkQ29udGVudCB9Il0sIm5hbWVzIjpbIlJlYWN0IiwiY24iLCJDYXJkIiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwicmVmIiwiZGl2IiwiZGlzcGxheU5hbWUiLCJDYXJkSGVhZGVyIiwiQ2FyZFRpdGxlIiwiaDMiLCJDYXJkRGVzY3JpcHRpb24iLCJwIiwiQ2FyZENvbnRlbnQiLCJDYXJkRm9vdGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/card.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/input.tsx":
/*!*********************************!*\
  !*** ./components/ui/input.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Input: () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n\n\n\nconst Input = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, type, ...props }, ref)=>{\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n        type: type,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", className),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/input.tsx\",\n        lineNumber: 11,\n        columnNumber: 7\n    }, undefined);\n});\nInput.displayName = \"Input\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2lucHV0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThCO0FBRUU7QUFLaEMsTUFBTUUsc0JBQVFGLDZDQUFnQixDQUM1QixDQUFDLEVBQUVJLFNBQVMsRUFBRUMsSUFBSSxFQUFFLEdBQUdDLE9BQU8sRUFBRUM7SUFDOUIscUJBQ0UsOERBQUNDO1FBQ0NILE1BQU1BO1FBQ05ELFdBQVdILDhDQUFFQSxDQUNYLGdXQUNBRztRQUVGRyxLQUFLQTtRQUNKLEdBQUdELEtBQUs7Ozs7OztBQUdmO0FBRUZKLE1BQU1PLFdBQVcsR0FBRztBQUVKIiwic291cmNlcyI6WyIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L2NvbXBvbmVudHMvdWkvaW5wdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuZXhwb3J0IGludGVyZmFjZSBJbnB1dFByb3BzXG4gIGV4dGVuZHMgUmVhY3QuSW5wdXRIVE1MQXR0cmlidXRlczxIVE1MSW5wdXRFbGVtZW50PiB7fVxuXG5jb25zdCBJbnB1dCA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTElucHV0RWxlbWVudCwgSW5wdXRQcm9wcz4oXG4gICh7IGNsYXNzTmFtZSwgdHlwZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxpbnB1dFxuICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgIFwiZmxleCBoLTEwIHctZnVsbCByb3VuZGVkLW1kIGJvcmRlciBib3JkZXItaW5wdXQgYmctYmFja2dyb3VuZCBweC0zIHB5LTIgdGV4dC1zbSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGZpbGU6Ym9yZGVyLTAgZmlsZTpiZy10cmFuc3BhcmVudCBmaWxlOnRleHQtc20gZmlsZTpmb250LW1lZGl1bSBwbGFjZWhvbGRlcjp0ZXh0LW11dGVkLWZvcmVncm91bmQgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwXCIsXG4gICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICl9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIClcbiAgfVxuKVxuSW5wdXQuZGlzcGxheU5hbWUgPSBcIklucHV0XCJcblxuZXhwb3J0IHsgSW5wdXQgfSJdLCJuYW1lcyI6WyJSZWFjdCIsImNuIiwiSW5wdXQiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwidHlwZSIsInByb3BzIiwicmVmIiwiaW5wdXQiLCJkaXNwbGF5TmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/input.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/label.tsx":
/*!*********************************!*\
  !*** ./components/ui/label.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: () => (/* binding */ Label)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_label__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-label */ \"(ssr)/./node_modules/@radix-ui/react-label/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n\n\n\n\n\nconst labelVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\");\nconst Label = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_label__WEBPACK_IMPORTED_MODULE_4__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(labelVariants(), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/label.tsx\",\n        lineNumber: 16,\n        columnNumber: 3\n    }, undefined));\nLabel.displayName = _radix_ui_react_label__WEBPACK_IMPORTED_MODULE_4__.Root.displayName;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2xhYmVsLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBOEI7QUFDeUI7QUFDVTtBQUVqQztBQUVoQyxNQUFNSSxnQkFBZ0JGLDZEQUFHQSxDQUN2QjtBQUdGLE1BQU1HLHNCQUFRTCw2Q0FBZ0IsQ0FJNUIsQ0FBQyxFQUFFTyxTQUFTLEVBQUUsR0FBR0MsT0FBTyxFQUFFQyxvQkFDMUIsOERBQUNSLHVEQUFtQjtRQUNsQlEsS0FBS0E7UUFDTEYsV0FBV0osOENBQUVBLENBQUNDLGlCQUFpQkc7UUFDOUIsR0FBR0MsS0FBSzs7Ozs7O0FBR2JILE1BQU1NLFdBQVcsR0FBR1YsdURBQW1CLENBQUNVLFdBQVc7QUFFbkMiLCJzb3VyY2VzIjpbIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvY29tcG9uZW50cy91aS9sYWJlbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCAqIGFzIExhYmVsUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3QtbGFiZWxcIlxuaW1wb3J0IHsgY3ZhLCB0eXBlIFZhcmlhbnRQcm9wcyB9IGZyb20gXCJjbGFzcy12YXJpYW5jZS1hdXRob3JpdHlcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cbmNvbnN0IGxhYmVsVmFyaWFudHMgPSBjdmEoXG4gIFwidGV4dC1zbSBmb250LW1lZGl1bSBsZWFkaW5nLW5vbmUgcGVlci1kaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWQgcGVlci1kaXNhYmxlZDpvcGFjaXR5LTcwXCJcbilcblxuY29uc3QgTGFiZWwgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBMYWJlbFByaW1pdGl2ZS5Sb290PixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBMYWJlbFByaW1pdGl2ZS5Sb290PiAmIFxuICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgbGFiZWxWYXJpYW50cz5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPExhYmVsUHJpbWl0aXZlLlJvb3RcbiAgICByZWY9e3JlZn1cbiAgICBjbGFzc05hbWU9e2NuKGxhYmVsVmFyaWFudHMoKSwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuTGFiZWwuZGlzcGxheU5hbWUgPSBMYWJlbFByaW1pdGl2ZS5Sb290LmRpc3BsYXlOYW1lXG5cbmV4cG9ydCB7IExhYmVsIH0iXSwibmFtZXMiOlsiUmVhY3QiLCJMYWJlbFByaW1pdGl2ZSIsImN2YSIsImNuIiwibGFiZWxWYXJpYW50cyIsIkxhYmVsIiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwicmVmIiwiUm9vdCIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/label.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/select.tsx":
/*!**********************************!*\
  !*** ./components/ui/select.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Select: () => (/* binding */ Select),\n/* harmony export */   SelectContent: () => (/* binding */ SelectContent),\n/* harmony export */   SelectGroup: () => (/* binding */ SelectGroup),\n/* harmony export */   SelectItem: () => (/* binding */ SelectItem),\n/* harmony export */   SelectLabel: () => (/* binding */ SelectLabel),\n/* harmony export */   SelectScrollDownButton: () => (/* binding */ SelectScrollDownButton),\n/* harmony export */   SelectScrollUpButton: () => (/* binding */ SelectScrollUpButton),\n/* harmony export */   SelectSeparator: () => (/* binding */ SelectSeparator),\n/* harmony export */   SelectTrigger: () => (/* binding */ SelectTrigger),\n/* harmony export */   SelectValue: () => (/* binding */ SelectValue)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-select */ \"(ssr)/./node_modules/@radix-ui/react-select/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_Check_ChevronDown_ChevronUp_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Check,ChevronDown,ChevronUp!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/chevron-down.js\");\n/* harmony import */ var _barrel_optimize_names_Check_ChevronDown_ChevronUp_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Check,ChevronDown,ChevronUp!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/chevron-up.js\");\n/* harmony import */ var _barrel_optimize_names_Check_ChevronDown_ChevronUp_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=Check,ChevronDown,ChevronUp!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/check.js\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ Select,SelectGroup,SelectValue,SelectTrigger,SelectContent,SelectLabel,SelectItem,SelectSeparator,SelectScrollUpButton,SelectScrollDownButton auto */ \n\n\n\n\nconst Select = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Root;\nconst SelectGroup = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Group;\nconst SelectValue = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Value;\nconst SelectTrigger = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, children, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Trigger, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\", className),\n        ...props,\n        children: [\n            children,\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Icon, {\n                asChild: true,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_ChevronDown_ChevronUp_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    className: \"h-4 w-4 opacity-50\"\n                }, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                    lineNumber: 29,\n                    columnNumber: 7\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                lineNumber: 28,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n        lineNumber: 19,\n        columnNumber: 3\n    }, undefined));\nSelectTrigger.displayName = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Trigger.displayName;\nconst SelectScrollUpButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.ScrollUpButton, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex cursor-default items-center justify-center py-1\", className),\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_ChevronDown_ChevronUp_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            className: \"h-4 w-4\"\n        }, void 0, false, {\n            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n            lineNumber: 47,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n        lineNumber: 39,\n        columnNumber: 3\n    }, undefined));\nSelectScrollUpButton.displayName = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.ScrollUpButton.displayName;\nconst SelectScrollDownButton = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.ScrollDownButton, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex cursor-default items-center justify-center py-1\", className),\n        ...props,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_ChevronDown_ChevronUp_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n            className: \"h-4 w-4\"\n        }, void 0, false, {\n            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n            lineNumber: 64,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n        lineNumber: 56,\n        columnNumber: 3\n    }, undefined));\nSelectScrollDownButton.displayName = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.ScrollDownButton.displayName;\nconst SelectContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, children, position = \"popper\", ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Portal, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Content, {\n            ref: ref,\n            className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-300 bg-white text-gray-900 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\", position === \"popper\" && \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\", className),\n            position: position,\n            ...props,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SelectScrollUpButton, {}, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                    lineNumber: 86,\n                    columnNumber: 7\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Viewport, {\n                    className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"p-1\", position === \"popper\" && \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"),\n                    children: children\n                }, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                    lineNumber: 87,\n                    columnNumber: 7\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SelectScrollDownButton, {}, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                    lineNumber: 96,\n                    columnNumber: 7\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n            lineNumber: 75,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n        lineNumber: 74,\n        columnNumber: 3\n    }, undefined));\nSelectContent.displayName = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Content.displayName;\nconst SelectLabel = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Label, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n        lineNumber: 106,\n        columnNumber: 3\n    }, undefined));\nSelectLabel.displayName = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Label.displayName;\nconst SelectItem = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, children, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Item, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm text-gray-900 outline-none hover:bg-gray-100 focus:bg-blue-100 focus:text-blue-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50\", className),\n        ...props,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.ItemIndicator, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Check_ChevronDown_ChevronUp_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        className: \"h-4 w-4\"\n                    }, void 0, false, {\n                        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                        lineNumber: 128,\n                        columnNumber: 9\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                    lineNumber: 127,\n                    columnNumber: 7\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                lineNumber: 126,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.ItemText, {\n                children: children\n            }, void 0, false, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n                lineNumber: 132,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n        lineNumber: 118,\n        columnNumber: 3\n    }, undefined));\nSelectItem.displayName = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Item.displayName;\nconst SelectSeparator = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Separator, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"-mx-1 my-1 h-px bg-muted\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/select.tsx\",\n        lineNumber: 141,\n        columnNumber: 3\n    }, undefined));\nSelectSeparator.displayName = _radix_ui_react_select__WEBPACK_IMPORTED_MODULE_3__.Separator.displayName;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/select.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/slider.tsx":
/*!**********************************!*\
  !*** ./components/ui/slider.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Slider: () => (/* binding */ Slider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_slider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-slider */ \"(ssr)/./node_modules/@radix-ui/react-slider/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./lib/utils.ts\");\n\n\n\n\nconst Slider = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_slider__WEBPACK_IMPORTED_MODULE_3__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"relative flex w-full touch-none select-none items-center\", className),\n        ...props,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_slider__WEBPACK_IMPORTED_MODULE_3__.Track, {\n                className: \"relative h-3 w-full grow overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_slider__WEBPACK_IMPORTED_MODULE_3__.Range, {\n                    className: \"absolute h-full bg-blue-500 dark:bg-blue-400\"\n                }, void 0, false, {\n                    fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/slider.tsx\",\n                    lineNumber: 16,\n                    columnNumber: 7\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/slider.tsx\",\n                lineNumber: 15,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_slider__WEBPACK_IMPORTED_MODULE_3__.Thumb, {\n                className: \"block h-6 w-6 rounded-full border-2 border-blue-500 bg-white shadow-lg ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-gray-50\"\n            }, void 0, false, {\n                fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/slider.tsx\",\n                lineNumber: 18,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/kel/Desktop/imagegen/image-to-gcode-next/components/ui/slider.tsx\",\n        lineNumber: 10,\n        columnNumber: 3\n    }, undefined));\nSlider.displayName = _radix_ui_react_slider__WEBPACK_IMPORTED_MODULE_3__.Root.displayName;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL3NsaWRlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBOEI7QUFDMkI7QUFFekI7QUFFaEMsTUFBTUcsdUJBQVNILDZDQUFnQixDQUc3QixDQUFDLEVBQUVLLFNBQVMsRUFBRSxHQUFHQyxPQUFPLEVBQUVDLG9CQUMxQiw4REFBQ04sd0RBQW9CO1FBQ25CTSxLQUFLQTtRQUNMRixXQUFXSCw4Q0FBRUEsQ0FBQyw0REFBNERHO1FBQ3pFLEdBQUdDLEtBQUs7OzBCQUVULDhEQUFDTCx5REFBcUI7Z0JBQUNJLFdBQVU7MEJBQy9CLDRFQUFDSix5REFBcUI7b0JBQUNJLFdBQVU7Ozs7Ozs7Ozs7OzBCQUVuQyw4REFBQ0oseURBQXFCO2dCQUFDSSxXQUFVOzs7Ozs7Ozs7Ozs7QUFHckNGLE9BQU9TLFdBQVcsR0FBR1gsd0RBQW9CLENBQUNXLFdBQVc7QUFFcEMiLCJzb3VyY2VzIjpbIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvY29tcG9uZW50cy91aS9zbGlkZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgKiBhcyBTbGlkZXJQcmltaXRpdmUgZnJvbSBcIkByYWRpeC11aS9yZWFjdC1zbGlkZXJcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cbmNvbnN0IFNsaWRlciA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIFJlYWN0LkVsZW1lbnRSZWY8dHlwZW9mIFNsaWRlclByaW1pdGl2ZS5Sb290PixcbiAgUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRob3V0UmVmPHR5cGVvZiBTbGlkZXJQcmltaXRpdmUuUm9vdD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPFNsaWRlclByaW1pdGl2ZS5Sb290XG4gICAgcmVmPXtyZWZ9XG4gICAgY2xhc3NOYW1lPXtjbihcInJlbGF0aXZlIGZsZXggdy1mdWxsIHRvdWNoLW5vbmUgc2VsZWN0LW5vbmUgaXRlbXMtY2VudGVyXCIsIGNsYXNzTmFtZSl9XG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPFNsaWRlclByaW1pdGl2ZS5UcmFjayBjbGFzc05hbWU9XCJyZWxhdGl2ZSBoLTMgdy1mdWxsIGdyb3cgb3ZlcmZsb3ctaGlkZGVuIHJvdW5kZWQtZnVsbCBiZy1ncmF5LTIwMCBkYXJrOmJnLWdyYXktNzAwXCI+XG4gICAgICA8U2xpZGVyUHJpbWl0aXZlLlJhbmdlIGNsYXNzTmFtZT1cImFic29sdXRlIGgtZnVsbCBiZy1ibHVlLTUwMCBkYXJrOmJnLWJsdWUtNDAwXCIgLz5cbiAgICA8L1NsaWRlclByaW1pdGl2ZS5UcmFjaz5cbiAgICA8U2xpZGVyUHJpbWl0aXZlLlRodW1iIGNsYXNzTmFtZT1cImJsb2NrIGgtNiB3LTYgcm91bmRlZC1mdWxsIGJvcmRlci0yIGJvcmRlci1ibHVlLTUwMCBiZy13aGl0ZSBzaGFkb3ctbGcgcmluZy1vZmZzZXQtYmFja2dyb3VuZCB0cmFuc2l0aW9uLWNvbG9ycyBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctYmx1ZS01MDAgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOnBvaW50ZXItZXZlbnRzLW5vbmUgZGlzYWJsZWQ6b3BhY2l0eS01MCBob3ZlcjpiZy1ncmF5LTUwXCIgLz5cbiAgPC9TbGlkZXJQcmltaXRpdmUuUm9vdD5cbikpXG5TbGlkZXIuZGlzcGxheU5hbWUgPSBTbGlkZXJQcmltaXRpdmUuUm9vdC5kaXNwbGF5TmFtZVxuXG5leHBvcnQgeyBTbGlkZXIgfSJdLCJuYW1lcyI6WyJSZWFjdCIsIlNsaWRlclByaW1pdGl2ZSIsImNuIiwiU2xpZGVyIiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwicmVmIiwiUm9vdCIsIlRyYWNrIiwiUmFuZ2UiLCJUaHVtYiIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/slider.tsx\n");

/***/ }),

/***/ "(ssr)/./lib/advanced-hatching.ts":
/*!**********************************!*\
  !*** ./lib/advanced-hatching.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdvancedHatcher: () => (/* binding */ AdvancedHatcher),\n/* harmony export */   HatchingStyle: () => (/* binding */ HatchingStyle)\n/* harmony export */ });\n// Advanced Hatching and Shading Techniques\n// Professional artistic rendering methods for tone and texture\nvar HatchingStyle = /*#__PURE__*/ function(HatchingStyle) {\n    HatchingStyle[\"PARALLEL\"] = \"Parallel Lines\";\n    HatchingStyle[\"CONTOUR\"] = \"Contour Following\";\n    HatchingStyle[\"CROSS\"] = \"Cross Hatching\";\n    HatchingStyle[\"STIPPLING\"] = \"Stippling/Dots\";\n    return HatchingStyle;\n}({});\nclass AdvancedHatcher {\n    /**\n   * Generate sophisticated hatching for a masked region\n   */ static generateHatching(mask, intensity, style, baseSpacing, angle, width, height) {\n        switch(style){\n            case \"Contour Following\":\n                return this.generateContourHatching(mask, intensity, baseSpacing, width, height);\n            case \"Cross Hatching\":\n                return this.generateCrossHatching(mask, intensity, baseSpacing, angle, width, height);\n            case \"Stippling/Dots\":\n                return this.generateStippling(mask, intensity, baseSpacing, width, height);\n            default:\n                return this.generateParallelHatching(mask, intensity, baseSpacing, angle, width, height);\n        }\n    }\n    /**\n   * Contour hatching - lines follow the shape boundaries\n   * Creates natural volume and form\n   */ static generateContourHatching(mask, intensity, baseSpacing, width, height) {\n        const paths = [];\n        try {\n            // Find contours of the mask\n            const contours = new globalThis.cv.MatVector();\n            const hierarchy = new globalThis.cv.Mat();\n            globalThis.cv.findContours(mask, contours, hierarchy, globalThis.cv.RETR_LIST, globalThis.cv.CHAIN_APPROX_SIMPLE);\n            if (contours.size() === 0) {\n                contours.delete();\n                hierarchy.delete();\n                return paths;\n            }\n            // Calculate dynamic spacing based on intensity\n            const spacing = baseSpacing / (0.3 + intensity * 0.7); // Tighter spacing for darker areas\n            const numLayers = Math.ceil(intensity * 8); // More layers for darker tones\n            // Generate multiple concentric contour layers\n            for(let layer = 0; layer < numLayers; layer++){\n                const offset = -layer * spacing; // Negative offset moves inward\n                for(let i = 0; i < contours.size(); i++){\n                    const contour = contours.get(i);\n                    const offsetContour = this.offsetContour(contour, offset);\n                    if (offsetContour && offsetContour.length > 3) {\n                        // Smooth the contour to remove sharp corners\n                        const smoothed = this.smoothContour(offsetContour);\n                        if (smoothed.length > 2) {\n                            paths.push(smoothed);\n                        }\n                    }\n                }\n            }\n            contours.delete();\n            hierarchy.delete();\n        } catch (error) {\n            console.error('Contour hatching error:', error);\n        }\n        return paths;\n    }\n    /**\n   * Cross hatching - multiple layers at different angles\n   * Classic artistic technique for building up darkness\n   */ static generateCrossHatching(mask, intensity, baseSpacing, primaryAngle, width, height) {\n        const paths = [];\n        // Calculate number of hatch layers based on intensity\n        const maxLayers = 4;\n        const numLayers = Math.ceil(intensity * maxLayers);\n        // Define angles for each layer\n        const angles = [\n            primaryAngle,\n            primaryAngle + 90,\n            primaryAngle + 45,\n            primaryAngle + 135\n        ];\n        // Generate each layer with progressively tighter spacing\n        for(let layer = 0; layer < numLayers; layer++){\n            const layerAngle = angles[layer % angles.length];\n            const layerSpacing = baseSpacing * (1 + layer * 0.3); // Vary spacing slightly\n            const layerPaths = this.generateParallelHatching(mask, 1.0, layerSpacing, layerAngle, width, height);\n            // For additional layers, make lines slightly shorter and more varied\n            if (layer > 0) {\n                const modifiedPaths = layerPaths.map((path)=>this.varyLineLength(path, 0.8 + Math.random() * 0.4));\n                paths.push(...modifiedPaths);\n            } else {\n                paths.push(...layerPaths);\n            }\n        }\n        return paths;\n    }\n    /**\n   * Stippling - density-based dot patterns\n   * Creates subtle tonal gradations\n   */ static generateStippling(mask, intensity, baseSpacing, width, height) {\n        const paths = [];\n        // Calculate dot density based on intensity\n        const dotDensity = intensity * 0.3; // Max 30% coverage\n        const minSpacing = baseSpacing * 0.5;\n        const maxSpacing = baseSpacing * 2;\n        // Use Poisson disk sampling for natural dot distribution\n        const dots = this.poissonDiskSampling(width, height, minSpacing, maxSpacing, dotDensity);\n        // Filter dots to only those inside the mask\n        for (const dot of dots){\n            if (this.isPointInMask(dot, mask)) {\n                // Create a small dot (very short path)\n                const dotSize = 0.5 + Math.random() * 1; // Vary dot size slightly\n                paths.push([\n                    dot,\n                    {\n                        x: dot.x + dotSize,\n                        y: dot.y\n                    }\n                ]);\n            }\n        }\n        return paths;\n    }\n    /**\n   * Standard parallel line hatching with clipping\n   */ static generateParallelHatching(mask, intensity, baseSpacing, angle, width, height) {\n        const paths = [];\n        const radians = angle * Math.PI / 180;\n        const cos = Math.cos(radians);\n        const sin = Math.sin(radians);\n        // Adjust spacing based on intensity\n        const spacing = baseSpacing / Math.max(0.3, intensity);\n        // Generate parallel lines across the canvas\n        const diagonal = Math.sqrt(width * width + height * height);\n        for(let offset = -diagonal; offset < diagonal; offset += spacing){\n            const path = [];\n            // Calculate line endpoints\n            const startX = -diagonal * cos + offset * -sin;\n            const startY = -diagonal * sin + offset * cos;\n            const endX = diagonal * cos + offset * -sin;\n            const endY = diagonal * sin + offset * cos;\n            // Sample points along the line and check against mask\n            const steps = Math.floor(diagonal * 2);\n            let inRegion = false;\n            for(let step = 0; step <= steps; step++){\n                const t = step / steps;\n                const x = Math.round(startX + (endX - startX) * t);\n                const y = Math.round(startY + (endY - startY) * t);\n                if (x >= 0 && x < width && y >= 0 && y < height) {\n                    const isInMask = this.isPointInMask({\n                        x,\n                        y\n                    }, mask);\n                    if (isInMask && !inRegion) {\n                        // Start new line segment\n                        path.push({\n                            x,\n                            y\n                        });\n                        inRegion = true;\n                    } else if (!isInMask && inRegion) {\n                        // End current line segment\n                        if (path.length > 1) {\n                            paths.push([\n                                ...path\n                            ]);\n                        }\n                        path.length = 0;\n                        inRegion = false;\n                    } else if (isInMask && inRegion) {\n                        // Continue current segment\n                        path.push({\n                            x,\n                            y\n                        });\n                    }\n                }\n            }\n            // Add final segment if needed\n            if (path.length > 1) {\n                paths.push(path);\n            }\n        }\n        return paths;\n    }\n    /**\n   * Offset a contour inward/outward by a specified distance\n   */ static offsetContour(contour, offset) {\n        if (!contour || contour.total() < 3) return null;\n        const points = [];\n        // Extract points from OpenCV contour\n        for(let i = 0; i < contour.total(); i++){\n            const point = contour.data32S;\n            points.push({\n                x: point[i * 2],\n                y: point[i * 2 + 1]\n            });\n        }\n        if (points.length < 3) return null;\n        // Simple offset algorithm - move each point along its normal\n        const offsetPoints = [];\n        for(let i = 0; i < points.length; i++){\n            const prev = points[(i - 1 + points.length) % points.length];\n            const curr = points[i];\n            const next = points[(i + 1) % points.length];\n            // Calculate normal vector\n            const v1 = {\n                x: curr.x - prev.x,\n                y: curr.y - prev.y\n            };\n            const v2 = {\n                x: next.x - curr.x,\n                y: next.y - curr.y\n            };\n            // Average direction\n            const normal = {\n                x: -(v1.y + v2.y),\n                y: v1.x + v2.x\n            };\n            const length = Math.sqrt(normal.x * normal.x + normal.y * normal.y);\n            if (length > 0) {\n                normal.x /= length;\n                normal.y /= length;\n                offsetPoints.push({\n                    x: curr.x + normal.x * offset,\n                    y: curr.y + normal.y * offset\n                });\n            } else {\n                offsetPoints.push(curr);\n            }\n        }\n        return offsetPoints;\n    }\n    /**\n   * Smooth a contour using a simple moving average\n   */ static smoothContour(points, iterations = 2) {\n        let smoothed = [\n            ...points\n        ];\n        for(let iter = 0; iter < iterations; iter++){\n            const newPoints = [];\n            for(let i = 0; i < smoothed.length; i++){\n                const prev = smoothed[(i - 1 + smoothed.length) % smoothed.length];\n                const curr = smoothed[i];\n                const next = smoothed[(i + 1) % smoothed.length];\n                newPoints.push({\n                    x: (prev.x + 2 * curr.x + next.x) / 4,\n                    y: (prev.y + 2 * curr.y + next.y) / 4\n                });\n            }\n            smoothed = newPoints;\n        }\n        return smoothed;\n    }\n    /**\n   * Vary the length of a line for artistic effect\n   */ static varyLineLength(path, factor) {\n        if (path.length < 2) return path;\n        const newLength = Math.floor(path.length * factor);\n        if (newLength < 2) return [\n            path[0],\n            path[1]\n        ];\n        const startIndex = Math.floor((path.length - newLength) / 2);\n        return path.slice(startIndex, startIndex + newLength);\n    }\n    /**\n   * Poisson disk sampling for natural dot distribution\n   */ static poissonDiskSampling(width, height, minDist, maxDist, density) {\n        const points = [];\n        const cellSize = minDist / Math.sqrt(2);\n        const gridWidth = Math.ceil(width / cellSize);\n        const gridHeight = Math.ceil(height / cellSize);\n        const grid = Array(gridWidth).fill(null).map(()=>Array(gridHeight).fill(null));\n        const active = [];\n        const k = 30; // Maximum attempts per point\n        // Start with a random point\n        const first = {\n            x: Math.random() * width,\n            y: Math.random() * height\n        };\n        const firstGridX = Math.floor(first.x / cellSize);\n        const firstGridY = Math.floor(first.y / cellSize);\n        grid[firstGridX][firstGridY] = first;\n        points.push(first);\n        active.push(first);\n        while(active.length > 0 && points.length < width * height * density / (minDist * minDist)){\n            const randomIndex = Math.floor(Math.random() * active.length);\n            const current = active[randomIndex];\n            let found = false;\n            for(let i = 0; i < k; i++){\n                const angle = Math.random() * 2 * Math.PI;\n                const distance = minDist + Math.random() * (maxDist - minDist);\n                const candidate = {\n                    x: current.x + Math.cos(angle) * distance,\n                    y: current.y + Math.sin(angle) * distance\n                };\n                if (candidate.x >= 0 && candidate.x < width && candidate.y >= 0 && candidate.y < height) {\n                    const gridX = Math.floor(candidate.x / cellSize);\n                    const gridY = Math.floor(candidate.y / cellSize);\n                    let valid = true;\n                    // Check neighboring grid cells\n                    for(let dx = -2; dx <= 2 && valid; dx++){\n                        for(let dy = -2; dy <= 2 && valid; dy++){\n                            const nx = gridX + dx;\n                            const ny = gridY + dy;\n                            if (nx >= 0 && nx < gridWidth && ny >= 0 && ny < gridHeight && grid[nx][ny]) {\n                                const neighbor = grid[nx][ny];\n                                const dist = Math.sqrt((candidate.x - neighbor.x) ** 2 + (candidate.y - neighbor.y) ** 2);\n                                if (dist < minDist) {\n                                    valid = false;\n                                }\n                            }\n                        }\n                    }\n                    if (valid) {\n                        grid[gridX][gridY] = candidate;\n                        points.push(candidate);\n                        active.push(candidate);\n                        found = true;\n                        break;\n                    }\n                }\n            }\n            if (!found) {\n                active.splice(randomIndex, 1);\n            }\n        }\n        return points;\n    }\n    /**\n   * Check if a point is inside the mask\n   */ static isPointInMask(point, mask) {\n        try {\n            const x = Math.floor(point.x);\n            const y = Math.floor(point.y);\n            if (x < 0 || x >= mask.cols || y < 0 || y >= mask.rows) {\n                return false;\n            }\n            return mask.ucharPtr(y, x)[0] > 0;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/advanced-hatching.ts\n");

/***/ }),

/***/ "(ssr)/./lib/curve-fitting.ts":
/*!******************************!*\
  !*** ./lib/curve-fitting.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CurveFitter: () => (/* binding */ CurveFitter)\n/* harmony export */ });\n// Professional Bézier Curve Fitting and Path Optimization\n// Transforms jagged polylines into smooth, elegant curves\nclass CurveFitter {\n    /**\n   * Fits smooth Bézier curves to a polyline path\n   * Uses a simplified Potrace-inspired algorithm\n   */ static fitCurves(points, tolerance = 2.0) {\n        if (points.length < 3) return [];\n        const curves = [];\n        let i = 0;\n        while(i < points.length - 1){\n            // Try to fit the longest possible curve from current position\n            let bestFit = this.findBestCurveFit(points, i, tolerance);\n            if (bestFit) {\n                curves.push(bestFit.curve);\n                i = bestFit.endIndex;\n            } else {\n                // Fallback: create a short curve or line\n                if (i < points.length - 2) {\n                    const simpleCurve = this.createSimpleBezier(points[i], points[i + 1], points[i + 2]);\n                    curves.push(simpleCurve);\n                    i += 2;\n                } else {\n                    i++;\n                }\n            }\n        }\n        return curves;\n    }\n    /**\n   * Finds the best Bézier curve fit for a segment of points\n   */ static findBestCurveFit(points, startIndex, tolerance) {\n        const maxSegmentLength = Math.min(points.length - startIndex, 20); // Limit for performance\n        let bestFit = null;\n        // Try different end points, starting from the longest possible curve\n        for(let length = maxSegmentLength; length >= 3; length--){\n            const endIndex = startIndex + length - 1;\n            if (endIndex >= points.length) continue;\n            const segment = points.slice(startIndex, endIndex + 1);\n            const curve = this.fitBezierToPoints(segment);\n            const error = this.calculateCurveError(segment, curve);\n            if (error <= tolerance) {\n                bestFit = {\n                    curve,\n                    endIndex,\n                    error\n                };\n                break; // Take the first (longest) fit within tolerance\n            }\n        }\n        return bestFit ? {\n            curve: bestFit.curve,\n            endIndex: bestFit.endIndex\n        } : null;\n    }\n    /**\n   * Fits a Bézier curve to a set of points using least squares\n   */ static fitBezierToPoints(points) {\n        const n = points.length;\n        if (n < 3) {\n            // Fallback for too few points\n            return this.createSimpleBezier(points[0], points[1] || points[0], points[2] || points[1] || points[0]);\n        }\n        const start = points[0];\n        const end = points[n - 1];\n        // Calculate tangent vectors at start and end\n        const startTangent = this.calculateTangent(points, 0);\n        const endTangent = this.calculateTangent(points, n - 1);\n        // Estimate control points using chord length parameterization\n        const alpha = 0.3; // Control point distance factor\n        const startLength = this.distance(start, end) * alpha;\n        const endLength = this.distance(start, end) * alpha;\n        const control1 = {\n            x: start.x + startTangent.x * startLength,\n            y: start.y + startTangent.y * startLength\n        };\n        const control2 = {\n            x: end.x - endTangent.x * endLength,\n            y: end.y - endTangent.y * endLength\n        };\n        // Optimize control points using least squares\n        const optimized = this.optimizeControlPoints(points, start, control1, control2, end);\n        return {\n            start,\n            control1: optimized.control1,\n            control2: optimized.control2,\n            end,\n            type: 'bezier'\n        };\n    }\n    /**\n   * Calculate tangent direction at a point\n   */ static calculateTangent(points, index) {\n        const n = points.length;\n        let tangent;\n        if (index === 0) {\n            // Forward difference at start\n            tangent = {\n                x: points[1].x - points[0].x,\n                y: points[1].y - points[0].y\n            };\n        } else if (index === n - 1) {\n            // Backward difference at end\n            tangent = {\n                x: points[n - 1].x - points[n - 2].x,\n                y: points[n - 1].y - points[n - 2].y\n            };\n        } else {\n            // Central difference in middle\n            tangent = {\n                x: points[index + 1].x - points[index - 1].x,\n                y: points[index + 1].y - points[index - 1].y\n            };\n        }\n        // Normalize\n        const length = Math.sqrt(tangent.x * tangent.x + tangent.y * tangent.y);\n        if (length > 0) {\n            tangent.x /= length;\n            tangent.y /= length;\n        }\n        return tangent;\n    }\n    /**\n   * Optimize control points using iterative improvement\n   */ static optimizeControlPoints(points, start, control1, control2, end) {\n        let bestC1 = control1;\n        let bestC2 = control2;\n        let bestError = this.calculateCurveError(points, {\n            start,\n            control1,\n            control2,\n            end,\n            type: 'bezier'\n        });\n        // Simple gradient descent-like optimization\n        const step = 0.5;\n        const iterations = 5;\n        for(let iter = 0; iter < iterations; iter++){\n            // Try small perturbations of control points\n            const perturbations = [\n                {\n                    dx: step,\n                    dy: 0\n                },\n                {\n                    dx: -step,\n                    dy: 0\n                },\n                {\n                    dx: 0,\n                    dy: step\n                },\n                {\n                    dx: 0,\n                    dy: -step\n                },\n                {\n                    dx: step,\n                    dy: step\n                },\n                {\n                    dx: -step,\n                    dy: -step\n                },\n                {\n                    dx: step,\n                    dy: -step\n                },\n                {\n                    dx: -step,\n                    dy: step\n                }\n            ];\n            for (const p1 of perturbations){\n                for (const p2 of perturbations){\n                    const newC1 = {\n                        x: bestC1.x + p1.dx,\n                        y: bestC1.y + p1.dy\n                    };\n                    const newC2 = {\n                        x: bestC2.x + p2.dx,\n                        y: bestC2.y + p2.dy\n                    };\n                    const curve = {\n                        start,\n                        control1: newC1,\n                        control2: newC2,\n                        end,\n                        type: 'bezier'\n                    };\n                    const error = this.calculateCurveError(points, curve);\n                    if (error < bestError) {\n                        bestC1 = newC1;\n                        bestC2 = newC2;\n                        bestError = error;\n                    }\n                }\n            }\n        }\n        return {\n            control1: bestC1,\n            control2: bestC2\n        };\n    }\n    /**\n   * Calculate error between points and Bézier curve\n   */ static calculateCurveError(points, curve) {\n        let totalError = 0;\n        const n = points.length;\n        for(let i = 0; i < n; i++){\n            const t = i / (n - 1); // Parameter along curve\n            const curvePoint = this.evaluateBezier(curve, t);\n            const error = this.distance(points[i], curvePoint);\n            totalError += error * error; // Squared error\n        }\n        return Math.sqrt(totalError / n); // RMS error\n    }\n    /**\n   * Evaluate Bézier curve at parameter t\n   */ static evaluateBezier(curve, t) {\n        const { start, control1, control2, end } = curve;\n        const u = 1 - t;\n        const tt = t * t;\n        const uu = u * u;\n        const uuu = uu * u;\n        const ttt = tt * t;\n        return {\n            x: uuu * start.x + 3 * uu * t * control1.x + 3 * u * tt * control2.x + ttt * end.x,\n            y: uuu * start.y + 3 * uu * t * control1.y + 3 * u * tt * control2.y + ttt * end.y\n        };\n    }\n    /**\n   * Create a simple Bézier curve through three points\n   */ static createSimpleBezier(p0, p1, p2) {\n        // Place control points to create a smooth curve through the middle point\n        const control1 = {\n            x: p0.x + (p1.x - p0.x) * 0.5,\n            y: p0.y + (p1.y - p0.y) * 0.5\n        };\n        const control2 = {\n            x: p1.x + (p2.x - p1.x) * 0.5,\n            y: p1.y + (p2.y - p1.y) * 0.5\n        };\n        return {\n            start: p0,\n            control1,\n            control2,\n            end: p2,\n            type: 'bezier'\n        };\n    }\n    /**\n   * Try to convert Bézier curves to circular arcs where possible\n   * This enables G2/G3 G-code generation\n   */ static convertToArcs(curves, tolerance = 1.0) {\n        return curves.map((curve)=>{\n            if (curve.type === 'arc') return curve;\n            const arc = this.tryConvertBezierToArc(curve, tolerance);\n            return arc || curve;\n        });\n    }\n    /**\n   * Attempt to convert a Bézier curve to a circular arc\n   */ static tryConvertBezierToArc(bezier, tolerance) {\n        // Sample points along the Bézier curve\n        const samples = 10;\n        const points = [];\n        for(let i = 0; i <= samples; i++){\n            const t = i / samples;\n            points.push(this.evaluateBezier(bezier, t));\n        }\n        // Try to fit a circle to these points\n        const circle = this.fitCircleToPoints(points);\n        if (!circle) return null;\n        // Check if the circle approximation is within tolerance\n        let maxError = 0;\n        for (const point of points){\n            const distToCenter = this.distance(point, circle.center);\n            const error = Math.abs(distToCenter - circle.radius);\n            maxError = Math.max(maxError, error);\n        }\n        if (maxError <= tolerance) {\n            // Determine if the arc is clockwise or counter-clockwise\n            const midPoint = this.evaluateBezier(bezier, 0.5);\n            const startToMid = {\n                x: midPoint.x - bezier.start.x,\n                y: midPoint.y - bezier.start.y\n            };\n            const startToEnd = {\n                x: bezier.end.x - bezier.start.x,\n                y: bezier.end.y - bezier.start.y\n            };\n            const cross = startToMid.x * startToEnd.y - startToMid.y * startToEnd.x;\n            return {\n                start: bezier.start,\n                end: bezier.end,\n                center: circle.center,\n                radius: circle.radius,\n                clockwise: cross < 0,\n                type: 'arc'\n            };\n        }\n        return null;\n    }\n    /**\n   * Fit a circle to a set of points using least squares\n   */ static fitCircleToPoints(points) {\n        if (points.length < 3) return null;\n        // Use algebraic circle fitting (simpler than geometric)\n        // Circle equation: (x-a)² + (y-b)² = r²\n        // Expanded: x² + y² - 2ax - 2by + (a² + b² - r²) = 0\n        let sumX = 0, sumY = 0, sumX2 = 0, sumY2 = 0, sumXY = 0;\n        let sumX3 = 0, sumY3 = 0, sumX2Y = 0, sumXY2 = 0;\n        for (const p of points){\n            const x = p.x, y = p.y;\n            const x2 = x * x, y2 = y * y;\n            sumX += x;\n            sumY += y;\n            sumX2 += x2;\n            sumY2 += y2;\n            sumXY += x * y;\n            sumX3 += x2 * x;\n            sumY3 += y2 * y;\n            sumX2Y += x2 * y;\n            sumXY2 += x * y2;\n        }\n        const n = points.length;\n        const A = n * sumX2 - sumX * sumX;\n        const B = n * sumXY - sumX * sumY;\n        const C = n * sumY2 - sumY * sumY;\n        const D = 0.5 * (n * sumX2Y - sumX * sumXY + n * sumX3 - sumX * sumX2);\n        const E = 0.5 * (n * sumXY2 - sumY * sumXY + n * sumY3 - sumY * sumY2);\n        const det = A * C - B * B;\n        if (Math.abs(det) < 1e-10) return null; // Degenerate case\n        const centerX = (D * C - B * E) / det;\n        const centerY = (A * E - B * D) / det;\n        // Calculate radius as average distance to center\n        let sumDist = 0;\n        for (const p of points){\n            sumDist += this.distance(p, {\n                x: centerX,\n                y: centerY\n            });\n        }\n        const radius = sumDist / n;\n        return {\n            center: {\n                x: centerX,\n                y: centerY\n            },\n            radius\n        };\n    }\n    /**\n   * Calculate distance between two points\n   */ static distance(p1, p2) {\n        const dx = p2.x - p1.x;\n        const dy = p2.y - p1.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/curve-fitting.ts\n");

/***/ }),

/***/ "(ssr)/./lib/gcode.ts":
/*!**********************!*\
  !*** ./lib/gcode.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAdvancedGCode: () => (/* binding */ generateAdvancedGCode),\n/* harmony export */   generateGCode: () => (/* binding */ generateGCode)\n/* harmony export */ });\nfunction generateGCode(paths, scale) {\n    let gcode = \"\";\n    // Header - Setup and initialization\n    gcode += \"; Generated by Professional Vectorization Engine\\n\";\n    gcode += \"; Advanced curve fitting with G2/G3 arc support\\n\";\n    gcode += \"G21 ; Set units to millimeters\\n\";\n    gcode += \"G90 ; Use absolute positioning\\n\";\n    gcode += \"G92 X0 Y0 Z0 ; Set current position as origin\\n\";\n    gcode += \"G1 F1500 ; Set drawing feed rate (slower for precision)\\n\";\n    gcode += \"G0 F3000 ; Set rapid move feed rate\\n\";\n    gcode += \"G0 Z5 ; Initial pen lift\\n\";\n    gcode += \"\\n\";\n    let pathCount = 0;\n    const scaleFactor = scale / 100;\n    for (const path of paths){\n        if (path.length < 2) continue; // Skip single points\n        pathCount++;\n        gcode += `; Path ${pathCount} - ${path.length} points\\n`;\n        const startPoint = path[0];\n        // Move to start position with pen up\n        gcode += `G0 Z5 ; Lift pen\\n`;\n        gcode += `G0 X${(startPoint.x * scaleFactor).toFixed(3)} Y${(startPoint.y * scaleFactor).toFixed(3)} ; Move to start\\n`;\n        gcode += `G1 Z0 ; Lower pen\\n`;\n        // Draw the path with higher precision\n        for(let i = 1; i < path.length; i++){\n            const point = path[i];\n            gcode += `G1 X${(point.x * scaleFactor).toFixed(3)} Y${(point.y * scaleFactor).toFixed(3)}\\n`;\n        }\n        gcode += \"\\n\";\n    }\n    // Footer - Safe ending\n    gcode += \"; End of drawing\\n\";\n    gcode += \"G0 Z5 ; Final pen lift\\n\";\n    gcode += \"G0 X0 Y0 ; Return to origin\\n\";\n    gcode += \"M30 ; End program\\n\";\n    // Add statistics\n    gcode += `; Statistics: ${pathCount} paths, ${paths.reduce((sum, path)=>sum + path.length, 0)} total points\\n`;\n    return gcode;\n}\n/**\n * Advanced G-code generation with curve support\n * Generates smooth G2/G3 arcs and approximated Bézier curves\n */ function generateAdvancedGCode(curves, scale, options = {}) {\n    const { enableArcs = true, bezierResolution = 10, arcTolerance = 0.1 } = options;\n    let gcode = \"\";\n    const scaleFactor = scale / 100;\n    // Enhanced header\n    gcode += \"; Generated by Professional Vectorization Engine\\n\";\n    gcode += \"; Advanced curve fitting with G2/G3 arc support\\n\";\n    gcode += \"; Smooth curves for superior print quality\\n\";\n    gcode += \"G21 ; Set units to millimeters\\n\";\n    gcode += \"G90 ; Use absolute positioning\\n\";\n    gcode += \"G92 X0 Y0 Z0 ; Set current position as origin\\n\";\n    gcode += \"G1 F1200 ; Set drawing feed rate (optimized for curves)\\n\";\n    gcode += \"G0 F3000 ; Set rapid move feed rate\\n\";\n    gcode += \"G0 Z5 ; Initial pen lift\\n\";\n    gcode += \"\\n\";\n    let curveCount = 0;\n    let arcCount = 0;\n    let bezierCount = 0;\n    for (const curve of curves){\n        curveCount++;\n        gcode += `; Curve ${curveCount} - Type: ${curve.type}\\n`;\n        const startPoint = curve.start;\n        // Move to start position with pen up\n        gcode += `G0 Z5 ; Lift pen\\n`;\n        gcode += `G0 X${(startPoint.x * scaleFactor).toFixed(3)} Y${(startPoint.y * scaleFactor).toFixed(3)} ; Move to start\\n`;\n        gcode += `G1 Z0 ; Lower pen\\n`;\n        if (curve.type === 'arc' && enableArcs) {\n            // Generate G2/G3 arc command\n            const arc = curve;\n            const endX = arc.end.x * scaleFactor;\n            const endY = arc.end.y * scaleFactor;\n            const centerOffsetX = (arc.center.x - arc.start.x) * scaleFactor;\n            const centerOffsetY = (arc.center.y - arc.start.y) * scaleFactor;\n            const gCommand = arc.clockwise ? 'G2' : 'G3';\n            gcode += `${gCommand} X${endX.toFixed(3)} Y${endY.toFixed(3)} I${centerOffsetX.toFixed(3)} J${centerOffsetY.toFixed(3)} ; Arc radius ${(arc.radius * scaleFactor).toFixed(2)}\\n`;\n            arcCount++;\n        } else if (curve.type === 'bezier') {\n            // Approximate Bézier curve with line segments or arcs\n            const bezier = curve;\n            if (enableArcs) {\n                // Try to approximate with arcs first\n                const arcApproximation = approximateBezierWithArcs(bezier, arcTolerance * scaleFactor);\n                if (arcApproximation.length > 0) {\n                    for (const arcSeg of arcApproximation){\n                        const endX = arcSeg.end.x * scaleFactor;\n                        const endY = arcSeg.end.y * scaleFactor;\n                        const centerOffsetX = (arcSeg.center.x - arcSeg.start.x) * scaleFactor;\n                        const centerOffsetY = (arcSeg.center.y - arcSeg.start.y) * scaleFactor;\n                        const gCommand = arcSeg.clockwise ? 'G2' : 'G3';\n                        gcode += `${gCommand} X${endX.toFixed(3)} Y${endY.toFixed(3)} I${centerOffsetX.toFixed(3)} J${centerOffsetY.toFixed(3)} ; Bezier arc approx\\n`;\n                    }\n                    arcCount += arcApproximation.length;\n                } else {\n                    // Fallback to line segments\n                    const points = sampleBezierCurve(bezier, bezierResolution);\n                    for(let i = 1; i < points.length; i++){\n                        const point = points[i];\n                        gcode += `G1 X${(point.x * scaleFactor).toFixed(3)} Y${(point.y * scaleFactor).toFixed(3)}\\n`;\n                    }\n                }\n            } else {\n                // Use line segments for Bézier curves\n                const points = sampleBezierCurve(bezier, bezierResolution);\n                for(let i = 1; i < points.length; i++){\n                    const point = points[i];\n                    gcode += `G1 X${(point.x * scaleFactor).toFixed(3)} Y${(point.y * scaleFactor).toFixed(3)}\\n`;\n                }\n            }\n            bezierCount++;\n        }\n        gcode += \"\\n\";\n    }\n    // Enhanced footer with detailed statistics\n    gcode += \"; End of drawing\\n\";\n    gcode += \"G0 Z5 ; Final pen lift\\n\";\n    gcode += \"G0 X0 Y0 ; Return to origin\\n\";\n    gcode += \"M30 ; End program\\n\";\n    gcode += \"\\n\";\n    gcode += `; Advanced Statistics:\\n`;\n    gcode += `; Total curves: ${curveCount}\\n`;\n    gcode += `; G2/G3 arcs: ${arcCount}\\n`;\n    gcode += `; Bézier curves: ${bezierCount}\\n`;\n    gcode += `; Arc support: ${enableArcs ? 'enabled' : 'disabled'}\\n`;\n    gcode += `; Scale factor: ${scaleFactor.toFixed(3)}\\n`;\n    return gcode;\n}\n/**\n * Sample points along a Bézier curve\n */ function sampleBezierCurve(bezier, resolution) {\n    const points = [];\n    for(let i = 0; i <= resolution; i++){\n        const t = i / resolution;\n        const point = evaluateBezier(bezier, t);\n        points.push(point);\n    }\n    return points;\n}\n/**\n * Evaluate Bézier curve at parameter t\n */ function evaluateBezier(curve, t) {\n    const { start, control1, control2, end } = curve;\n    const u = 1 - t;\n    const tt = t * t;\n    const uu = u * u;\n    const uuu = uu * u;\n    const ttt = tt * t;\n    return {\n        x: uuu * start.x + 3 * uu * t * control1.x + 3 * u * tt * control2.x + ttt * end.x,\n        y: uuu * start.y + 3 * uu * t * control1.y + 3 * u * tt * control2.y + ttt * end.y\n    };\n}\n/**\n * Approximate a Bézier curve with one or more circular arcs\n * This enables smooth G2/G3 output for complex curves\n */ function approximateBezierWithArcs(bezier, tolerance) {\n    // Sample the Bézier curve to analyze its shape\n    const samples = 20;\n    const points = [];\n    for(let i = 0; i <= samples; i++){\n        const t = i / samples;\n        points.push(evaluateBezier(bezier, t));\n    }\n    // Try to fit a single arc to the entire curve\n    const singleArc = fitArcToPoints(points);\n    if (singleArc && calculateArcError(points, singleArc) <= tolerance) {\n        return [\n            singleArc\n        ];\n    }\n    // If single arc fails, try splitting into two arcs\n    const midPoint = Math.floor(samples / 2);\n    const firstHalf = points.slice(0, midPoint + 1);\n    const secondHalf = points.slice(midPoint);\n    const arc1 = fitArcToPoints(firstHalf);\n    const arc2 = fitArcToPoints(secondHalf);\n    if (arc1 && arc2 && calculateArcError(firstHalf, arc1) <= tolerance && calculateArcError(secondHalf, arc2) <= tolerance) {\n        return [\n            arc1,\n            arc2\n        ];\n    }\n    // If arc fitting fails, return empty array to fall back to line segments\n    return [];\n}\n/**\n * Fit a circular arc to a set of points\n */ function fitArcToPoints(points) {\n    if (points.length < 3) return null;\n    // Use three points to define the arc: start, middle, end\n    const start = points[0];\n    const middle = points[Math.floor(points.length / 2)];\n    const end = points[points.length - 1];\n    // Find circle center using perpendicular bisectors\n    const center = findCircleCenter(start, middle, end);\n    if (!center) return null;\n    const radius = distance(start, center);\n    // Determine if arc is clockwise\n    const startToMid = {\n        x: middle.x - start.x,\n        y: middle.y - start.y\n    };\n    const startToEnd = {\n        x: end.x - start.x,\n        y: end.y - start.y\n    };\n    const cross = startToMid.x * startToEnd.y - startToMid.y * startToEnd.x;\n    return {\n        start,\n        end,\n        center,\n        radius,\n        clockwise: cross < 0,\n        type: 'arc'\n    };\n}\n/**\n * Find the center of a circle passing through three points\n */ function findCircleCenter(p1, p2, p3) {\n    const ax = p1.x, ay = p1.y;\n    const bx = p2.x, by = p2.y;\n    const cx = p3.x, cy = p3.y;\n    const d = 2 * (ax * (by - cy) + bx * (cy - ay) + cx * (ay - by));\n    if (Math.abs(d) < 1e-10) return null; // Points are collinear\n    const ux = ((ax * ax + ay * ay) * (by - cy) + (bx * bx + by * by) * (cy - ay) + (cx * cx + cy * cy) * (ay - by)) / d;\n    const uy = ((ax * ax + ay * ay) * (cx - bx) + (bx * bx + by * by) * (ax - cx) + (cx * cx + cy * cy) * (bx - ax)) / d;\n    return {\n        x: ux,\n        y: uy\n    };\n}\n/**\n * Calculate error between points and arc approximation\n */ function calculateArcError(points, arc) {\n    let maxError = 0;\n    for (const point of points){\n        const distToCenter = distance(point, arc.center);\n        const error = Math.abs(distToCenter - arc.radius);\n        maxError = Math.max(maxError, error);\n    }\n    return maxError;\n}\n/**\n * Calculate distance between two points\n */ function distance(p1, p2) {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/gcode.ts\n");

/***/ }),

/***/ "(ssr)/./lib/path-optimization.ts":
/*!**********************************!*\
  !*** ./lib/path-optimization.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PathOptimizer: () => (/* binding */ PathOptimizer)\n/* harmony export */ });\n// Advanced Path Optimization\n// Professional TSP solving and path merging for minimal travel time\nclass PathOptimizer {\n    /**\n   * Comprehensive path optimization using multiple strategies\n   */ static optimizePaths(paths, options = {}) {\n        const { enablePathMerging = true, enable2Opt = true, mergeThreshold = 5.0, maxIterations = 100 } = options;\n        if (paths.length === 0) {\n            return {\n                paths: [],\n                totalDistance: 0,\n                improvement: 0\n            };\n        }\n        const originalDistance = this.calculateTotalTravelDistance(paths);\n        let optimizedPaths = [\n            ...paths\n        ];\n        // Step 1: Merge nearby paths to eliminate pen-up/pen-down cycles\n        if (enablePathMerging) {\n            optimizedPaths = this.mergePaths(optimizedPaths, mergeThreshold);\n        }\n        // Step 2: Apply 2-opt optimization for global path ordering\n        if (enable2Opt && optimizedPaths.length > 2) {\n            optimizedPaths = this.apply2Opt(optimizedPaths, maxIterations);\n        }\n        // Step 3: Fine-tune with greedy improvements\n        optimizedPaths = this.greedyImprovement(optimizedPaths);\n        const finalDistance = this.calculateTotalTravelDistance(optimizedPaths);\n        const improvement = originalDistance > 0 ? (originalDistance - finalDistance) / originalDistance * 100 : 0;\n        return {\n            paths: optimizedPaths,\n            totalDistance: finalDistance,\n            improvement\n        };\n    }\n    /**\n   * Merge paths that are close together to eliminate unnecessary pen movements\n   */ static mergePaths(paths, threshold) {\n        if (paths.length <= 1) return paths;\n        const merged = [];\n        const used = new Set();\n        for(let i = 0; i < paths.length; i++){\n            if (used.has(i)) continue;\n            let currentPath = [\n                ...paths[i]\n            ];\n            used.add(i);\n            // Try to merge with other paths\n            let foundMerge = true;\n            while(foundMerge){\n                foundMerge = false;\n                for(let j = 0; j < paths.length; j++){\n                    if (used.has(j)) continue;\n                    const otherPath = paths[j];\n                    const mergeResult = this.tryMergePaths(currentPath, otherPath, threshold);\n                    if (mergeResult) {\n                        currentPath = mergeResult;\n                        used.add(j);\n                        foundMerge = true;\n                        break; // Start over to find more merges\n                    }\n                }\n            }\n            if (currentPath.length > 0) {\n                merged.push(currentPath);\n            }\n        }\n        return merged;\n    }\n    /**\n   * Try to merge two paths if they are close enough\n   */ static tryMergePaths(path1, path2, threshold) {\n        if (path1.length === 0 || path2.length === 0) return null;\n        const p1Start = path1[0];\n        const p1End = path1[path1.length - 1];\n        const p2Start = path2[0];\n        const p2End = path2[path2.length - 1];\n        // Check all possible connections\n        const connections = [\n            {\n                dist: this.distance(p1End, p2Start),\n                merge: ()=>[\n                        ...path1,\n                        ...path2\n                    ]\n            },\n            {\n                dist: this.distance(p1End, p2End),\n                merge: ()=>[\n                        ...path1,\n                        ...path2.slice().reverse()\n                    ]\n            },\n            {\n                dist: this.distance(p1Start, p2Start),\n                merge: ()=>[\n                        ...path1.slice().reverse(),\n                        ...path2\n                    ]\n            },\n            {\n                dist: this.distance(p1Start, p2End),\n                merge: ()=>[\n                        ...path1.slice().reverse(),\n                        ...path2.slice().reverse()\n                    ]\n            }\n        ];\n        // Find the best connection within threshold\n        const best = connections.reduce((min, conn)=>conn.dist < min.dist ? conn : min);\n        if (best.dist <= threshold) {\n            return best.merge();\n        }\n        return null;\n    }\n    /**\n   * Apply 2-opt optimization to improve path ordering\n   * This is a classic TSP optimization technique\n   */ static apply2Opt(paths, maxIterations) {\n        if (paths.length < 4) return paths; // Need at least 4 paths for 2-opt\n        let currentOrder = paths.map((_, index)=>index);\n        let bestDistance = this.calculatePathOrderDistance(paths, currentOrder);\n        let improved = true;\n        let iteration = 0;\n        while(improved && iteration < maxIterations){\n            improved = false;\n            for(let i = 1; i < currentOrder.length - 2; i++){\n                for(let j = i + 1; j < currentOrder.length; j++){\n                    if (j - i === 1) continue; // Skip adjacent paths\n                    // Try 2-opt swap\n                    const newOrder = this.swap2Opt(currentOrder, i, j);\n                    const newDistance = this.calculatePathOrderDistance(paths, newOrder);\n                    if (newDistance < bestDistance) {\n                        currentOrder = newOrder;\n                        bestDistance = newDistance;\n                        improved = true;\n                    }\n                }\n            }\n            iteration++;\n        }\n        // Reorder paths according to optimized order\n        return currentOrder.map((index)=>paths[index]);\n    }\n    /**\n   * Perform 2-opt swap on path order\n   */ static swap2Opt(order, i, j) {\n        const newOrder = [\n            ...order\n        ];\n        // Reverse the segment between i and j\n        while(i < j){\n            [newOrder[i], newOrder[j]] = [\n                newOrder[j],\n                newOrder[i]\n            ];\n            i++;\n            j--;\n        }\n        return newOrder;\n    }\n    /**\n   * Calculate total distance for a specific path ordering\n   */ static calculatePathOrderDistance(paths, order) {\n        let totalDistance = 0;\n        for(let i = 0; i < order.length - 1; i++){\n            const currentPath = paths[order[i]];\n            const nextPath = paths[order[i + 1]];\n            if (currentPath.length > 0 && nextPath.length > 0) {\n                const currentEnd = currentPath[currentPath.length - 1];\n                const nextStart = nextPath[0];\n                totalDistance += this.distance(currentEnd, nextStart);\n            }\n        }\n        return totalDistance;\n    }\n    /**\n   * Apply greedy improvements to fine-tune the solution\n   */ static greedyImprovement(paths) {\n        if (paths.length <= 2) return paths;\n        const improved = [\n            ...paths\n        ];\n        let madeImprovement = true;\n        while(madeImprovement){\n            madeImprovement = false;\n            // Try swapping adjacent paths\n            for(let i = 0; i < improved.length - 1; i++){\n                const originalDistance = this.calculateTravelBetween(improved[i], improved[i + 1], i > 0 ? improved[i - 1] : null, i + 2 < improved.length ? improved[i + 2] : null);\n                // Swap and test\n                [improved[i], improved[i + 1]] = [\n                    improved[i + 1],\n                    improved[i]\n                ];\n                const newDistance = this.calculateTravelBetween(improved[i], improved[i + 1], i > 0 ? improved[i - 1] : null, i + 2 < improved.length ? improved[i + 2] : null);\n                if (newDistance < originalDistance) {\n                    madeImprovement = true;\n                } else {\n                    // Swap back if no improvement\n                    [improved[i], improved[i + 1]] = [\n                        improved[i + 1],\n                        improved[i]\n                    ];\n                }\n            }\n        }\n        return improved;\n    }\n    /**\n   * Calculate travel distance between two paths considering context\n   */ static calculateTravelBetween(path1, path2, prevPath, nextPath) {\n        let distance = 0;\n        // Distance from previous path to path1 (if exists)\n        if (prevPath && prevPath.length > 0 && path1.length > 0) {\n            distance += this.distance(prevPath[prevPath.length - 1], path1[0]);\n        }\n        // Distance from path1 to path2\n        if (path1.length > 0 && path2.length > 0) {\n            distance += this.distance(path1[path1.length - 1], path2[0]);\n        }\n        // Distance from path2 to next path (if exists)\n        if (path2.length > 0 && nextPath && nextPath.length > 0) {\n            distance += this.distance(path2[path2.length - 1], nextPath[0]);\n        }\n        return distance;\n    }\n    /**\n   * Calculate total travel distance for all paths\n   */ static calculateTotalTravelDistance(paths) {\n        let totalDistance = 0;\n        for(let i = 0; i < paths.length - 1; i++){\n            const currentPath = paths[i];\n            const nextPath = paths[i + 1];\n            if (currentPath.length > 0 && nextPath.length > 0) {\n                const currentEnd = currentPath[currentPath.length - 1];\n                const nextStart = nextPath[0];\n                totalDistance += this.distance(currentEnd, nextStart);\n            }\n        }\n        return totalDistance;\n    }\n    /**\n   * Advanced path simplification using Ramer-Douglas-Peucker with adaptive tolerance\n   */ static advancedSimplification(paths, baseEpsilon = 1.0) {\n        return paths.map((path)=>this.adaptiveSimplify(path, baseEpsilon));\n    }\n    /**\n   * Adaptive simplification that varies tolerance based on path characteristics\n   */ static adaptiveSimplify(path, baseEpsilon) {\n        if (path.length <= 3) return path;\n        // Analyze path curvature to determine appropriate epsilon\n        const curvature = this.analyzeCurvature(path);\n        const adaptiveEpsilon = baseEpsilon * (1 + curvature * 0.5); // Higher tolerance for more curved paths\n        return this.douglasPeucker(path, adaptiveEpsilon);\n    }\n    /**\n   * Analyze the overall curvature of a path\n   */ static analyzeCurvature(path) {\n        if (path.length < 3) return 0;\n        let totalCurvature = 0;\n        let segments = 0;\n        for(let i = 1; i < path.length - 1; i++){\n            const p1 = path[i - 1];\n            const p2 = path[i];\n            const p3 = path[i + 1];\n            // Calculate angle change\n            const v1 = {\n                x: p2.x - p1.x,\n                y: p2.y - p1.y\n            };\n            const v2 = {\n                x: p3.x - p2.x,\n                y: p3.y - p2.y\n            };\n            const angle1 = Math.atan2(v1.y, v1.x);\n            const angle2 = Math.atan2(v2.y, v2.x);\n            let angleDiff = Math.abs(angle2 - angle1);\n            if (angleDiff > Math.PI) angleDiff = 2 * Math.PI - angleDiff;\n            totalCurvature += angleDiff;\n            segments++;\n        }\n        return segments > 0 ? totalCurvature / segments : 0;\n    }\n    /**\n   * Douglas-Peucker line simplification algorithm\n   */ static douglasPeucker(points, epsilon) {\n        if (points.length <= 2) return points;\n        let maxDistance = 0;\n        let maxIndex = 0;\n        const end = points.length - 1;\n        for(let i = 1; i < end; i++){\n            const distance = this.perpendicularDistance(points[i], points[0], points[end]);\n            if (distance > maxDistance) {\n                maxDistance = distance;\n                maxIndex = i;\n            }\n        }\n        if (maxDistance > epsilon) {\n            const left = this.douglasPeucker(points.slice(0, maxIndex + 1), epsilon);\n            const right = this.douglasPeucker(points.slice(maxIndex), epsilon);\n            return [\n                ...left.slice(0, -1),\n                ...right\n            ];\n        } else {\n            return [\n                points[0],\n                points[end]\n            ];\n        }\n    }\n    /**\n   * Calculate perpendicular distance from point to line\n   */ static perpendicularDistance(point, lineStart, lineEnd) {\n        const A = lineEnd.y - lineStart.y;\n        const B = lineStart.x - lineEnd.x;\n        const C = lineEnd.x * lineStart.y - lineStart.x * lineEnd.y;\n        return Math.abs(A * point.x + B * point.y + C) / Math.sqrt(A * A + B * B);\n    }\n    /**\n   * Calculate distance between two points\n   */ static distance(p1, p2) {\n        const dx = p2.x - p1.x;\n        const dy = p2.y - p1.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    /**\n   * Analyze optimization results and provide recommendations\n   */ static analyzeOptimization(result) {\n        const { totalDistance, improvement } = result;\n        let analysis = `Path optimization complete:\\n`;\n        analysis += `• Total travel distance: ${totalDistance.toFixed(1)} units\\n`;\n        analysis += `• Improvement: ${improvement.toFixed(1)}%\\n`;\n        if (improvement > 20) {\n            analysis += `• Excellent optimization! Significant travel time reduction.`;\n        } else if (improvement > 10) {\n            analysis += `• Good optimization achieved.`;\n        } else if (improvement > 5) {\n            analysis += `• Modest improvements made.`;\n        } else {\n            analysis += `• Path order was already quite efficient.`;\n        }\n        return analysis;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9saWIvcGF0aC1vcHRpbWl6YXRpb24udHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDZCQUE2QjtBQUM3QixvRUFBb0U7QUFlN0QsTUFBTUE7SUFFWDs7R0FFQyxHQUNELE9BQU9DLGNBQWNDLEtBQWEsRUFBRUMsVUFLaEMsQ0FBQyxDQUFDLEVBQXNCO1FBRTFCLE1BQU0sRUFDSkMsb0JBQW9CLElBQUksRUFDeEJDLGFBQWEsSUFBSSxFQUNqQkMsaUJBQWlCLEdBQUcsRUFDcEJDLGdCQUFnQixHQUFHLEVBQ3BCLEdBQUdKO1FBRUosSUFBSUQsTUFBTU0sTUFBTSxLQUFLLEdBQUc7WUFDdEIsT0FBTztnQkFBRU4sT0FBTyxFQUFFO2dCQUFFTyxlQUFlO2dCQUFHQyxhQUFhO1lBQUU7UUFDdkQ7UUFFQSxNQUFNQyxtQkFBbUIsSUFBSSxDQUFDQyw0QkFBNEIsQ0FBQ1Y7UUFDM0QsSUFBSVcsaUJBQWlCO2VBQUlYO1NBQU07UUFFL0IsaUVBQWlFO1FBQ2pFLElBQUlFLG1CQUFtQjtZQUNyQlMsaUJBQWlCLElBQUksQ0FBQ0MsVUFBVSxDQUFDRCxnQkFBZ0JQO1FBQ25EO1FBRUEsNERBQTREO1FBQzVELElBQUlELGNBQWNRLGVBQWVMLE1BQU0sR0FBRyxHQUFHO1lBQzNDSyxpQkFBaUIsSUFBSSxDQUFDRSxTQUFTLENBQUNGLGdCQUFnQk47UUFDbEQ7UUFFQSw2Q0FBNkM7UUFDN0NNLGlCQUFpQixJQUFJLENBQUNHLGlCQUFpQixDQUFDSDtRQUV4QyxNQUFNSSxnQkFBZ0IsSUFBSSxDQUFDTCw0QkFBNEIsQ0FBQ0M7UUFDeEQsTUFBTUgsY0FBY0MsbUJBQW1CLElBQ3JDLENBQUVBLG1CQUFtQk0sYUFBWSxJQUFLTixtQkFBb0IsTUFBTTtRQUVsRSxPQUFPO1lBQ0xULE9BQU9XO1lBQ1BKLGVBQWVRO1lBQ2ZQO1FBQ0Y7SUFDRjtJQUVBOztHQUVDLEdBQ0QsT0FBZUksV0FBV1osS0FBYSxFQUFFZ0IsU0FBaUIsRUFBVTtRQUNsRSxJQUFJaEIsTUFBTU0sTUFBTSxJQUFJLEdBQUcsT0FBT047UUFFOUIsTUFBTWlCLFNBQWlCLEVBQUU7UUFDekIsTUFBTUMsT0FBTyxJQUFJQztRQUVqQixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSXBCLE1BQU1NLE1BQU0sRUFBRWMsSUFBSztZQUNyQyxJQUFJRixLQUFLRyxHQUFHLENBQUNELElBQUk7WUFFakIsSUFBSUUsY0FBYzttQkFBSXRCLEtBQUssQ0FBQ29CLEVBQUU7YUFBQztZQUMvQkYsS0FBS0ssR0FBRyxDQUFDSDtZQUVULGdDQUFnQztZQUNoQyxJQUFJSSxhQUFhO1lBQ2pCLE1BQU9BLFdBQVk7Z0JBQ2pCQSxhQUFhO2dCQUViLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJekIsTUFBTU0sTUFBTSxFQUFFbUIsSUFBSztvQkFDckMsSUFBSVAsS0FBS0csR0FBRyxDQUFDSSxJQUFJO29CQUVqQixNQUFNQyxZQUFZMUIsS0FBSyxDQUFDeUIsRUFBRTtvQkFDMUIsTUFBTUUsY0FBYyxJQUFJLENBQUNDLGFBQWEsQ0FBQ04sYUFBYUksV0FBV1Y7b0JBRS9ELElBQUlXLGFBQWE7d0JBQ2ZMLGNBQWNLO3dCQUNkVCxLQUFLSyxHQUFHLENBQUNFO3dCQUNURCxhQUFhO3dCQUNiLE9BQU8saUNBQWlDO29CQUMxQztnQkFDRjtZQUNGO1lBRUEsSUFBSUYsWUFBWWhCLE1BQU0sR0FBRyxHQUFHO2dCQUMxQlcsT0FBT1ksSUFBSSxDQUFDUDtZQUNkO1FBQ0Y7UUFFQSxPQUFPTDtJQUNUO0lBRUE7O0dBRUMsR0FDRCxPQUFlVyxjQUFjRSxLQUFXLEVBQUVDLEtBQVcsRUFBRWYsU0FBaUIsRUFBZTtRQUNyRixJQUFJYyxNQUFNeEIsTUFBTSxLQUFLLEtBQUt5QixNQUFNekIsTUFBTSxLQUFLLEdBQUcsT0FBTztRQUVyRCxNQUFNMEIsVUFBVUYsS0FBSyxDQUFDLEVBQUU7UUFDeEIsTUFBTUcsUUFBUUgsS0FBSyxDQUFDQSxNQUFNeEIsTUFBTSxHQUFHLEVBQUU7UUFDckMsTUFBTTRCLFVBQVVILEtBQUssQ0FBQyxFQUFFO1FBQ3hCLE1BQU1JLFFBQVFKLEtBQUssQ0FBQ0EsTUFBTXpCLE1BQU0sR0FBRyxFQUFFO1FBRXJDLGlDQUFpQztRQUNqQyxNQUFNOEIsY0FBYztZQUNsQjtnQkFBRUMsTUFBTSxJQUFJLENBQUNDLFFBQVEsQ0FBQ0wsT0FBT0M7Z0JBQVVLLE9BQU8sSUFBTTsyQkFBSVQ7MkJBQVVDO3FCQUFNO1lBQUM7WUFDekU7Z0JBQUVNLE1BQU0sSUFBSSxDQUFDQyxRQUFRLENBQUNMLE9BQU9FO2dCQUFRSSxPQUFPLElBQU07MkJBQUlUOzJCQUFVQyxNQUFNUyxLQUFLLEdBQUdDLE9BQU87cUJBQUc7WUFBQztZQUN6RjtnQkFBRUosTUFBTSxJQUFJLENBQUNDLFFBQVEsQ0FBQ04sU0FBU0U7Z0JBQVVLLE9BQU8sSUFBTTsyQkFBSVQsTUFBTVUsS0FBSyxHQUFHQyxPQUFPOzJCQUFPVjtxQkFBTTtZQUFDO1lBQzdGO2dCQUFFTSxNQUFNLElBQUksQ0FBQ0MsUUFBUSxDQUFDTixTQUFTRztnQkFBUUksT0FBTyxJQUFNOzJCQUFJVCxNQUFNVSxLQUFLLEdBQUdDLE9BQU87MkJBQU9WLE1BQU1TLEtBQUssR0FBR0MsT0FBTztxQkFBRztZQUFDO1NBQzlHO1FBRUQsNENBQTRDO1FBQzVDLE1BQU1DLE9BQU9OLFlBQVlPLE1BQU0sQ0FBQyxDQUFDQyxLQUFLQyxPQUNwQ0EsS0FBS1IsSUFBSSxHQUFHTyxJQUFJUCxJQUFJLEdBQUdRLE9BQU9EO1FBR2hDLElBQUlGLEtBQUtMLElBQUksSUFBSXJCLFdBQVc7WUFDMUIsT0FBTzBCLEtBQUtILEtBQUs7UUFDbkI7UUFFQSxPQUFPO0lBQ1Q7SUFFQTs7O0dBR0MsR0FDRCxPQUFlMUIsVUFBVWIsS0FBYSxFQUFFSyxhQUFxQixFQUFVO1FBQ3JFLElBQUlMLE1BQU1NLE1BQU0sR0FBRyxHQUFHLE9BQU9OLE9BQU8sa0NBQWtDO1FBRXRFLElBQUk4QyxlQUFlOUMsTUFBTStDLEdBQUcsQ0FBQyxDQUFDQyxHQUFHQyxRQUFVQTtRQUMzQyxJQUFJQyxlQUFlLElBQUksQ0FBQ0MsMEJBQTBCLENBQUNuRCxPQUFPOEM7UUFDMUQsSUFBSU0sV0FBVztRQUNmLElBQUlDLFlBQVk7UUFFaEIsTUFBT0QsWUFBWUMsWUFBWWhELGNBQWU7WUFDNUMrQyxXQUFXO1lBRVgsSUFBSyxJQUFJaEMsSUFBSSxHQUFHQSxJQUFJMEIsYUFBYXhDLE1BQU0sR0FBRyxHQUFHYyxJQUFLO2dCQUNoRCxJQUFLLElBQUlLLElBQUlMLElBQUksR0FBR0ssSUFBSXFCLGFBQWF4QyxNQUFNLEVBQUVtQixJQUFLO29CQUNoRCxJQUFJQSxJQUFJTCxNQUFNLEdBQUcsVUFBVSxzQkFBc0I7b0JBRWpELGlCQUFpQjtvQkFDakIsTUFBTWtDLFdBQVcsSUFBSSxDQUFDQyxRQUFRLENBQUNULGNBQWMxQixHQUFHSztvQkFDaEQsTUFBTStCLGNBQWMsSUFBSSxDQUFDTCwwQkFBMEIsQ0FBQ25ELE9BQU9zRDtvQkFFM0QsSUFBSUUsY0FBY04sY0FBYzt3QkFDOUJKLGVBQWVRO3dCQUNmSixlQUFlTTt3QkFDZkosV0FBVztvQkFDYjtnQkFDRjtZQUNGO1lBRUFDO1FBQ0Y7UUFFQSw2Q0FBNkM7UUFDN0MsT0FBT1AsYUFBYUMsR0FBRyxDQUFDRSxDQUFBQSxRQUFTakQsS0FBSyxDQUFDaUQsTUFBTTtJQUMvQztJQUVBOztHQUVDLEdBQ0QsT0FBZU0sU0FBU0UsS0FBZSxFQUFFckMsQ0FBUyxFQUFFSyxDQUFTLEVBQVk7UUFDdkUsTUFBTTZCLFdBQVc7ZUFBSUc7U0FBTTtRQUUzQixzQ0FBc0M7UUFDdEMsTUFBT3JDLElBQUlLLEVBQUc7WUFDWixDQUFDNkIsUUFBUSxDQUFDbEMsRUFBRSxFQUFFa0MsUUFBUSxDQUFDN0IsRUFBRSxDQUFDLEdBQUc7Z0JBQUM2QixRQUFRLENBQUM3QixFQUFFO2dCQUFFNkIsUUFBUSxDQUFDbEMsRUFBRTthQUFDO1lBQ3ZEQTtZQUNBSztRQUNGO1FBRUEsT0FBTzZCO0lBQ1Q7SUFFQTs7R0FFQyxHQUNELE9BQWVILDJCQUEyQm5ELEtBQWEsRUFBRXlELEtBQWUsRUFBVTtRQUNoRixJQUFJbEQsZ0JBQWdCO1FBRXBCLElBQUssSUFBSWEsSUFBSSxHQUFHQSxJQUFJcUMsTUFBTW5ELE1BQU0sR0FBRyxHQUFHYyxJQUFLO1lBQ3pDLE1BQU1FLGNBQWN0QixLQUFLLENBQUN5RCxLQUFLLENBQUNyQyxFQUFFLENBQUM7WUFDbkMsTUFBTXNDLFdBQVcxRCxLQUFLLENBQUN5RCxLQUFLLENBQUNyQyxJQUFJLEVBQUUsQ0FBQztZQUVwQyxJQUFJRSxZQUFZaEIsTUFBTSxHQUFHLEtBQUtvRCxTQUFTcEQsTUFBTSxHQUFHLEdBQUc7Z0JBQ2pELE1BQU1xRCxhQUFhckMsV0FBVyxDQUFDQSxZQUFZaEIsTUFBTSxHQUFHLEVBQUU7Z0JBQ3RELE1BQU1zRCxZQUFZRixRQUFRLENBQUMsRUFBRTtnQkFDN0JuRCxpQkFBaUIsSUFBSSxDQUFDK0IsUUFBUSxDQUFDcUIsWUFBWUM7WUFDN0M7UUFDRjtRQUVBLE9BQU9yRDtJQUNUO0lBRUE7O0dBRUMsR0FDRCxPQUFlTyxrQkFBa0JkLEtBQWEsRUFBVTtRQUN0RCxJQUFJQSxNQUFNTSxNQUFNLElBQUksR0FBRyxPQUFPTjtRQUU5QixNQUFNb0QsV0FBVztlQUFJcEQ7U0FBTTtRQUMzQixJQUFJNkQsa0JBQWtCO1FBRXRCLE1BQU9BLGdCQUFpQjtZQUN0QkEsa0JBQWtCO1lBRWxCLDhCQUE4QjtZQUM5QixJQUFLLElBQUl6QyxJQUFJLEdBQUdBLElBQUlnQyxTQUFTOUMsTUFBTSxHQUFHLEdBQUdjLElBQUs7Z0JBQzVDLE1BQU1YLG1CQUFtQixJQUFJLENBQUNxRCxzQkFBc0IsQ0FDbERWLFFBQVEsQ0FBQ2hDLEVBQUUsRUFBRWdDLFFBQVEsQ0FBQ2hDLElBQUksRUFBRSxFQUM1QkEsSUFBSSxJQUFJZ0MsUUFBUSxDQUFDaEMsSUFBSSxFQUFFLEdBQUcsTUFDMUJBLElBQUksSUFBSWdDLFNBQVM5QyxNQUFNLEdBQUc4QyxRQUFRLENBQUNoQyxJQUFJLEVBQUUsR0FBRztnQkFHOUMsZ0JBQWdCO2dCQUNoQixDQUFDZ0MsUUFBUSxDQUFDaEMsRUFBRSxFQUFFZ0MsUUFBUSxDQUFDaEMsSUFBSSxFQUFFLENBQUMsR0FBRztvQkFBQ2dDLFFBQVEsQ0FBQ2hDLElBQUksRUFBRTtvQkFBRWdDLFFBQVEsQ0FBQ2hDLEVBQUU7aUJBQUM7Z0JBRS9ELE1BQU1vQyxjQUFjLElBQUksQ0FBQ00sc0JBQXNCLENBQzdDVixRQUFRLENBQUNoQyxFQUFFLEVBQUVnQyxRQUFRLENBQUNoQyxJQUFJLEVBQUUsRUFDNUJBLElBQUksSUFBSWdDLFFBQVEsQ0FBQ2hDLElBQUksRUFBRSxHQUFHLE1BQzFCQSxJQUFJLElBQUlnQyxTQUFTOUMsTUFBTSxHQUFHOEMsUUFBUSxDQUFDaEMsSUFBSSxFQUFFLEdBQUc7Z0JBRzlDLElBQUlvQyxjQUFjL0Msa0JBQWtCO29CQUNsQ29ELGtCQUFrQjtnQkFDcEIsT0FBTztvQkFDTCw4QkFBOEI7b0JBQzlCLENBQUNULFFBQVEsQ0FBQ2hDLEVBQUUsRUFBRWdDLFFBQVEsQ0FBQ2hDLElBQUksRUFBRSxDQUFDLEdBQUc7d0JBQUNnQyxRQUFRLENBQUNoQyxJQUFJLEVBQUU7d0JBQUVnQyxRQUFRLENBQUNoQyxFQUFFO3FCQUFDO2dCQUNqRTtZQUNGO1FBQ0Y7UUFFQSxPQUFPZ0M7SUFDVDtJQUVBOztHQUVDLEdBQ0QsT0FBZVUsdUJBQ2JoQyxLQUFXLEVBQ1hDLEtBQVcsRUFDWGdDLFFBQXFCLEVBQ3JCTCxRQUFxQixFQUNiO1FBQ1IsSUFBSXBCLFdBQVc7UUFFZixtREFBbUQ7UUFDbkQsSUFBSXlCLFlBQVlBLFNBQVN6RCxNQUFNLEdBQUcsS0FBS3dCLE1BQU14QixNQUFNLEdBQUcsR0FBRztZQUN2RGdDLFlBQVksSUFBSSxDQUFDQSxRQUFRLENBQUN5QixRQUFRLENBQUNBLFNBQVN6RCxNQUFNLEdBQUcsRUFBRSxFQUFFd0IsS0FBSyxDQUFDLEVBQUU7UUFDbkU7UUFFQSwrQkFBK0I7UUFDL0IsSUFBSUEsTUFBTXhCLE1BQU0sR0FBRyxLQUFLeUIsTUFBTXpCLE1BQU0sR0FBRyxHQUFHO1lBQ3hDZ0MsWUFBWSxJQUFJLENBQUNBLFFBQVEsQ0FBQ1IsS0FBSyxDQUFDQSxNQUFNeEIsTUFBTSxHQUFHLEVBQUUsRUFBRXlCLEtBQUssQ0FBQyxFQUFFO1FBQzdEO1FBRUEsK0NBQStDO1FBQy9DLElBQUlBLE1BQU16QixNQUFNLEdBQUcsS0FBS29ELFlBQVlBLFNBQVNwRCxNQUFNLEdBQUcsR0FBRztZQUN2RGdDLFlBQVksSUFBSSxDQUFDQSxRQUFRLENBQUNQLEtBQUssQ0FBQ0EsTUFBTXpCLE1BQU0sR0FBRyxFQUFFLEVBQUVvRCxRQUFRLENBQUMsRUFBRTtRQUNoRTtRQUVBLE9BQU9wQjtJQUNUO0lBRUE7O0dBRUMsR0FDRCxPQUFlNUIsNkJBQTZCVixLQUFhLEVBQVU7UUFDakUsSUFBSU8sZ0JBQWdCO1FBRXBCLElBQUssSUFBSWEsSUFBSSxHQUFHQSxJQUFJcEIsTUFBTU0sTUFBTSxHQUFHLEdBQUdjLElBQUs7WUFDekMsTUFBTUUsY0FBY3RCLEtBQUssQ0FBQ29CLEVBQUU7WUFDNUIsTUFBTXNDLFdBQVcxRCxLQUFLLENBQUNvQixJQUFJLEVBQUU7WUFFN0IsSUFBSUUsWUFBWWhCLE1BQU0sR0FBRyxLQUFLb0QsU0FBU3BELE1BQU0sR0FBRyxHQUFHO2dCQUNqRCxNQUFNcUQsYUFBYXJDLFdBQVcsQ0FBQ0EsWUFBWWhCLE1BQU0sR0FBRyxFQUFFO2dCQUN0RCxNQUFNc0QsWUFBWUYsUUFBUSxDQUFDLEVBQUU7Z0JBQzdCbkQsaUJBQWlCLElBQUksQ0FBQytCLFFBQVEsQ0FBQ3FCLFlBQVlDO1lBQzdDO1FBQ0Y7UUFFQSxPQUFPckQ7SUFDVDtJQUVBOztHQUVDLEdBQ0QsT0FBT3lELHVCQUF1QmhFLEtBQWEsRUFBRWlFLGNBQXNCLEdBQUcsRUFBVTtRQUM5RSxPQUFPakUsTUFBTStDLEdBQUcsQ0FBQ21CLENBQUFBLE9BQVEsSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ0QsTUFBTUQ7SUFDdkQ7SUFFQTs7R0FFQyxHQUNELE9BQWVFLGlCQUFpQkQsSUFBVSxFQUFFRCxXQUFtQixFQUFRO1FBQ3JFLElBQUlDLEtBQUs1RCxNQUFNLElBQUksR0FBRyxPQUFPNEQ7UUFFN0IsMERBQTBEO1FBQzFELE1BQU1FLFlBQVksSUFBSSxDQUFDQyxnQkFBZ0IsQ0FBQ0g7UUFDeEMsTUFBTUksa0JBQWtCTCxjQUFlLEtBQUlHLFlBQVksR0FBRSxHQUFJLHlDQUF5QztRQUV0RyxPQUFPLElBQUksQ0FBQ0csY0FBYyxDQUFDTCxNQUFNSTtJQUNuQztJQUVBOztHQUVDLEdBQ0QsT0FBZUQsaUJBQWlCSCxJQUFhLEVBQVU7UUFDckQsSUFBSUEsS0FBSzVELE1BQU0sR0FBRyxHQUFHLE9BQU87UUFFNUIsSUFBSWtFLGlCQUFpQjtRQUNyQixJQUFJQyxXQUFXO1FBRWYsSUFBSyxJQUFJckQsSUFBSSxHQUFHQSxJQUFJOEMsS0FBSzVELE1BQU0sR0FBRyxHQUFHYyxJQUFLO1lBQ3hDLE1BQU1zRCxLQUFLUixJQUFJLENBQUM5QyxJQUFJLEVBQUU7WUFDdEIsTUFBTXVELEtBQUtULElBQUksQ0FBQzlDLEVBQUU7WUFDbEIsTUFBTXdELEtBQUtWLElBQUksQ0FBQzlDLElBQUksRUFBRTtZQUV0Qix5QkFBeUI7WUFDekIsTUFBTXlELEtBQUs7Z0JBQUVDLEdBQUdILEdBQUdHLENBQUMsR0FBR0osR0FBR0ksQ0FBQztnQkFBRUMsR0FBR0osR0FBR0ksQ0FBQyxHQUFHTCxHQUFHSyxDQUFDO1lBQUM7WUFDNUMsTUFBTUMsS0FBSztnQkFBRUYsR0FBR0YsR0FBR0UsQ0FBQyxHQUFHSCxHQUFHRyxDQUFDO2dCQUFFQyxHQUFHSCxHQUFHRyxDQUFDLEdBQUdKLEdBQUdJLENBQUM7WUFBQztZQUU1QyxNQUFNRSxTQUFTQyxLQUFLQyxLQUFLLENBQUNOLEdBQUdFLENBQUMsRUFBRUYsR0FBR0MsQ0FBQztZQUNwQyxNQUFNTSxTQUFTRixLQUFLQyxLQUFLLENBQUNILEdBQUdELENBQUMsRUFBRUMsR0FBR0YsQ0FBQztZQUVwQyxJQUFJTyxZQUFZSCxLQUFLSSxHQUFHLENBQUNGLFNBQVNIO1lBQ2xDLElBQUlJLFlBQVlILEtBQUtLLEVBQUUsRUFBRUYsWUFBWSxJQUFJSCxLQUFLSyxFQUFFLEdBQUdGO1lBRW5EYixrQkFBa0JhO1lBQ2xCWjtRQUNGO1FBRUEsT0FBT0EsV0FBVyxJQUFJRCxpQkFBaUJDLFdBQVc7SUFDcEQ7SUFFQTs7R0FFQyxHQUNELE9BQWVGLGVBQWVpQixNQUFlLEVBQUVDLE9BQWUsRUFBVztRQUN2RSxJQUFJRCxPQUFPbEYsTUFBTSxJQUFJLEdBQUcsT0FBT2tGO1FBRS9CLElBQUlFLGNBQWM7UUFDbEIsSUFBSUMsV0FBVztRQUNmLE1BQU1DLE1BQU1KLE9BQU9sRixNQUFNLEdBQUc7UUFFNUIsSUFBSyxJQUFJYyxJQUFJLEdBQUdBLElBQUl3RSxLQUFLeEUsSUFBSztZQUM1QixNQUFNa0IsV0FBVyxJQUFJLENBQUN1RCxxQkFBcUIsQ0FBQ0wsTUFBTSxDQUFDcEUsRUFBRSxFQUFFb0UsTUFBTSxDQUFDLEVBQUUsRUFBRUEsTUFBTSxDQUFDSSxJQUFJO1lBQzdFLElBQUl0RCxXQUFXb0QsYUFBYTtnQkFDMUJBLGNBQWNwRDtnQkFDZHFELFdBQVd2RTtZQUNiO1FBQ0Y7UUFFQSxJQUFJc0UsY0FBY0QsU0FBUztZQUN6QixNQUFNSyxPQUFPLElBQUksQ0FBQ3ZCLGNBQWMsQ0FBQ2lCLE9BQU9oRCxLQUFLLENBQUMsR0FBR21ELFdBQVcsSUFBSUY7WUFDaEUsTUFBTU0sUUFBUSxJQUFJLENBQUN4QixjQUFjLENBQUNpQixPQUFPaEQsS0FBSyxDQUFDbUQsV0FBV0Y7WUFFMUQsT0FBTzttQkFBSUssS0FBS3RELEtBQUssQ0FBQyxHQUFHLENBQUM7bUJBQU91RDthQUFNO1FBQ3pDLE9BQU87WUFDTCxPQUFPO2dCQUFDUCxNQUFNLENBQUMsRUFBRTtnQkFBRUEsTUFBTSxDQUFDSSxJQUFJO2FBQUM7UUFDakM7SUFDRjtJQUVBOztHQUVDLEdBQ0QsT0FBZUMsc0JBQXNCRyxLQUFZLEVBQUVDLFNBQWdCLEVBQUVDLE9BQWMsRUFBVTtRQUMzRixNQUFNQyxJQUFJRCxRQUFRbkIsQ0FBQyxHQUFHa0IsVUFBVWxCLENBQUM7UUFDakMsTUFBTXFCLElBQUlILFVBQVVuQixDQUFDLEdBQUdvQixRQUFRcEIsQ0FBQztRQUNqQyxNQUFNdUIsSUFBSUgsUUFBUXBCLENBQUMsR0FBR21CLFVBQVVsQixDQUFDLEdBQUdrQixVQUFVbkIsQ0FBQyxHQUFHb0IsUUFBUW5CLENBQUM7UUFFM0QsT0FBT0csS0FBS0ksR0FBRyxDQUFDYSxJQUFJSCxNQUFNbEIsQ0FBQyxHQUFHc0IsSUFBSUosTUFBTWpCLENBQUMsR0FBR3NCLEtBQUtuQixLQUFLb0IsSUFBSSxDQUFDSCxJQUFJQSxJQUFJQyxJQUFJQTtJQUN6RTtJQUVBOztHQUVDLEdBQ0QsT0FBZTlELFNBQVNvQyxFQUFTLEVBQUVDLEVBQVMsRUFBVTtRQUNwRCxNQUFNNEIsS0FBSzVCLEdBQUdHLENBQUMsR0FBR0osR0FBR0ksQ0FBQztRQUN0QixNQUFNMEIsS0FBSzdCLEdBQUdJLENBQUMsR0FBR0wsR0FBR0ssQ0FBQztRQUN0QixPQUFPRyxLQUFLb0IsSUFBSSxDQUFDQyxLQUFLQSxLQUFLQyxLQUFLQTtJQUNsQztJQUVBOztHQUVDLEdBQ0QsT0FBT0Msb0JBQW9CQyxNQUEwQixFQUFVO1FBQzdELE1BQU0sRUFBRW5HLGFBQWEsRUFBRUMsV0FBVyxFQUFFLEdBQUdrRztRQUV2QyxJQUFJQyxXQUFXLENBQUMsNkJBQTZCLENBQUM7UUFDOUNBLFlBQVksQ0FBQyx5QkFBeUIsRUFBRXBHLGNBQWNxRyxPQUFPLENBQUMsR0FBRyxRQUFRLENBQUM7UUFDMUVELFlBQVksQ0FBQyxlQUFlLEVBQUVuRyxZQUFZb0csT0FBTyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBRXpELElBQUlwRyxjQUFjLElBQUk7WUFDcEJtRyxZQUFZLENBQUMsNERBQTRELENBQUM7UUFDNUUsT0FBTyxJQUFJbkcsY0FBYyxJQUFJO1lBQzNCbUcsWUFBWSxDQUFDLDZCQUE2QixDQUFDO1FBQzdDLE9BQU8sSUFBSW5HLGNBQWMsR0FBRztZQUMxQm1HLFlBQVksQ0FBQywyQkFBMkIsQ0FBQztRQUMzQyxPQUFPO1lBQ0xBLFlBQVksQ0FBQyx5Q0FBeUMsQ0FBQztRQUN6RDtRQUVBLE9BQU9BO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9saWIvcGF0aC1vcHRpbWl6YXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQWR2YW5jZWQgUGF0aCBPcHRpbWl6YXRpb25cbi8vIFByb2Zlc3Npb25hbCBUU1Agc29sdmluZyBhbmQgcGF0aCBtZXJnaW5nIGZvciBtaW5pbWFsIHRyYXZlbCB0aW1lXG5cbmV4cG9ydCBpbnRlcmZhY2UgUG9pbnQge1xuICB4OiBudW1iZXI7XG4gIHk6IG51bWJlcjtcbn1cblxuZXhwb3J0IHR5cGUgUGF0aCA9IFBvaW50W107XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3B0aW1pemF0aW9uUmVzdWx0IHtcbiAgcGF0aHM6IFBhdGhbXTtcbiAgdG90YWxEaXN0YW5jZTogbnVtYmVyO1xuICBpbXByb3ZlbWVudDogbnVtYmVyOyAvLyBQZXJjZW50YWdlIGltcHJvdmVtZW50IG92ZXIgb3JpZ2luYWxcbn1cblxuZXhwb3J0IGNsYXNzIFBhdGhPcHRpbWl6ZXIge1xuICBcbiAgLyoqXG4gICAqIENvbXByZWhlbnNpdmUgcGF0aCBvcHRpbWl6YXRpb24gdXNpbmcgbXVsdGlwbGUgc3RyYXRlZ2llc1xuICAgKi9cbiAgc3RhdGljIG9wdGltaXplUGF0aHMocGF0aHM6IFBhdGhbXSwgb3B0aW9uczoge1xuICAgIGVuYWJsZVBhdGhNZXJnaW5nPzogYm9vbGVhbjtcbiAgICBlbmFibGUyT3B0PzogYm9vbGVhbjtcbiAgICBtZXJnZVRocmVzaG9sZD86IG51bWJlcjtcbiAgICBtYXhJdGVyYXRpb25zPzogbnVtYmVyO1xuICB9ID0ge30pOiBPcHRpbWl6YXRpb25SZXN1bHQge1xuICAgIFxuICAgIGNvbnN0IHtcbiAgICAgIGVuYWJsZVBhdGhNZXJnaW5nID0gdHJ1ZSxcbiAgICAgIGVuYWJsZTJPcHQgPSB0cnVlLFxuICAgICAgbWVyZ2VUaHJlc2hvbGQgPSA1LjAsXG4gICAgICBtYXhJdGVyYXRpb25zID0gMTAwXG4gICAgfSA9IG9wdGlvbnM7XG4gICAgXG4gICAgaWYgKHBhdGhzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHsgcGF0aHM6IFtdLCB0b3RhbERpc3RhbmNlOiAwLCBpbXByb3ZlbWVudDogMCB9O1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBvcmlnaW5hbERpc3RhbmNlID0gdGhpcy5jYWxjdWxhdGVUb3RhbFRyYXZlbERpc3RhbmNlKHBhdGhzKTtcbiAgICBsZXQgb3B0aW1pemVkUGF0aHMgPSBbLi4ucGF0aHNdO1xuICAgIFxuICAgIC8vIFN0ZXAgMTogTWVyZ2UgbmVhcmJ5IHBhdGhzIHRvIGVsaW1pbmF0ZSBwZW4tdXAvcGVuLWRvd24gY3ljbGVzXG4gICAgaWYgKGVuYWJsZVBhdGhNZXJnaW5nKSB7XG4gICAgICBvcHRpbWl6ZWRQYXRocyA9IHRoaXMubWVyZ2VQYXRocyhvcHRpbWl6ZWRQYXRocywgbWVyZ2VUaHJlc2hvbGQpO1xuICAgIH1cbiAgICBcbiAgICAvLyBTdGVwIDI6IEFwcGx5IDItb3B0IG9wdGltaXphdGlvbiBmb3IgZ2xvYmFsIHBhdGggb3JkZXJpbmdcbiAgICBpZiAoZW5hYmxlMk9wdCAmJiBvcHRpbWl6ZWRQYXRocy5sZW5ndGggPiAyKSB7XG4gICAgICBvcHRpbWl6ZWRQYXRocyA9IHRoaXMuYXBwbHkyT3B0KG9wdGltaXplZFBhdGhzLCBtYXhJdGVyYXRpb25zKTtcbiAgICB9XG4gICAgXG4gICAgLy8gU3RlcCAzOiBGaW5lLXR1bmUgd2l0aCBncmVlZHkgaW1wcm92ZW1lbnRzXG4gICAgb3B0aW1pemVkUGF0aHMgPSB0aGlzLmdyZWVkeUltcHJvdmVtZW50KG9wdGltaXplZFBhdGhzKTtcbiAgICBcbiAgICBjb25zdCBmaW5hbERpc3RhbmNlID0gdGhpcy5jYWxjdWxhdGVUb3RhbFRyYXZlbERpc3RhbmNlKG9wdGltaXplZFBhdGhzKTtcbiAgICBjb25zdCBpbXByb3ZlbWVudCA9IG9yaWdpbmFsRGlzdGFuY2UgPiAwID8gXG4gICAgICAoKG9yaWdpbmFsRGlzdGFuY2UgLSBmaW5hbERpc3RhbmNlKSAvIG9yaWdpbmFsRGlzdGFuY2UpICogMTAwIDogMDtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgcGF0aHM6IG9wdGltaXplZFBhdGhzLFxuICAgICAgdG90YWxEaXN0YW5jZTogZmluYWxEaXN0YW5jZSxcbiAgICAgIGltcHJvdmVtZW50XG4gICAgfTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIE1lcmdlIHBhdGhzIHRoYXQgYXJlIGNsb3NlIHRvZ2V0aGVyIHRvIGVsaW1pbmF0ZSB1bm5lY2Vzc2FyeSBwZW4gbW92ZW1lbnRzXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBtZXJnZVBhdGhzKHBhdGhzOiBQYXRoW10sIHRocmVzaG9sZDogbnVtYmVyKTogUGF0aFtdIHtcbiAgICBpZiAocGF0aHMubGVuZ3RoIDw9IDEpIHJldHVybiBwYXRocztcbiAgICBcbiAgICBjb25zdCBtZXJnZWQ6IFBhdGhbXSA9IFtdO1xuICAgIGNvbnN0IHVzZWQgPSBuZXcgU2V0PG51bWJlcj4oKTtcbiAgICBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhdGhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodXNlZC5oYXMoaSkpIGNvbnRpbnVlO1xuICAgICAgXG4gICAgICBsZXQgY3VycmVudFBhdGggPSBbLi4ucGF0aHNbaV1dO1xuICAgICAgdXNlZC5hZGQoaSk7XG4gICAgICBcbiAgICAgIC8vIFRyeSB0byBtZXJnZSB3aXRoIG90aGVyIHBhdGhzXG4gICAgICBsZXQgZm91bmRNZXJnZSA9IHRydWU7XG4gICAgICB3aGlsZSAoZm91bmRNZXJnZSkge1xuICAgICAgICBmb3VuZE1lcmdlID0gZmFsc2U7XG4gICAgICAgIFxuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHBhdGhzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgaWYgKHVzZWQuaGFzKGopKSBjb250aW51ZTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBvdGhlclBhdGggPSBwYXRoc1tqXTtcbiAgICAgICAgICBjb25zdCBtZXJnZVJlc3VsdCA9IHRoaXMudHJ5TWVyZ2VQYXRocyhjdXJyZW50UGF0aCwgb3RoZXJQYXRoLCB0aHJlc2hvbGQpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChtZXJnZVJlc3VsdCkge1xuICAgICAgICAgICAgY3VycmVudFBhdGggPSBtZXJnZVJlc3VsdDtcbiAgICAgICAgICAgIHVzZWQuYWRkKGopO1xuICAgICAgICAgICAgZm91bmRNZXJnZSA9IHRydWU7XG4gICAgICAgICAgICBicmVhazsgLy8gU3RhcnQgb3ZlciB0byBmaW5kIG1vcmUgbWVyZ2VzXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChjdXJyZW50UGF0aC5sZW5ndGggPiAwKSB7XG4gICAgICAgIG1lcmdlZC5wdXNoKGN1cnJlbnRQYXRoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIG1lcmdlZDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFRyeSB0byBtZXJnZSB0d28gcGF0aHMgaWYgdGhleSBhcmUgY2xvc2UgZW5vdWdoXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyB0cnlNZXJnZVBhdGhzKHBhdGgxOiBQYXRoLCBwYXRoMjogUGF0aCwgdGhyZXNob2xkOiBudW1iZXIpOiBQYXRoIHwgbnVsbCB7XG4gICAgaWYgKHBhdGgxLmxlbmd0aCA9PT0gMCB8fCBwYXRoMi5sZW5ndGggPT09IDApIHJldHVybiBudWxsO1xuICAgIFxuICAgIGNvbnN0IHAxU3RhcnQgPSBwYXRoMVswXTtcbiAgICBjb25zdCBwMUVuZCA9IHBhdGgxW3BhdGgxLmxlbmd0aCAtIDFdO1xuICAgIGNvbnN0IHAyU3RhcnQgPSBwYXRoMlswXTtcbiAgICBjb25zdCBwMkVuZCA9IHBhdGgyW3BhdGgyLmxlbmd0aCAtIDFdO1xuICAgIFxuICAgIC8vIENoZWNrIGFsbCBwb3NzaWJsZSBjb25uZWN0aW9uc1xuICAgIGNvbnN0IGNvbm5lY3Rpb25zID0gW1xuICAgICAgeyBkaXN0OiB0aGlzLmRpc3RhbmNlKHAxRW5kLCBwMlN0YXJ0KSwgbWVyZ2U6ICgpID0+IFsuLi5wYXRoMSwgLi4ucGF0aDJdIH0sXG4gICAgICB7IGRpc3Q6IHRoaXMuZGlzdGFuY2UocDFFbmQsIHAyRW5kKSwgbWVyZ2U6ICgpID0+IFsuLi5wYXRoMSwgLi4ucGF0aDIuc2xpY2UoKS5yZXZlcnNlKCldIH0sXG4gICAgICB7IGRpc3Q6IHRoaXMuZGlzdGFuY2UocDFTdGFydCwgcDJTdGFydCksIG1lcmdlOiAoKSA9PiBbLi4ucGF0aDEuc2xpY2UoKS5yZXZlcnNlKCksIC4uLnBhdGgyXSB9LFxuICAgICAgeyBkaXN0OiB0aGlzLmRpc3RhbmNlKHAxU3RhcnQsIHAyRW5kKSwgbWVyZ2U6ICgpID0+IFsuLi5wYXRoMS5zbGljZSgpLnJldmVyc2UoKSwgLi4ucGF0aDIuc2xpY2UoKS5yZXZlcnNlKCldIH1cbiAgICBdO1xuICAgIFxuICAgIC8vIEZpbmQgdGhlIGJlc3QgY29ubmVjdGlvbiB3aXRoaW4gdGhyZXNob2xkXG4gICAgY29uc3QgYmVzdCA9IGNvbm5lY3Rpb25zLnJlZHVjZSgobWluLCBjb25uKSA9PiBcbiAgICAgIGNvbm4uZGlzdCA8IG1pbi5kaXN0ID8gY29ubiA6IG1pblxuICAgICk7XG4gICAgXG4gICAgaWYgKGJlc3QuZGlzdCA8PSB0aHJlc2hvbGQpIHtcbiAgICAgIHJldHVybiBiZXN0Lm1lcmdlKCk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBudWxsO1xuICB9XG4gIFxuICAvKipcbiAgICogQXBwbHkgMi1vcHQgb3B0aW1pemF0aW9uIHRvIGltcHJvdmUgcGF0aCBvcmRlcmluZ1xuICAgKiBUaGlzIGlzIGEgY2xhc3NpYyBUU1Agb3B0aW1pemF0aW9uIHRlY2huaXF1ZVxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgYXBwbHkyT3B0KHBhdGhzOiBQYXRoW10sIG1heEl0ZXJhdGlvbnM6IG51bWJlcik6IFBhdGhbXSB7XG4gICAgaWYgKHBhdGhzLmxlbmd0aCA8IDQpIHJldHVybiBwYXRoczsgLy8gTmVlZCBhdCBsZWFzdCA0IHBhdGhzIGZvciAyLW9wdFxuICAgIFxuICAgIGxldCBjdXJyZW50T3JkZXIgPSBwYXRocy5tYXAoKF8sIGluZGV4KSA9PiBpbmRleCk7XG4gICAgbGV0IGJlc3REaXN0YW5jZSA9IHRoaXMuY2FsY3VsYXRlUGF0aE9yZGVyRGlzdGFuY2UocGF0aHMsIGN1cnJlbnRPcmRlcik7XG4gICAgbGV0IGltcHJvdmVkID0gdHJ1ZTtcbiAgICBsZXQgaXRlcmF0aW9uID0gMDtcbiAgICBcbiAgICB3aGlsZSAoaW1wcm92ZWQgJiYgaXRlcmF0aW9uIDwgbWF4SXRlcmF0aW9ucykge1xuICAgICAgaW1wcm92ZWQgPSBmYWxzZTtcbiAgICAgIFxuICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCBjdXJyZW50T3JkZXIubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgIGZvciAobGV0IGogPSBpICsgMTsgaiA8IGN1cnJlbnRPcmRlci5sZW5ndGg7IGorKykge1xuICAgICAgICAgIGlmIChqIC0gaSA9PT0gMSkgY29udGludWU7IC8vIFNraXAgYWRqYWNlbnQgcGF0aHNcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBUcnkgMi1vcHQgc3dhcFxuICAgICAgICAgIGNvbnN0IG5ld09yZGVyID0gdGhpcy5zd2FwMk9wdChjdXJyZW50T3JkZXIsIGksIGopO1xuICAgICAgICAgIGNvbnN0IG5ld0Rpc3RhbmNlID0gdGhpcy5jYWxjdWxhdGVQYXRoT3JkZXJEaXN0YW5jZShwYXRocywgbmV3T3JkZXIpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChuZXdEaXN0YW5jZSA8IGJlc3REaXN0YW5jZSkge1xuICAgICAgICAgICAgY3VycmVudE9yZGVyID0gbmV3T3JkZXI7XG4gICAgICAgICAgICBiZXN0RGlzdGFuY2UgPSBuZXdEaXN0YW5jZTtcbiAgICAgICAgICAgIGltcHJvdmVkID0gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgaXRlcmF0aW9uKys7XG4gICAgfVxuICAgIFxuICAgIC8vIFJlb3JkZXIgcGF0aHMgYWNjb3JkaW5nIHRvIG9wdGltaXplZCBvcmRlclxuICAgIHJldHVybiBjdXJyZW50T3JkZXIubWFwKGluZGV4ID0+IHBhdGhzW2luZGV4XSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBQZXJmb3JtIDItb3B0IHN3YXAgb24gcGF0aCBvcmRlclxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgc3dhcDJPcHQob3JkZXI6IG51bWJlcltdLCBpOiBudW1iZXIsIGo6IG51bWJlcik6IG51bWJlcltdIHtcbiAgICBjb25zdCBuZXdPcmRlciA9IFsuLi5vcmRlcl07XG4gICAgXG4gICAgLy8gUmV2ZXJzZSB0aGUgc2VnbWVudCBiZXR3ZWVuIGkgYW5kIGpcbiAgICB3aGlsZSAoaSA8IGopIHtcbiAgICAgIFtuZXdPcmRlcltpXSwgbmV3T3JkZXJbal1dID0gW25ld09yZGVyW2pdLCBuZXdPcmRlcltpXV07XG4gICAgICBpKys7XG4gICAgICBqLS07XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBuZXdPcmRlcjtcbiAgfVxuICBcbiAgLyoqXG4gICAqIENhbGN1bGF0ZSB0b3RhbCBkaXN0YW5jZSBmb3IgYSBzcGVjaWZpYyBwYXRoIG9yZGVyaW5nXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBjYWxjdWxhdGVQYXRoT3JkZXJEaXN0YW5jZShwYXRoczogUGF0aFtdLCBvcmRlcjogbnVtYmVyW10pOiBudW1iZXIge1xuICAgIGxldCB0b3RhbERpc3RhbmNlID0gMDtcbiAgICBcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG9yZGVyLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgY29uc3QgY3VycmVudFBhdGggPSBwYXRoc1tvcmRlcltpXV07XG4gICAgICBjb25zdCBuZXh0UGF0aCA9IHBhdGhzW29yZGVyW2kgKyAxXV07XG4gICAgICBcbiAgICAgIGlmIChjdXJyZW50UGF0aC5sZW5ndGggPiAwICYmIG5leHRQYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgY3VycmVudEVuZCA9IGN1cnJlbnRQYXRoW2N1cnJlbnRQYXRoLmxlbmd0aCAtIDFdO1xuICAgICAgICBjb25zdCBuZXh0U3RhcnQgPSBuZXh0UGF0aFswXTtcbiAgICAgICAgdG90YWxEaXN0YW5jZSArPSB0aGlzLmRpc3RhbmNlKGN1cnJlbnRFbmQsIG5leHRTdGFydCk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0b3RhbERpc3RhbmNlO1xuICB9XG4gIFxuICAvKipcbiAgICogQXBwbHkgZ3JlZWR5IGltcHJvdmVtZW50cyB0byBmaW5lLXR1bmUgdGhlIHNvbHV0aW9uXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBncmVlZHlJbXByb3ZlbWVudChwYXRoczogUGF0aFtdKTogUGF0aFtdIHtcbiAgICBpZiAocGF0aHMubGVuZ3RoIDw9IDIpIHJldHVybiBwYXRocztcbiAgICBcbiAgICBjb25zdCBpbXByb3ZlZCA9IFsuLi5wYXRoc107XG4gICAgbGV0IG1hZGVJbXByb3ZlbWVudCA9IHRydWU7XG4gICAgXG4gICAgd2hpbGUgKG1hZGVJbXByb3ZlbWVudCkge1xuICAgICAgbWFkZUltcHJvdmVtZW50ID0gZmFsc2U7XG4gICAgICBcbiAgICAgIC8vIFRyeSBzd2FwcGluZyBhZGphY2VudCBwYXRoc1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbXByb3ZlZC5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgY29uc3Qgb3JpZ2luYWxEaXN0YW5jZSA9IHRoaXMuY2FsY3VsYXRlVHJhdmVsQmV0d2VlbihcbiAgICAgICAgICBpbXByb3ZlZFtpXSwgaW1wcm92ZWRbaSArIDFdLFxuICAgICAgICAgIGkgPiAwID8gaW1wcm92ZWRbaSAtIDFdIDogbnVsbCxcbiAgICAgICAgICBpICsgMiA8IGltcHJvdmVkLmxlbmd0aCA/IGltcHJvdmVkW2kgKyAyXSA6IG51bGxcbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFN3YXAgYW5kIHRlc3RcbiAgICAgICAgW2ltcHJvdmVkW2ldLCBpbXByb3ZlZFtpICsgMV1dID0gW2ltcHJvdmVkW2kgKyAxXSwgaW1wcm92ZWRbaV1dO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgbmV3RGlzdGFuY2UgPSB0aGlzLmNhbGN1bGF0ZVRyYXZlbEJldHdlZW4oXG4gICAgICAgICAgaW1wcm92ZWRbaV0sIGltcHJvdmVkW2kgKyAxXSxcbiAgICAgICAgICBpID4gMCA/IGltcHJvdmVkW2kgLSAxXSA6IG51bGwsXG4gICAgICAgICAgaSArIDIgPCBpbXByb3ZlZC5sZW5ndGggPyBpbXByb3ZlZFtpICsgMl0gOiBudWxsXG4gICAgICAgICk7XG4gICAgICAgIFxuICAgICAgICBpZiAobmV3RGlzdGFuY2UgPCBvcmlnaW5hbERpc3RhbmNlKSB7XG4gICAgICAgICAgbWFkZUltcHJvdmVtZW50ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBTd2FwIGJhY2sgaWYgbm8gaW1wcm92ZW1lbnRcbiAgICAgICAgICBbaW1wcm92ZWRbaV0sIGltcHJvdmVkW2kgKyAxXV0gPSBbaW1wcm92ZWRbaSArIDFdLCBpbXByb3ZlZFtpXV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGltcHJvdmVkO1xuICB9XG4gIFxuICAvKipcbiAgICogQ2FsY3VsYXRlIHRyYXZlbCBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwYXRocyBjb25zaWRlcmluZyBjb250ZXh0XG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBjYWxjdWxhdGVUcmF2ZWxCZXR3ZWVuKFxuICAgIHBhdGgxOiBQYXRoLFxuICAgIHBhdGgyOiBQYXRoLFxuICAgIHByZXZQYXRoOiBQYXRoIHwgbnVsbCxcbiAgICBuZXh0UGF0aDogUGF0aCB8IG51bGxcbiAgKTogbnVtYmVyIHtcbiAgICBsZXQgZGlzdGFuY2UgPSAwO1xuICAgIFxuICAgIC8vIERpc3RhbmNlIGZyb20gcHJldmlvdXMgcGF0aCB0byBwYXRoMSAoaWYgZXhpc3RzKVxuICAgIGlmIChwcmV2UGF0aCAmJiBwcmV2UGF0aC5sZW5ndGggPiAwICYmIHBhdGgxLmxlbmd0aCA+IDApIHtcbiAgICAgIGRpc3RhbmNlICs9IHRoaXMuZGlzdGFuY2UocHJldlBhdGhbcHJldlBhdGgubGVuZ3RoIC0gMV0sIHBhdGgxWzBdKTtcbiAgICB9XG4gICAgXG4gICAgLy8gRGlzdGFuY2UgZnJvbSBwYXRoMSB0byBwYXRoMlxuICAgIGlmIChwYXRoMS5sZW5ndGggPiAwICYmIHBhdGgyLmxlbmd0aCA+IDApIHtcbiAgICAgIGRpc3RhbmNlICs9IHRoaXMuZGlzdGFuY2UocGF0aDFbcGF0aDEubGVuZ3RoIC0gMV0sIHBhdGgyWzBdKTtcbiAgICB9XG4gICAgXG4gICAgLy8gRGlzdGFuY2UgZnJvbSBwYXRoMiB0byBuZXh0IHBhdGggKGlmIGV4aXN0cylcbiAgICBpZiAocGF0aDIubGVuZ3RoID4gMCAmJiBuZXh0UGF0aCAmJiBuZXh0UGF0aC5sZW5ndGggPiAwKSB7XG4gICAgICBkaXN0YW5jZSArPSB0aGlzLmRpc3RhbmNlKHBhdGgyW3BhdGgyLmxlbmd0aCAtIDFdLCBuZXh0UGF0aFswXSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBkaXN0YW5jZTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIENhbGN1bGF0ZSB0b3RhbCB0cmF2ZWwgZGlzdGFuY2UgZm9yIGFsbCBwYXRoc1xuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgY2FsY3VsYXRlVG90YWxUcmF2ZWxEaXN0YW5jZShwYXRoczogUGF0aFtdKTogbnVtYmVyIHtcbiAgICBsZXQgdG90YWxEaXN0YW5jZSA9IDA7XG4gICAgXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRocy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgIGNvbnN0IGN1cnJlbnRQYXRoID0gcGF0aHNbaV07XG4gICAgICBjb25zdCBuZXh0UGF0aCA9IHBhdGhzW2kgKyAxXTtcbiAgICAgIFxuICAgICAgaWYgKGN1cnJlbnRQYXRoLmxlbmd0aCA+IDAgJiYgbmV4dFBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBjdXJyZW50RW5kID0gY3VycmVudFBhdGhbY3VycmVudFBhdGgubGVuZ3RoIC0gMV07XG4gICAgICAgIGNvbnN0IG5leHRTdGFydCA9IG5leHRQYXRoWzBdO1xuICAgICAgICB0b3RhbERpc3RhbmNlICs9IHRoaXMuZGlzdGFuY2UoY3VycmVudEVuZCwgbmV4dFN0YXJ0KTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHRvdGFsRGlzdGFuY2U7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBZHZhbmNlZCBwYXRoIHNpbXBsaWZpY2F0aW9uIHVzaW5nIFJhbWVyLURvdWdsYXMtUGV1Y2tlciB3aXRoIGFkYXB0aXZlIHRvbGVyYW5jZVxuICAgKi9cbiAgc3RhdGljIGFkdmFuY2VkU2ltcGxpZmljYXRpb24ocGF0aHM6IFBhdGhbXSwgYmFzZUVwc2lsb246IG51bWJlciA9IDEuMCk6IFBhdGhbXSB7XG4gICAgcmV0dXJuIHBhdGhzLm1hcChwYXRoID0+IHRoaXMuYWRhcHRpdmVTaW1wbGlmeShwYXRoLCBiYXNlRXBzaWxvbikpO1xuICB9XG4gIFxuICAvKipcbiAgICogQWRhcHRpdmUgc2ltcGxpZmljYXRpb24gdGhhdCB2YXJpZXMgdG9sZXJhbmNlIGJhc2VkIG9uIHBhdGggY2hhcmFjdGVyaXN0aWNzXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBhZGFwdGl2ZVNpbXBsaWZ5KHBhdGg6IFBhdGgsIGJhc2VFcHNpbG9uOiBudW1iZXIpOiBQYXRoIHtcbiAgICBpZiAocGF0aC5sZW5ndGggPD0gMykgcmV0dXJuIHBhdGg7XG4gICAgXG4gICAgLy8gQW5hbHl6ZSBwYXRoIGN1cnZhdHVyZSB0byBkZXRlcm1pbmUgYXBwcm9wcmlhdGUgZXBzaWxvblxuICAgIGNvbnN0IGN1cnZhdHVyZSA9IHRoaXMuYW5hbHl6ZUN1cnZhdHVyZShwYXRoKTtcbiAgICBjb25zdCBhZGFwdGl2ZUVwc2lsb24gPSBiYXNlRXBzaWxvbiAqICgxICsgY3VydmF0dXJlICogMC41KTsgLy8gSGlnaGVyIHRvbGVyYW5jZSBmb3IgbW9yZSBjdXJ2ZWQgcGF0aHNcbiAgICBcbiAgICByZXR1cm4gdGhpcy5kb3VnbGFzUGV1Y2tlcihwYXRoLCBhZGFwdGl2ZUVwc2lsb24pO1xuICB9XG4gIFxuICAvKipcbiAgICogQW5hbHl6ZSB0aGUgb3ZlcmFsbCBjdXJ2YXR1cmUgb2YgYSBwYXRoXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBhbmFseXplQ3VydmF0dXJlKHBhdGg6IFBvaW50W10pOiBudW1iZXIge1xuICAgIGlmIChwYXRoLmxlbmd0aCA8IDMpIHJldHVybiAwO1xuICAgIFxuICAgIGxldCB0b3RhbEN1cnZhdHVyZSA9IDA7XG4gICAgbGV0IHNlZ21lbnRzID0gMDtcbiAgICBcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IHBhdGgubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBjb25zdCBwMSA9IHBhdGhbaSAtIDFdO1xuICAgICAgY29uc3QgcDIgPSBwYXRoW2ldO1xuICAgICAgY29uc3QgcDMgPSBwYXRoW2kgKyAxXTtcbiAgICAgIFxuICAgICAgLy8gQ2FsY3VsYXRlIGFuZ2xlIGNoYW5nZVxuICAgICAgY29uc3QgdjEgPSB7IHg6IHAyLnggLSBwMS54LCB5OiBwMi55IC0gcDEueSB9O1xuICAgICAgY29uc3QgdjIgPSB7IHg6IHAzLnggLSBwMi54LCB5OiBwMy55IC0gcDIueSB9O1xuICAgICAgXG4gICAgICBjb25zdCBhbmdsZTEgPSBNYXRoLmF0YW4yKHYxLnksIHYxLngpO1xuICAgICAgY29uc3QgYW5nbGUyID0gTWF0aC5hdGFuMih2Mi55LCB2Mi54KTtcbiAgICAgIFxuICAgICAgbGV0IGFuZ2xlRGlmZiA9IE1hdGguYWJzKGFuZ2xlMiAtIGFuZ2xlMSk7XG4gICAgICBpZiAoYW5nbGVEaWZmID4gTWF0aC5QSSkgYW5nbGVEaWZmID0gMiAqIE1hdGguUEkgLSBhbmdsZURpZmY7XG4gICAgICBcbiAgICAgIHRvdGFsQ3VydmF0dXJlICs9IGFuZ2xlRGlmZjtcbiAgICAgIHNlZ21lbnRzKys7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBzZWdtZW50cyA+IDAgPyB0b3RhbEN1cnZhdHVyZSAvIHNlZ21lbnRzIDogMDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIERvdWdsYXMtUGV1Y2tlciBsaW5lIHNpbXBsaWZpY2F0aW9uIGFsZ29yaXRobVxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgZG91Z2xhc1BldWNrZXIocG9pbnRzOiBQb2ludFtdLCBlcHNpbG9uOiBudW1iZXIpOiBQb2ludFtdIHtcbiAgICBpZiAocG9pbnRzLmxlbmd0aCA8PSAyKSByZXR1cm4gcG9pbnRzO1xuXG4gICAgbGV0IG1heERpc3RhbmNlID0gMDtcbiAgICBsZXQgbWF4SW5kZXggPSAwO1xuICAgIGNvbnN0IGVuZCA9IHBvaW50cy5sZW5ndGggLSAxO1xuXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBlbmQ7IGkrKykge1xuICAgICAgY29uc3QgZGlzdGFuY2UgPSB0aGlzLnBlcnBlbmRpY3VsYXJEaXN0YW5jZShwb2ludHNbaV0sIHBvaW50c1swXSwgcG9pbnRzW2VuZF0pO1xuICAgICAgaWYgKGRpc3RhbmNlID4gbWF4RGlzdGFuY2UpIHtcbiAgICAgICAgbWF4RGlzdGFuY2UgPSBkaXN0YW5jZTtcbiAgICAgICAgbWF4SW5kZXggPSBpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChtYXhEaXN0YW5jZSA+IGVwc2lsb24pIHtcbiAgICAgIGNvbnN0IGxlZnQgPSB0aGlzLmRvdWdsYXNQZXVja2VyKHBvaW50cy5zbGljZSgwLCBtYXhJbmRleCArIDEpLCBlcHNpbG9uKTtcbiAgICAgIGNvbnN0IHJpZ2h0ID0gdGhpcy5kb3VnbGFzUGV1Y2tlcihwb2ludHMuc2xpY2UobWF4SW5kZXgpLCBlcHNpbG9uKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIFsuLi5sZWZ0LnNsaWNlKDAsIC0xKSwgLi4ucmlnaHRdO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gW3BvaW50c1swXSwgcG9pbnRzW2VuZF1dO1xuICAgIH1cbiAgfVxuICBcbiAgLyoqXG4gICAqIENhbGN1bGF0ZSBwZXJwZW5kaWN1bGFyIGRpc3RhbmNlIGZyb20gcG9pbnQgdG8gbGluZVxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgcGVycGVuZGljdWxhckRpc3RhbmNlKHBvaW50OiBQb2ludCwgbGluZVN0YXJ0OiBQb2ludCwgbGluZUVuZDogUG9pbnQpOiBudW1iZXIge1xuICAgIGNvbnN0IEEgPSBsaW5lRW5kLnkgLSBsaW5lU3RhcnQueTtcbiAgICBjb25zdCBCID0gbGluZVN0YXJ0LnggLSBsaW5lRW5kLng7XG4gICAgY29uc3QgQyA9IGxpbmVFbmQueCAqIGxpbmVTdGFydC55IC0gbGluZVN0YXJ0LnggKiBsaW5lRW5kLnk7XG4gICAgXG4gICAgcmV0dXJuIE1hdGguYWJzKEEgKiBwb2ludC54ICsgQiAqIHBvaW50LnkgKyBDKSAvIE1hdGguc3FydChBICogQSArIEIgKiBCKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIENhbGN1bGF0ZSBkaXN0YW5jZSBiZXR3ZWVuIHR3byBwb2ludHNcbiAgICovXG4gIHByaXZhdGUgc3RhdGljIGRpc3RhbmNlKHAxOiBQb2ludCwgcDI6IFBvaW50KTogbnVtYmVyIHtcbiAgICBjb25zdCBkeCA9IHAyLnggLSBwMS54O1xuICAgIGNvbnN0IGR5ID0gcDIueSAtIHAxLnk7XG4gICAgcmV0dXJuIE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBBbmFseXplIG9wdGltaXphdGlvbiByZXN1bHRzIGFuZCBwcm92aWRlIHJlY29tbWVuZGF0aW9uc1xuICAgKi9cbiAgc3RhdGljIGFuYWx5emVPcHRpbWl6YXRpb24ocmVzdWx0OiBPcHRpbWl6YXRpb25SZXN1bHQpOiBzdHJpbmcge1xuICAgIGNvbnN0IHsgdG90YWxEaXN0YW5jZSwgaW1wcm92ZW1lbnQgfSA9IHJlc3VsdDtcbiAgICBcbiAgICBsZXQgYW5hbHlzaXMgPSBgUGF0aCBvcHRpbWl6YXRpb24gY29tcGxldGU6XFxuYDtcbiAgICBhbmFseXNpcyArPSBg4oCiIFRvdGFsIHRyYXZlbCBkaXN0YW5jZTogJHt0b3RhbERpc3RhbmNlLnRvRml4ZWQoMSl9IHVuaXRzXFxuYDtcbiAgICBhbmFseXNpcyArPSBg4oCiIEltcHJvdmVtZW50OiAke2ltcHJvdmVtZW50LnRvRml4ZWQoMSl9JVxcbmA7XG4gICAgXG4gICAgaWYgKGltcHJvdmVtZW50ID4gMjApIHtcbiAgICAgIGFuYWx5c2lzICs9IGDigKIgRXhjZWxsZW50IG9wdGltaXphdGlvbiEgU2lnbmlmaWNhbnQgdHJhdmVsIHRpbWUgcmVkdWN0aW9uLmA7XG4gICAgfSBlbHNlIGlmIChpbXByb3ZlbWVudCA+IDEwKSB7XG4gICAgICBhbmFseXNpcyArPSBg4oCiIEdvb2Qgb3B0aW1pemF0aW9uIGFjaGlldmVkLmA7XG4gICAgfSBlbHNlIGlmIChpbXByb3ZlbWVudCA+IDUpIHtcbiAgICAgIGFuYWx5c2lzICs9IGDigKIgTW9kZXN0IGltcHJvdmVtZW50cyBtYWRlLmA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFuYWx5c2lzICs9IGDigKIgUGF0aCBvcmRlciB3YXMgYWxyZWFkeSBxdWl0ZSBlZmZpY2llbnQuYDtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGFuYWx5c2lzO1xuICB9XG59Il0sIm5hbWVzIjpbIlBhdGhPcHRpbWl6ZXIiLCJvcHRpbWl6ZVBhdGhzIiwicGF0aHMiLCJvcHRpb25zIiwiZW5hYmxlUGF0aE1lcmdpbmciLCJlbmFibGUyT3B0IiwibWVyZ2VUaHJlc2hvbGQiLCJtYXhJdGVyYXRpb25zIiwibGVuZ3RoIiwidG90YWxEaXN0YW5jZSIsImltcHJvdmVtZW50Iiwib3JpZ2luYWxEaXN0YW5jZSIsImNhbGN1bGF0ZVRvdGFsVHJhdmVsRGlzdGFuY2UiLCJvcHRpbWl6ZWRQYXRocyIsIm1lcmdlUGF0aHMiLCJhcHBseTJPcHQiLCJncmVlZHlJbXByb3ZlbWVudCIsImZpbmFsRGlzdGFuY2UiLCJ0aHJlc2hvbGQiLCJtZXJnZWQiLCJ1c2VkIiwiU2V0IiwiaSIsImhhcyIsImN1cnJlbnRQYXRoIiwiYWRkIiwiZm91bmRNZXJnZSIsImoiLCJvdGhlclBhdGgiLCJtZXJnZVJlc3VsdCIsInRyeU1lcmdlUGF0aHMiLCJwdXNoIiwicGF0aDEiLCJwYXRoMiIsInAxU3RhcnQiLCJwMUVuZCIsInAyU3RhcnQiLCJwMkVuZCIsImNvbm5lY3Rpb25zIiwiZGlzdCIsImRpc3RhbmNlIiwibWVyZ2UiLCJzbGljZSIsInJldmVyc2UiLCJiZXN0IiwicmVkdWNlIiwibWluIiwiY29ubiIsImN1cnJlbnRPcmRlciIsIm1hcCIsIl8iLCJpbmRleCIsImJlc3REaXN0YW5jZSIsImNhbGN1bGF0ZVBhdGhPcmRlckRpc3RhbmNlIiwiaW1wcm92ZWQiLCJpdGVyYXRpb24iLCJuZXdPcmRlciIsInN3YXAyT3B0IiwibmV3RGlzdGFuY2UiLCJvcmRlciIsIm5leHRQYXRoIiwiY3VycmVudEVuZCIsIm5leHRTdGFydCIsIm1hZGVJbXByb3ZlbWVudCIsImNhbGN1bGF0ZVRyYXZlbEJldHdlZW4iLCJwcmV2UGF0aCIsImFkdmFuY2VkU2ltcGxpZmljYXRpb24iLCJiYXNlRXBzaWxvbiIsInBhdGgiLCJhZGFwdGl2ZVNpbXBsaWZ5IiwiY3VydmF0dXJlIiwiYW5hbHl6ZUN1cnZhdHVyZSIsImFkYXB0aXZlRXBzaWxvbiIsImRvdWdsYXNQZXVja2VyIiwidG90YWxDdXJ2YXR1cmUiLCJzZWdtZW50cyIsInAxIiwicDIiLCJwMyIsInYxIiwieCIsInkiLCJ2MiIsImFuZ2xlMSIsIk1hdGgiLCJhdGFuMiIsImFuZ2xlMiIsImFuZ2xlRGlmZiIsImFicyIsIlBJIiwicG9pbnRzIiwiZXBzaWxvbiIsIm1heERpc3RhbmNlIiwibWF4SW5kZXgiLCJlbmQiLCJwZXJwZW5kaWN1bGFyRGlzdGFuY2UiLCJsZWZ0IiwicmlnaHQiLCJwb2ludCIsImxpbmVTdGFydCIsImxpbmVFbmQiLCJBIiwiQiIsIkMiLCJzcXJ0IiwiZHgiLCJkeSIsImFuYWx5emVPcHRpbWl6YXRpb24iLCJyZXN1bHQiLCJhbmFseXNpcyIsInRvRml4ZWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./lib/path-optimization.ts\n");

/***/ }),

/***/ "(ssr)/./lib/utils.ts":
/*!**********************!*\
  !*** ./lib/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(ssr)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n\n\nfunction cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9saWIvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRDO0FBQ0o7QUFFakMsU0FBU0UsR0FBRyxHQUFHQyxNQUFvQjtJQUN4QyxPQUFPRix1REFBT0EsQ0FBQ0QsMENBQUlBLENBQUNHO0FBQ3RCIiwic291cmNlcyI6WyIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L2xpYi91dGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIENsYXNzVmFsdWUsIGNsc3ggfSBmcm9tIFwiY2xzeFwiXG5pbXBvcnQgeyB0d01lcmdlIH0gZnJvbSBcInRhaWx3aW5kLW1lcmdlXCJcblxuZXhwb3J0IGZ1bmN0aW9uIGNuKC4uLmlucHV0czogQ2xhc3NWYWx1ZVtdKSB7XG4gIHJldHVybiB0d01lcmdlKGNsc3goaW5wdXRzKSlcbn0iXSwibmFtZXMiOlsiY2xzeCIsInR3TWVyZ2UiLCJjbiIsImlucHV0cyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./lib/utils.ts\n");

/***/ }),

/***/ "(ssr)/./lib/variable-line-weight.ts":
/*!*************************************!*\
  !*** ./lib/variable-line-weight.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineWeightSimulator: () => (/* binding */ LineWeightSimulator),\n/* harmony export */   LineWeightStyle: () => (/* binding */ LineWeightStyle)\n/* harmony export */ });\n// Variable Line Weight Simulation\n// Creates the illusion of thick/thin lines using multiple parallel paths\nvar LineWeightStyle = /*#__PURE__*/ function(LineWeightStyle) {\n    LineWeightStyle[\"PARALLEL\"] = \"Parallel Lines\";\n    LineWeightStyle[\"OUTLINE\"] = \"Outline Fill\";\n    LineWeightStyle[\"SCRIBBLE\"] = \"Scribble Fill\";\n    LineWeightStyle[\"ZIGZAG\"] = \"Zigzag Fill\"; // Tight zigzag pattern\n    return LineWeightStyle;\n}({});\nclass LineWeightSimulator {\n    /**\n   * Convert weighted paths to multiple drawable paths\n   */ static simulateVariableWeight(weightedPaths) {\n        const outputPaths = [];\n        for (const weightedPath of weightedPaths){\n            const simulatedPaths = this.simulateWeight(weightedPath.centerline, weightedPath.weight, weightedPath.style);\n            outputPaths.push(...simulatedPaths);\n        }\n        return outputPaths;\n    }\n    /**\n   * Simulate line weight for a single path\n   */ static simulateWeight(centerline, weight, style) {\n        if (centerline.length < 2) return [\n            centerline\n        ];\n        if (weight <= 1.0) return [\n            centerline\n        ]; // No simulation needed for thin lines\n        switch(style){\n            case \"Parallel Lines\":\n                return this.createParallelLines(centerline, weight);\n            case \"Outline Fill\":\n                return this.createOutlineFill(centerline, weight);\n            case \"Scribble Fill\":\n                return this.createScribbleFill(centerline, weight);\n            case \"Zigzag Fill\":\n                return this.createZigzagFill(centerline, weight);\n            default:\n                return this.createParallelLines(centerline, weight);\n        }\n    }\n    /**\n   * Create multiple parallel lines to simulate thickness\n   */ static createParallelLines(centerline, weight) {\n        const paths = [];\n        const thickness = (weight - 1) * 2; // Convert weight to actual thickness\n        const numLines = Math.max(1, Math.ceil(weight * 2)); // More lines = thicker appearance\n        for(let i = 0; i < numLines; i++){\n            const offset = (i - (numLines - 1) / 2) * (thickness / Math.max(1, numLines - 1));\n            const offsetPath = this.offsetPath(centerline, offset);\n            if (offsetPath.length > 1) {\n                paths.push(offsetPath);\n            }\n        }\n        return paths;\n    }\n    /**\n   * Create outline and fill pattern\n   */ static createOutlineFill(centerline, weight) {\n        const paths = [];\n        const thickness = (weight - 1) * 2;\n        // Create outline paths\n        const topOutline = this.offsetPath(centerline, thickness / 2);\n        const bottomOutline = this.offsetPath(centerline, -thickness / 2);\n        if (topOutline.length > 1) paths.push(topOutline);\n        if (bottomOutline.length > 1) paths.push(bottomOutline);\n        // Create fill lines between outlines\n        const fillSpacing = Math.max(0.5, thickness / 8);\n        const numFillLines = Math.floor(thickness / fillSpacing) - 1;\n        for(let i = 1; i <= numFillLines; i++){\n            const offset = -thickness / 2 + i * fillSpacing;\n            const fillPath = this.offsetPath(centerline, offset);\n            if (fillPath.length > 1) {\n                // Make fill lines slightly shorter for artistic effect\n                const shortened = this.shortenPath(fillPath, 0.1);\n                paths.push(shortened);\n            }\n        }\n        return paths;\n    }\n    /**\n   * Create loose scribble fill pattern\n   */ static createScribbleFill(centerline, weight) {\n        const paths = [];\n        const thickness = (weight - 1) * 2;\n        // Add the main centerline\n        paths.push(centerline);\n        // Create scribble patterns around the centerline\n        const scribbleIntensity = Math.min(thickness, 4); // Limit intensity\n        const numScribbles = Math.ceil(scribbleIntensity * 3);\n        for(let i = 0; i < numScribbles; i++){\n            const scribblePath = this.createScribbleAroundPath(centerline, thickness, i);\n            if (scribblePath.length > 1) {\n                paths.push(scribblePath);\n            }\n        }\n        return paths;\n    }\n    /**\n   * Create tight zigzag fill pattern\n   */ static createZigzagFill(centerline, weight) {\n        const paths = [];\n        const thickness = (weight - 1) * 2;\n        // Create zigzag pattern that fills the thick line area\n        const zigzagPath = this.createZigzagPattern(centerline, thickness);\n        if (zigzagPath.length > 1) {\n            paths.push(zigzagPath);\n        }\n        // Add outline for definition\n        const topOutline = this.offsetPath(centerline, thickness / 2);\n        const bottomOutline = this.offsetPath(centerline, -thickness / 2);\n        if (topOutline.length > 1) paths.push(topOutline);\n        if (bottomOutline.length > 1) paths.push(bottomOutline);\n        return paths;\n    }\n    /**\n   * Offset a path by a perpendicular distance\n   */ static offsetPath(path, distance) {\n        if (path.length < 2) return path;\n        if (Math.abs(distance) < 0.1) return path; // No offset needed\n        const offsetPath = [];\n        for(let i = 0; i < path.length; i++){\n            const current = path[i];\n            let normal;\n            if (i === 0) {\n                // First point - use direction to next point\n                const next = path[1];\n                normal = this.calculateNormal(current, next);\n            } else if (i === path.length - 1) {\n                // Last point - use direction from previous point\n                const prev = path[i - 1];\n                normal = this.calculateNormal(prev, current);\n            } else {\n                // Middle point - average of two normals\n                const prev = path[i - 1];\n                const next = path[i + 1];\n                const normal1 = this.calculateNormal(prev, current);\n                const normal2 = this.calculateNormal(current, next);\n                normal = {\n                    x: (normal1.x + normal2.x) / 2,\n                    y: (normal1.y + normal2.y) / 2\n                };\n                // Normalize\n                const length = Math.sqrt(normal.x * normal.x + normal.y * normal.y);\n                if (length > 0) {\n                    normal.x /= length;\n                    normal.y /= length;\n                }\n            }\n            offsetPath.push({\n                x: current.x + normal.x * distance,\n                y: current.y + normal.y * distance\n            });\n        }\n        return offsetPath;\n    }\n    /**\n   * Calculate perpendicular normal vector\n   */ static calculateNormal(p1, p2) {\n        const dx = p2.x - p1.x;\n        const dy = p2.y - p1.y;\n        const length = Math.sqrt(dx * dx + dy * dy);\n        if (length === 0) return {\n            x: 0,\n            y: 1\n        };\n        // Perpendicular vector (rotated 90 degrees)\n        return {\n            x: -dy / length,\n            y: dx / length\n        };\n    }\n    /**\n   * Shorten a path from both ends\n   */ static shortenPath(path, factor) {\n        if (path.length < 3) return path;\n        const removeCount = Math.floor(path.length * factor / 2);\n        const startIndex = Math.max(0, removeCount);\n        const endIndex = Math.min(path.length, path.length - removeCount);\n        return path.slice(startIndex, endIndex);\n    }\n    /**\n   * Create scribble pattern around a path\n   */ static createScribbleAroundPath(centerline, thickness, seed) {\n        const scribble = [];\n        const wobbleAmount = thickness / 4;\n        // Use seed for deterministic randomness\n        let random = this.seededRandom(seed);\n        for(let i = 0; i < centerline.length; i++){\n            const point = centerline[i];\n            // Add some random wobble\n            const wobbleX = (random() - 0.5) * wobbleAmount;\n            const wobbleY = (random() - 0.5) * wobbleAmount;\n            scribble.push({\n                x: point.x + wobbleX,\n                y: point.y + wobbleY\n            });\n            // Occasionally add extra random points for more organic feel\n            if (random() < 0.3 && i < centerline.length - 1) {\n                const nextPoint = centerline[i + 1];\n                const midX = (point.x + nextPoint.x) / 2 + (random() - 0.5) * wobbleAmount;\n                const midY = (point.y + nextPoint.y) / 2 + (random() - 0.5) * wobbleAmount;\n                scribble.push({\n                    x: midX,\n                    y: midY\n                });\n            }\n        }\n        return scribble;\n    }\n    /**\n   * Create zigzag pattern along a path\n   */ static createZigzagPattern(centerline, thickness) {\n        const zigzag = [];\n        const amplitude = thickness / 2;\n        const frequency = Math.max(2, thickness); // Zigzag frequency\n        for(let i = 0; i < centerline.length - 1; i++){\n            const current = centerline[i];\n            const next = centerline[i + 1];\n            const normal = this.calculateNormal(current, next);\n            // Calculate how many zigzag segments fit in this line segment\n            const segmentLength = Math.sqrt((next.x - current.x) ** 2 + (next.y - current.y) ** 2);\n            const numZigs = Math.max(1, Math.floor(segmentLength / frequency));\n            for(let j = 0; j <= numZigs; j++){\n                const t = j / numZigs;\n                const basePoint = {\n                    x: current.x + (next.x - current.x) * t,\n                    y: current.y + (next.y - current.y) * t\n                };\n                // Alternate sides for zigzag\n                const side = j % 2 === 0 ? 1 : -1;\n                const zigzagPoint = {\n                    x: basePoint.x + normal.x * amplitude * side,\n                    y: basePoint.y + normal.y * amplitude * side\n                };\n                zigzag.push(zigzagPoint);\n            }\n        }\n        return zigzag;\n    }\n    /**\n   * Analyze path to determine appropriate line weight\n   * Based on contrast and context\n   */ static analyzeLineWeight(path, imageData, context = 'detail') {\n        if (path.length < 2) return 1.0;\n        // Sample points along the path to analyze contrast\n        const samplePoints = Math.min(10, path.length);\n        let totalContrast = 0;\n        let validSamples = 0;\n        for(let i = 0; i < samplePoints; i++){\n            const index = Math.floor(i / (samplePoints - 1) * (path.length - 1));\n            const point = path[index];\n            const contrast = this.measureLocalContrast(point, imageData);\n            if (contrast >= 0) {\n                totalContrast += contrast;\n                validSamples++;\n            }\n        }\n        if (validSamples === 0) return 1.0;\n        const avgContrast = totalContrast / validSamples;\n        // Determine weight based on context and contrast\n        switch(context){\n            case 'outline':\n                // Outlines should be thicker, especially high-contrast ones\n                return 1.0 + avgContrast * 2.0;\n            case 'detail':\n                // Detail lines vary based on contrast\n                return 1.0 + avgContrast * 1.0;\n            case 'fill':\n                // Fill lines should be thinner\n                return Math.max(0.5, 1.0 - avgContrast * 0.5);\n            default:\n                return 1.0 + avgContrast;\n        }\n    }\n    /**\n   * Measure local contrast around a point\n   */ static measureLocalContrast(point, imageData) {\n        const x = Math.floor(point.x);\n        const y = Math.floor(point.y);\n        const { width, height, data } = imageData;\n        if (x < 1 || x >= width - 1 || y < 1 || y >= height - 1) return -1;\n        // Sample 3x3 neighborhood\n        let minBrightness = 255;\n        let maxBrightness = 0;\n        for(let dy = -1; dy <= 1; dy++){\n            for(let dx = -1; dx <= 1; dx++){\n                const idx = ((y + dy) * width + (x + dx)) * 4;\n                const brightness = (data[idx] + data[idx + 1] + data[idx + 2]) / 3;\n                minBrightness = Math.min(minBrightness, brightness);\n                maxBrightness = Math.max(maxBrightness, brightness);\n            }\n        }\n        // Return normalized contrast (0-1)\n        return (maxBrightness - minBrightness) / 255;\n    }\n    /**\n   * Simple seeded random number generator\n   */ static seededRandom(seed) {\n        let state = seed;\n        return function() {\n            state = (state * 1664525 + 1013904223) % 4294967296;\n            return state / 4294967296;\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/variable-line-weight.ts\n");

/***/ }),

/***/ "(ssr)/./lib/vectorization-engine.ts":
/*!*************************************!*\
  !*** ./lib/vectorization-engine.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorizationEngine: () => (/* binding */ VectorizationEngine),\n/* harmony export */   VectorizationMode: () => (/* binding */ VectorizationMode)\n/* harmony export */ });\n/* harmony import */ var _curve_fitting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./curve-fitting */ \"(ssr)/./lib/curve-fitting.ts\");\n/* harmony import */ var _advanced_hatching__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./advanced-hatching */ \"(ssr)/./lib/advanced-hatching.ts\");\n/* harmony import */ var _variable_line_weight__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./variable-line-weight */ \"(ssr)/./lib/variable-line-weight.ts\");\n/* harmony import */ var _path_optimization__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./path-optimization */ \"(ssr)/./lib/path-optimization.ts\");\n// FILE: lib/vectorization-engine.ts\n// Professional Vectorization Engine with Advanced Features\n\n\n\n\nvar VectorizationMode = /*#__PURE__*/ function(VectorizationMode) {\n    VectorizationMode[\"COLOR_REGIONS\"] = \"Color Regions\";\n    VectorizationMode[\"CENTERLINE\"] = \"Centerline\";\n    VectorizationMode[\"HATCHING\"] = \"Hatching\";\n    return VectorizationMode;\n}({});\nclass VectorizationEngine {\n    /**\n   * Main router function with advanced processing pipeline\n   */ static process(canvas, mode, options, advancedOptions = {}) {\n        console.log(`🎯 Starting ${mode} processing with advanced features...`);\n        // Step 1: Initial vectorization\n        let paths = [];\n        switch(mode){\n            case \"Color Regions\":\n                paths = this.traceColorRegions(canvas, options.numColors);\n                break;\n            case \"Centerline\":\n                paths = this.traceCenterlines(canvas, options.threshold, options.proximity);\n                break;\n            case \"Hatching\":\n                paths = this.generateAdvancedHatching(canvas, options, advancedOptions);\n                break;\n            default:\n                return [];\n        }\n        console.log(`📊 Initial vectorization: ${paths.length} paths`);\n        // Step 2: Apply variable line weight (if enabled)\n        if (advancedOptions.enableVariableWeight && mode !== \"Hatching\") {\n            paths = this.applyVariableLineWeight(paths, canvas, advancedOptions);\n        }\n        // Step 3: Apply path optimization\n        if (advancedOptions.enablePathOptimization) {\n            const optimizationResult = _path_optimization__WEBPACK_IMPORTED_MODULE_3__.PathOptimizer.optimizePaths(paths, {\n                enablePathMerging: advancedOptions.enablePathMerging,\n                enable2Opt: advancedOptions.enable2Opt,\n                mergeThreshold: 5.0,\n                maxIterations: 100\n            });\n            paths = optimizationResult.paths;\n            console.log(`🔧 Path optimization: ${optimizationResult.improvement.toFixed(1)}% improvement`);\n        }\n        console.log(`✅ Final result: ${paths.length} optimized paths`);\n        return paths;\n    }\n    /**\n   * Process and return curves instead of paths (for advanced G-code generation)\n   */ static processWithCurves(canvas, mode, options, advancedOptions = {}) {\n        // Get initial paths\n        const paths = this.process(canvas, mode, options, advancedOptions);\n        if (!advancedOptions.enableCurveFitting) {\n            // Convert paths to simple line segments\n            return this.pathsToCurveSegments(paths);\n        }\n        console.log(`🎨 Applying Bézier curve fitting...`);\n        // Apply curve fitting to each path\n        let allCurves = [];\n        for (const path of paths){\n            const curves = _curve_fitting__WEBPACK_IMPORTED_MODULE_0__.CurveFitter.fitCurves(path, advancedOptions.curveTolerance || 2.0);\n            allCurves.push(...curves);\n        }\n        // Convert Bézier curves to arcs where possible (if enabled)\n        if (advancedOptions.enableArcConversion) {\n            console.log(`🔄 Converting to G2/G3 arcs...`);\n            allCurves = _curve_fitting__WEBPACK_IMPORTED_MODULE_0__.CurveFitter.convertToArcs(allCurves, 1.0);\n        }\n        const arcCount = allCurves.filter((c)=>c.type === 'arc').length;\n        const bezierCount = allCurves.filter((c)=>c.type === 'bezier').length;\n        console.log(`🎭 Curve fitting complete: ${arcCount} arcs, ${bezierCount} Bézier curves`);\n        return allCurves;\n    }\n    // --- STRATEGY A: Color Region Tracing ---\n    static traceColorRegions(canvas, numColors) {\n        console.log(`Executing COLOR_REGIONS strategy with ${numColors} colors.`);\n        const src = cv.imread(canvas);\n        const paths = [];\n        try {\n            // 1. Convert to RGB for better color clustering (Lab not available in OpenCV.js)\n            let rgb = new cv.Mat();\n            cv.cvtColor(src, rgb, cv.COLOR_RGBA2RGB);\n            // 2. Prepare data for K-means clustering\n            const samples = new cv.Mat(rgb.rows * rgb.cols, 3, cv.CV_32F);\n            // Fill samples matrix with RGB values\n            for(let i = 0; i < rgb.rows * rgb.cols; i++){\n                const pixelIndex = i * 3;\n                samples.data32F[pixelIndex] = rgb.data[pixelIndex]; // R\n                samples.data32F[pixelIndex + 1] = rgb.data[pixelIndex + 1]; // G\n                samples.data32F[pixelIndex + 2] = rgb.data[pixelIndex + 2]; // B\n            }\n            // 3. Apply K-means clustering\n            let labels = new cv.Mat();\n            let centers = new cv.Mat();\n            const criteria = new cv.TermCriteria(cv.TERM_CRITERIA_EPS + cv.TERM_CRITERIA_MAX_ITER, 20, 1.0);\n            cv.kmeans(samples, numColors, labels, criteria, 10, cv.KMEANS_RANDOM_CENTERS, centers);\n            // 4. Create quantized image\n            let quantized = new cv.Mat(rgb.rows, rgb.cols, cv.CV_8UC3);\n            for(let i = 0; i < rgb.rows * rgb.cols; i++){\n                const label = labels.data32S[i];\n                const centerIndex = label * 3;\n                const pixelIndex = i * 3;\n                quantized.data[pixelIndex] = centers.data32F[centerIndex];\n                quantized.data[pixelIndex + 1] = centers.data32F[centerIndex + 1];\n                quantized.data[pixelIndex + 2] = centers.data32F[centerIndex + 2];\n            }\n            // 5. For each color, create binary mask and find contours\n            for(let colorIndex = 0; colorIndex < numColors; colorIndex++){\n                let mask = new cv.Mat();\n                // Create mask for this color cluster\n                mask = cv.Mat.zeros(rgb.rows, rgb.cols, cv.CV_8UC1);\n                for(let i = 0; i < labels.total(); i++){\n                    if (labels.data32S[i] === colorIndex) {\n                        const y = Math.floor(i / rgb.cols);\n                        const x = i % rgb.cols;\n                        mask.ucharPtr(y, x)[0] = 255;\n                    }\n                }\n                // Find contours for this color region\n                let contours = new cv.MatVector();\n                let hierarchy = new cv.Mat();\n                cv.findContours(mask, contours, hierarchy, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE);\n                // Convert contours to paths\n                for(let i = 0; i < contours.size(); i++){\n                    const contour = contours.get(i);\n                    if (contour.total() > 10) {\n                        const path = [];\n                        // Extract points from contour\n                        for(let j = 0; j < contour.total(); j++){\n                            const point = contour.data32S;\n                            path.push({\n                                x: point[j * 2],\n                                y: point[j * 2 + 1]\n                            });\n                        }\n                        // Apply Douglas-Peucker simplification\n                        const simplified = this.douglasPeucker(path, 2.0);\n                        if (simplified.length >= 3) {\n                            paths.push(simplified);\n                        }\n                    }\n                }\n                mask.delete();\n                contours.delete();\n                hierarchy.delete();\n            }\n            // Cleanup\n            rgb.delete();\n            samples.delete();\n            labels.delete();\n            centers.delete();\n            quantized.delete();\n        } catch (error) {\n            console.error('Color region tracing error:', error);\n            // Fallback to simple thresholding\n            try {\n                let gray = new cv.Mat();\n                cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY);\n                let binary = new cv.Mat();\n                cv.threshold(gray, binary, 128, 255, cv.THRESH_BINARY);\n                let contours = new cv.MatVector();\n                let hierarchy = new cv.Mat();\n                cv.findContours(binary, contours, hierarchy, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE);\n                for(let i = 0; i < contours.size(); i++){\n                    const contour = contours.get(i);\n                    if (contour.total() > 10) {\n                        const path = [];\n                        for(let j = 0; j < contour.total(); j++){\n                            const point = contour.data32S;\n                            path.push({\n                                x: point[j * 2],\n                                y: point[j * 2 + 1]\n                            });\n                        }\n                        const simplified = this.douglasPeucker(path, 2.0);\n                        if (simplified.length >= 3) {\n                            paths.push(simplified);\n                        }\n                    }\n                }\n                gray.delete();\n                binary.delete();\n                contours.delete();\n                hierarchy.delete();\n            } catch (fallbackError) {\n                console.error('Fallback processing also failed:', fallbackError);\n            }\n        } finally{\n            src.delete();\n        }\n        return paths;\n    }\n    // --- STRATEGY B: Centerline Tracing ---\n    static traceCenterlines(canvas, threshold, proximity) {\n        console.log(`Executing CENTERLINE strategy with threshold ${threshold} and proximity ${proximity}.`);\n        const ctx = canvas.getContext('2d', {\n            willReadFrequently: true\n        });\n        if (!ctx) return [];\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        const width = canvas.width;\n        const height = canvas.height;\n        const segmentsByRow = Array.from({\n            length: height\n        }, ()=>[]);\n        for(let y = 0; y < height; y++){\n            let inSegment = false;\n            let x1 = 0;\n            for(let x = 0; x < width; x++){\n                const i = (y * width + x) * 4;\n                const gray = (data[i] + data[i + 1] + data[i + 2]) / 3;\n                const isBlack = gray < threshold;\n                if (isBlack && !inSegment) {\n                    inSegment = true;\n                    x1 = x;\n                } else if (!isBlack && inSegment) {\n                    inSegment = false;\n                    const x2 = x - 1;\n                    segmentsByRow[y].push({\n                        y,\n                        x1,\n                        x2,\n                        used: false,\n                        midX: (x1 + x2) / 2\n                    });\n                }\n            }\n            if (inSegment) {\n                const x2 = width - 1;\n                segmentsByRow[y].push({\n                    y,\n                    x1,\n                    x2,\n                    used: false,\n                    midX: (x1 + x2) / 2\n                });\n            }\n        }\n        // Stitch segments into paths using bidirectional tracing\n        const allPaths = [];\n        for(let y = 0; y < height; y++){\n            for (const segment of segmentsByRow[y]){\n                if (segment.used) continue;\n                let currentPath = [\n                    segment\n                ];\n                segment.used = true;\n                let currentSegment = segment;\n                // Trace upwards\n                for(let prevY = y - 1; prevY >= 0; prevY--){\n                    const prevSegment = this.findClosestUnusedSegment(currentSegment, segmentsByRow[prevY], proximity);\n                    if (prevSegment) {\n                        currentPath.unshift(prevSegment);\n                        prevSegment.used = true;\n                        currentSegment = prevSegment;\n                    } else {\n                        break;\n                    }\n                }\n                // Reset and trace downwards\n                currentSegment = segment;\n                for(let nextY = y + 1; nextY < height; nextY++){\n                    const nextSegment = this.findClosestUnusedSegment(currentSegment, segmentsByRow[nextY], proximity);\n                    if (nextSegment) {\n                        currentPath.push(nextSegment);\n                        nextSegment.used = true;\n                        currentSegment = nextSegment;\n                    } else {\n                        break;\n                    }\n                }\n                if (currentPath.length >= 3) {\n                    allPaths.push(currentPath);\n                }\n            }\n        }\n        // Convert to point paths\n        return allPaths.map((path)=>path.map((seg)=>({\n                    x: seg.midX,\n                    y: seg.y\n                })));\n    }\n    // --- STRATEGY C: Advanced Hatching ---\n    static generateAdvancedHatching(canvas, options, advancedOptions) {\n        const { numColors, hatchSpacing, hatchAngle } = options;\n        const hatchingStyle = advancedOptions.hatchingStyle || _advanced_hatching__WEBPACK_IMPORTED_MODULE_1__.HatchingStyle.PARALLEL;\n        console.log(`Executing ADVANCED HATCHING strategy: ${hatchingStyle}`);\n        const src = cv.imread(canvas);\n        const paths = [];\n        try {\n            // Convert to grayscale and quantize intensity levels\n            let gray = new cv.Mat();\n            cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY);\n            const step = 255 / numColors;\n            let quantized = new cv.Mat();\n            gray.copyTo(quantized);\n            for(let i = 0; i < quantized.rows * quantized.cols; i++){\n                const intensity = quantized.data[i];\n                const level = Math.floor(intensity / step);\n                quantized.data[i] = level * step;\n            }\n            // Generate hatching for each intensity level\n            for(let level = 0; level < numColors - 1; level++){\n                const targetIntensity = level * step;\n                const intensity = 1 - level / (numColors - 1); // Normalized intensity\n                // Create mask for this intensity level\n                let mask = new cv.Mat();\n                cv.threshold(quantized, mask, targetIntensity + step / 2, 255, cv.THRESH_BINARY_INV);\n                // Generate advanced hatching\n                const hatchPaths = _advanced_hatching__WEBPACK_IMPORTED_MODULE_1__.AdvancedHatcher.generateHatching(mask, intensity, hatchingStyle, hatchSpacing, hatchAngle, canvas.width, canvas.height);\n                paths.push(...hatchPaths);\n                mask.delete();\n            }\n            gray.delete();\n            quantized.delete();\n        } catch (error) {\n            console.error('Advanced hatching error:', error);\n            // Fallback to simple hatching\n            return this.generateSimpleHatching(canvas, numColors, hatchSpacing, hatchAngle);\n        } finally{\n            src.delete();\n        }\n        return paths;\n    }\n    // Fallback simple hatching method\n    static generateSimpleHatching(canvas, numColors, spacing, angle) {\n        const src = cv.imread(canvas);\n        const paths = [];\n        try {\n            let gray = new cv.Mat();\n            cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY);\n            const step = 255 / numColors;\n            let quantized = new cv.Mat();\n            gray.copyTo(quantized);\n            for(let i = 0; i < quantized.rows * quantized.cols; i++){\n                const intensity = quantized.data[i];\n                const level = Math.floor(intensity / step);\n                quantized.data[i] = level * step;\n            }\n            for(let level = 0; level < numColors - 1; level++){\n                const targetIntensity = level * step;\n                let mask = new cv.Mat();\n                cv.threshold(quantized, mask, targetIntensity + step / 2, 255, cv.THRESH_BINARY_INV);\n                const hatchPaths = this.generateHatchLines(canvas.width, canvas.height, spacing * (level + 1), angle, mask);\n                paths.push(...hatchPaths);\n                mask.delete();\n            }\n            gray.delete();\n            quantized.delete();\n        } catch (error) {\n            console.error('Simple hatching fallback error:', error);\n        } finally{\n            src.delete();\n        }\n        return paths;\n    }\n    // Helper function for hatching\n    static generateHatchLines(width, height, spacing, angle, mask) {\n        const paths = [];\n        const radians = angle * Math.PI / 180;\n        const cos = Math.cos(radians);\n        const sin = Math.sin(radians);\n        // Generate parallel lines across the canvas\n        const diagonal = Math.sqrt(width * width + height * height);\n        for(let offset = -diagonal; offset < diagonal; offset += spacing){\n            const path = [];\n            // Calculate line endpoints\n            const startX = -diagonal * cos + offset * -sin;\n            const startY = -diagonal * sin + offset * cos;\n            const endX = diagonal * cos + offset * -sin;\n            const endY = diagonal * sin + offset * cos;\n            // Sample points along the line and check against mask\n            const steps = Math.floor(diagonal * 2);\n            let inRegion = false;\n            for(let step = 0; step <= steps; step++){\n                const t = step / steps;\n                const x = Math.round(startX + (endX - startX) * t);\n                const y = Math.round(startY + (endY - startY) * t);\n                if (x >= 0 && x < width && y >= 0 && y < height) {\n                    const pixelIndex = y * width + x;\n                    const isInMask = mask.data[pixelIndex] > 0;\n                    if (isInMask && !inRegion) {\n                        // Start new line segment\n                        path.push({\n                            x,\n                            y\n                        });\n                        inRegion = true;\n                    } else if (!isInMask && inRegion) {\n                        // End current line segment\n                        if (path.length > 1) {\n                            paths.push([\n                                ...path\n                            ]);\n                        }\n                        path.length = 0;\n                        inRegion = false;\n                    } else if (isInMask && inRegion) {\n                        // Continue current segment\n                        path.push({\n                            x,\n                            y\n                        });\n                    }\n                }\n            }\n            // Add final segment if needed\n            if (path.length > 1) {\n                paths.push(path);\n            }\n        }\n        return paths;\n    }\n    // --- UTILITY FUNCTIONS ---\n    static findClosestUnusedSegment(from, candidates, proximity) {\n        let bestMatch = null;\n        let minDistance = Infinity;\n        for (const to of candidates){\n            if (to.used) continue;\n            const horizontalDistance = Math.max(0, Math.max(from.x1, to.x1) - Math.min(from.x2, to.x2));\n            if (horizontalDistance <= proximity * 2) {\n                const midPointDistance = Math.abs(from.midX - to.midX);\n                const totalDistance = midPointDistance + horizontalDistance * 0.5;\n                if (totalDistance < minDistance) {\n                    minDistance = totalDistance;\n                    bestMatch = to;\n                }\n            }\n        }\n        return bestMatch;\n    }\n    static douglasPeucker(points, epsilon) {\n        if (points.length <= 2) return points;\n        let maxDistance = 0;\n        let maxIndex = 0;\n        const end = points.length - 1;\n        for(let i = 1; i < end; i++){\n            const distance = this.perpendicularDistance(points[i], points[0], points[end]);\n            if (distance > maxDistance) {\n                maxDistance = distance;\n                maxIndex = i;\n            }\n        }\n        if (maxDistance > epsilon) {\n            const left = this.douglasPeucker(points.slice(0, maxIndex + 1), epsilon);\n            const right = this.douglasPeucker(points.slice(maxIndex), epsilon);\n            return [\n                ...left.slice(0, -1),\n                ...right\n            ];\n        } else {\n            return [\n                points[0],\n                points[end]\n            ];\n        }\n    }\n    static perpendicularDistance(point, lineStart, lineEnd) {\n        const A = lineEnd.y - lineStart.y;\n        const B = lineStart.x - lineEnd.x;\n        const C = lineEnd.x * lineStart.y - lineStart.x * lineEnd.y;\n        return Math.abs(A * point.x + B * point.y + C) / Math.sqrt(A * A + B * B);\n    }\n    // --- HELPER METHODS ---\n    /**\n   * Apply variable line weight to paths\n   */ static applyVariableLineWeight(paths, canvas, advancedOptions) {\n        console.log(`🎨 Applying variable line weight...`);\n        const ctx = canvas.getContext('2d');\n        if (!ctx) return paths;\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const weightedPaths = paths.map((path)=>({\n                centerline: path,\n                weight: _variable_line_weight__WEBPACK_IMPORTED_MODULE_2__.LineWeightSimulator.analyzeLineWeight(path, imageData, 'detail'),\n                style: advancedOptions.lineWeightStyle || _variable_line_weight__WEBPACK_IMPORTED_MODULE_2__.LineWeightStyle.PARALLEL\n            }));\n        const simulatedPaths = _variable_line_weight__WEBPACK_IMPORTED_MODULE_2__.LineWeightSimulator.simulateVariableWeight(weightedPaths);\n        console.log(`📏 Line weight simulation: ${paths.length} → ${simulatedPaths.length} paths`);\n        return simulatedPaths;\n    }\n    /**\n   * Convert simple paths to curve segments (for compatibility)\n   */ static pathsToCurveSegments(paths) {\n        const curves = [];\n        for (const path of paths){\n            if (path.length < 2) continue;\n            for(let i = 0; i < path.length - 1; i++){\n                // Create simple linear \"bezier\" curves\n                const start = path[i];\n                const end = path[i + 1];\n                const control1 = {\n                    x: start.x + (end.x - start.x) * 0.33,\n                    y: start.y + (end.y - start.y) * 0.33\n                };\n                const control2 = {\n                    x: start.x + (end.x - start.x) * 0.67,\n                    y: start.y + (end.y - start.y) * 0.67\n                };\n                curves.push({\n                    start,\n                    control1,\n                    control2,\n                    end,\n                    type: 'bezier'\n                });\n            }\n        }\n        return curves;\n    }\n    // --- PATH SORTING ---\n    static sortPathsForPrinting(paths) {\n        // Use the advanced path optimization for better results\n        const optimizationResult = _path_optimization__WEBPACK_IMPORTED_MODULE_3__.PathOptimizer.optimizePaths(paths, {\n            enablePathMerging: true,\n            enable2Opt: true,\n            mergeThreshold: 5.0,\n            maxIterations: 50\n        });\n        console.log(`🔄 Path sorting optimization: ${optimizationResult.improvement.toFixed(1)}% improvement`);\n        return optimizationResult.paths;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./lib/vectorization-engine.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fcomponents%2FImageProcessor.tsx%22%2C%22ids%22%3A%5B%22ImageProcessor%22%5D%7D&server=true!":
/*!******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fcomponents%2FImageProcessor.tsx%22%2C%22ids%22%3A%5B%22ImageProcessor%22%5D%7D&server=true! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./components/ImageProcessor.tsx */ \"(ssr)/./components/ImageProcessor.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGY29tcG9uZW50cyUyRkltYWdlUHJvY2Vzc29yLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMkltYWdlUHJvY2Vzc29yJTIyJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSwwS0FBcUoiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIkltYWdlUHJvY2Vzc29yXCJdICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9jb21wb25lbnRzL0ltYWdlUHJvY2Vzc29yLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fcomponents%2FImageProcessor.tsx%22%2C%22ids%22%3A%5B%22ImageProcessor%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/async-metadata.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/async-metadata.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/metadata/metadata-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmtlbCUyRkRlc2t0b3AlMkZpbWFnZWdlbiUyRmltYWdlLXRvLWdjb2RlLW5leHQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGa2VsJTJGRGVza3RvcCUyRmltYWdlZ2VuJTJGaW1hZ2UtdG8tZ2NvZGUtbmV4dCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGaHR0cC1hY2Nlc3MtZmFsbGJhY2slMkZlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGa2VsJTJGRGVza3RvcCUyRmltYWdlZ2VuJTJGaW1hZ2UtdG8tZ2NvZGUtbmV4dCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmxheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmtlbCUyRkRlc2t0b3AlMkZpbWFnZWdlbiUyRmltYWdlLXRvLWdjb2RlLW5leHQlMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZtZXRhZGF0YSUyRmFzeW5jLW1ldGFkYXRhLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRmhvbWUlMkZrZWwlMkZEZXNrdG9wJTJGaW1hZ2VnZW4lMkZpbWFnZS10by1nY29kZS1uZXh0JTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbWV0YWRhdGElMkZtZXRhZGF0YS1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZob21lJTJGa2VsJTJGRGVza3RvcCUyRmltYWdlZ2VuJTJGaW1hZ2UtdG8tZ2NvZGUtbmV4dCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLG9PQUEySTtBQUMzSTtBQUNBLDBPQUE4STtBQUM5STtBQUNBLDBPQUE4STtBQUM5STtBQUNBLG9SQUFtSztBQUNuSztBQUNBLHdPQUE2STtBQUM3STtBQUNBLDRQQUF1SjtBQUN2SjtBQUNBLGtRQUEwSjtBQUMxSjtBQUNBLHNRQUE0SiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LXNlZ21lbnQuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2h0dHAtYWNjZXNzLWZhbGxiYWNrL2Vycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUva2VsL0Rlc2t0b3AvaW1hZ2VnZW4vaW1hZ2UtdG8tZ2NvZGUtbmV4dC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL21ldGFkYXRhL2FzeW5jLW1ldGFkYXRhLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvaG9tZS9rZWwvRGVza3RvcC9pbWFnZWdlbi9pbWFnZS10by1nY29kZS1uZXh0L25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbWV0YWRhdGEvbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9ob21lL2tlbC9EZXNrdG9wL2ltYWdlZ2VuL2ltYWdlLXRvLWdjb2RlLW5leHQvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fhttp-access-fallback%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fasync-metadata.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fmetadata%2Fmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22app%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@radix-ui","vendor-chunks/react-remove-scroll","vendor-chunks/lucide-react","vendor-chunks/@swc","vendor-chunks/@floating-ui","vendor-chunks/react-style-singleton","vendor-chunks/react-remove-scroll-bar","vendor-chunks/use-callback-ref","vendor-chunks/use-sidecar","vendor-chunks/tslib","vendor-chunks/tailwind-merge","vendor-chunks/clsx","vendor-chunks/class-variance-authority","vendor-chunks/get-nonce","vendor-chunks/aria-hidden"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fkel%2FDesktop%2Fimagegen%2Fimage-to-gcode-next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();